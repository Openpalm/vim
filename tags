!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$FZF_DEFAULT_COMMAND	rcs/init.vim	/^  let $FZF_DEFAULT_COMMAND = 'rg --files --no-messages "" .'$/;"	v
<C-i>	rcs/init.vim	/^map <C-i> :TagbarToggle<CR>$/;"	m
<C-j>	rcs/init.vim	/^inoremap <C-j> <Esc>:call search(BC_GetChar(), "W")<CR>a$/;"	m
<F9>	rcs/init.vim	/^nnoremap <F9> :Explore<CR>$/;"	m
<Leader>fr	bundle/vim-scala/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>fr :FufFile <c-r>=scala#GetRootDirForFuzzyFinder('%:p:h')<cr><cr>$/;"	m
<Leader>fs	bundle/vim-scala/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>fs :FufFile <c-r>=scala#GetMainDirForFuzzyFinder('%:p:h')<cr><cr>$/;"	m
<Leader>ft	bundle/vim-scala/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>ft :FufFile <c-r>=scala#GetTestDirForFuzzyFinder('%:p:h')<cr><cr>$/;"	m
<SID>:	bundle/vim-fugitive/autoload/fugitive.vim	/^nnoremap <SID>: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<leader>f	rcs/init.vim	/^  nnoremap <leader>f :CtrlP<Space><cr>$/;"	m
<leader>f	rcs/init.vim	/^  nnoremap <leader>f :FzfFiles<cr>$/;"	m
<leader>q	rcs/init.vim	/^nmap <script> <silent> <leader>q :call ToggleQuickfixList()<CR>$/;"	m
<leader>r	rcs/init.vim	/^map <leader>r :!ctags -R -f .\/.tags .<CR>$/;"	m
<leader>t	rcs/init.vim	/^  nnoremap <leader>t :CtrlPTag<Space><cr>$/;"	m
<leader>t	rcs/init.vim	/^  nnoremap <leader>t :FzfTags<cr>$/;"	m
<leader>u	rcs/init.vim	/^  nnoremap <leader>u :call fzf#vim#tags("'".expand('<cword>'))<cr>$/;"	m
<tab>	rcs/init.vim	/^inoremap <expr><tab> pumvisible() ? "\\<c-n>" : "\\<tab>"$/;"	m
AddHeader	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:AddHeader(key, value) abort$/;"	f
AddSection	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:AddSection(label, lines, ...) abort$/;"	f
AddToClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:AddToClasspath(classpath, path) " {{{2$/;"	f
Aliases	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Aliases(dir) abort$/;"	f
Args	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:Args() " {{{2$/;"	f
Array	bundle/emmet-vim/docs/static/js/jquery-latest.js	/^		Array.prototype.push.apply( this, elems );$/;"	c
Array.push	bundle/emmet-vim/docs/static/js/jquery-latest.js	/^		Array.prototype.push.apply( this, elems );$/;"	m
AskPassArgs	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:AskPassArgs(dir) abort$/;"	f
AutoSave	bundle/vim-auto-save/plugin/AutoSave.vim	/^function! AutoSave()$/;"	f
AutoSaveToggle	bundle/vim-auto-save/plugin/AutoSave.vim	/^command! AutoSaveToggle :call AutoSaveToggle()$/;"	c
AutoSaveToggle	bundle/vim-auto-save/plugin/AutoSave.vim	/^function! AutoSaveToggle()$/;"	f
AutoUpdate	bundle/tagbar/autoload/tagbar.vim	/^function! s:AutoUpdate(fname, force, ...) abort$/;"	f
BC_AddChar	rcs/init.vim	/^function! BC_AddChar(schar)$/;"	f
BC_GetChar	rcs/init.vim	/^function! BC_GetChar()$/;"	f
BC_jumpBackChar	rcs/init.vim	/^function! BC_jumpBackChar(num)$/;"	f
BUILD_INVERTED_INDEX	bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set BUILD_INVERTED_INDEX=1$/;"	v
BUILD_INVERTED_INDEX	bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^set BUILD_INVERTED_INDEX=0$/;"	v
BlameBufnr	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameBufnr(...) abort$/;"	f
BlameCommit	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameCommit(cmd, ...) abort$/;"	f
BlameCommitFileLnum	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameCommitFileLnum(...) abort$/;"	f
BlameFileType	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameFileType() abort$/;"	f
BlameJump	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameJump(suffix, ...) abort$/;"	f
BlameLeave	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameLeave() abort$/;"	f
BlameQuit	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameQuit() abort$/;"	f
BlameRehighlight	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameRehighlight() abort$/;"	f
BlameSubcommand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:BlameSubcommand(line1, count, range, bang, mods, args) abort$/;"	f
BlobTemp	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:BlobTemp(url) abort$/;"	f
BlurStatus	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:BlurStatus() abort$/;"	f
Bookmark.AddBookmark	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.CompareBookmarksByName	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CompareBookmarksByName(firstBookmark, secondBookmark)$/;"	f
Bookmark.Edit	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Edit()$/;"	f
Bookmark.GetNodeForName	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot, nerdtree)$/;"	f
Bookmark.GetSelected	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.SortBookmarksList	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.SortBookmarksList()$/;"	f
Bookmark.ToRoot	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name, nerdtree)$/;"	f
Bookmark.Write	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(nerdtree, ...)$/;"	f
Bookmark.delete	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(nerdtree, searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(nerdtree, ...)$/;"	f
Bookmark.openInNewTab	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot(nerdtree)$/;"	f
Bookmark.validate	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
BufEnterHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:BufEnterHook(fname) abort " {{{2$/;"	f
BufName	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:BufName(var) abort$/;"	f
BufReadPostHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:BufReadPostHook(fname) abort " {{{2$/;"	f
BufWinEnterHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:BufWinEnterHook(fname) abort " {{{2$/;"	f
BufWritePostHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:BufWritePostHook(fname) abort " {{{2$/;"	f
BuildShell	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:BuildShell(dir, env, args) abort$/;"	f
Bundle	bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=+                                                Bundle        call vundle#config#bundle(<args>)$/;"	c
BundleClean	bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang                                          BundleClean   PluginClean<bang>$/;"	c
BundleDocs	bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=0                                                BundleDocs    PluginDocs$/;"	c
BundleInstall	bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete BundleInstall PluginInstall<bang> <args>$/;"	c
BundleList	bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=0 -bang                                          BundleList    PluginList<bang>$/;"	c
BundleSearch	bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete BundleSearch  PluginSearch<bang> <args>$/;"	c
BundleUpdate	bundle/Vundle.vim/autoload/vundle.vim	/^com!                                                         BundleUpdate  PluginInstall!$/;"	c
CSCOPE_ARGS	bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_ARGS=%CSCOPE_ARGS% -q$/;"	v
CSCOPE_ARGS	bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=$/;"	v
CSCOPE_ARGS	bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_ARGS=%CSCOPE_ARGS% -i %DB_FILE%.files$/;"	v
CSCOPE_EXE	bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set CSCOPE_EXE=%~2$/;"	v
CSCOPE_EXE	bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^set CSCOPE_EXE=cscope$/;"	v
CTAGS_ARGS	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% "%PROJECT_ROOT%"$/;"	v
CTAGS_ARGS	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% --append "%UPDATED_SOURCE%"$/;"	v
CTAGS_ARGS	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^        set CTAGS_ARGS=%CTAGS_ARGS% -L %TAGS_FILE%.files$/;"	v
CTAGS_ARGS	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% %~2$/;"	v
CTAGS_ARGS	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --exclude=%2$/;"	v
CTAGS_ARGS	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_ARGS=%CTAGS_ARGS% --options=%2$/;"	v
CTAGS_ARGS	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_ARGS=$/;"	v
CTAGS_EXE	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set CTAGS_EXE=%~2$/;"	v
CTAGS_EXE	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^set CTAGS_EXE=ctags$/;"	v
CacheErrors	bundle/syntastic/plugin/syntastic.vim	/^function! s:CacheErrors(buf, checker_names) abort " {{{2$/;"	f
CanAutoReloadStatus	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:CanAutoReloadStatus() abort$/;"	f
Cd	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Cd(...) abort$/;"	f
ChangeFoldLevel	bundle/tagbar/autoload/tagbar.vim	/^function! s:ChangeFoldLevel(diff, force) abort$/;"	f
CheckExCtagsVersion	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckExCtagsVersion(output) abort$/;"	f
CheckFTCtags	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckFTCtags(bin, ftype) abort$/;"	f
CheckForExCtags	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckForExCtags(silent) abort$/;"	f
CheckMouseClick	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckMouseClick() abort$/;"	f
ChompDefault	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:ChompDefault(default, ...) abort$/;"	f
ChompError	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:ChompError(...) abort$/;"	f
ClassSep	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:ClassSep() " {{{2$/;"	f
CleanUp	bundle/vim-gutentags/plat/unix/update_scopedb.sh	/^CleanUp() {$/;"	f
ClearCache	bundle/syntastic/plugin/syntastic.vim	/^function! s:ClearCache(buf) abort " {{{2$/;"	f
CloseFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:CloseFold() abort$/;"	f
CloseWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:CloseWindow() abort$/;"	f
Command	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Command(command, line1, line2, range, bang, mods, arg, args) abort$/;"	f
CommitInteractive	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:CommitInteractive(line1, line2, range, bang, mods, args, patch) abort$/;"	f
CommitSubcommand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:CommitSubcommand(line1, line2, range, bang, mods, args, ...) abort$/;"	f
CompareAge	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:CompareAge(mine, theirs) abort$/;"	f
CompilerSet	bundle/vim-scala/compiler/sbt.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompleteCheckerName	bundle/syntastic/plugin/syntastic.vim	/^function! s:CompleteCheckerName(argLead, cmdLine, cursorPos) abort " {{{2$/;"	f
CompleteFiletypes	bundle/syntastic/plugin/syntastic.vim	/^function! s:CompleteFiletypes(argLead, cmdLine, cursorPos) abort " {{{2$/;"	f
CompleteRemote	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteRemote(A, L, P) abort$/;"	f
CompleteRevision	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteRevision(A, L, P) abort$/;"	f
CompleteSub	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:CompleteSub(subcommand, A, L, P, ...) abort$/;"	f
ConfigTimestamps	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:ConfigTimestamps(dir, dict) abort$/;"	f
ContainedGroup	bundle/vim-scala/syntax/scala.vim	/^function! s:ContainedGroup()$/;"	f
ContainingCommit	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:ContainingCommit() abort$/;"	f
CorrectFocusOnStartup	bundle/tagbar/autoload/tagbar.vim	/^function! s:CorrectFocusOnStartup() abort$/;"	f
CreateAutocommands	bundle/tagbar/autoload/tagbar.vim	/^function! s:CreateAutocommands() abort$/;"	f
CreateOrExpression	bundle/vim-scala/ftplugin/scala.vim	/^function! s:CreateOrExpression(keywords)$/;"	f
CreateTabTreeVCS	bundle/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:CreateTabTreeVCS(name)$/;"	f
Creator.BufNamePrefix	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
Creator.CreateMirror	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
Creator.CreateTabTree	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateTabTree(name)$/;"	f
Creator.CreateWindowTree	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateWindowTree(dir)$/;"	f
Creator.New	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
Creator.ToggleTabTree	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.ToggleTabTree(dir)$/;"	f
Creator._bindMappings	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
Creator._broadcastInitEvent	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
Creator._createNERDTree	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createNERDTree(path, type)$/;"	f
Creator._createTreeWin	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
Creator._isBufHidden	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._isBufHidden(nr)$/;"	f
Creator._nextBufferName	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
Creator._nextBufferNumber	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
Creator._pathForString	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
Creator._removeTreeBufForTab	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._removeTreeBufForTab()$/;"	f
Creator._setCommonBufOptions	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
Creator._setupStatusline	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
Creator._tabpagevar	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._tabpagevar(tabnr, var)$/;"	f
Creator._uniq	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._uniq(list)$/;"	f
Creator.createMirror	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
Creator.createTabTree	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createTabTree(name)$/;"	f
Creator.createWindowTree	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createWindowTree(dir)$/;"	f
Creator.toggleTabTree	bundle/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.toggleTabTree(dir)$/;"	f
CtagsErrMsg	bundle/tagbar/autoload/tagbar.vim	/^function! s:CtagsErrMsg(errmsg, infomsg, silent, ...) abort$/;"	f
DB_FILE	bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set DB_FILE=%~2$/;"	v
DB_FILE	bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^set DB_FILE=cscope.out$/;"	v
DebugPrintReturn	indent/php.vim	/^function! DebugPrintReturn(scriptLine)$/;"	f
DetectFiletype	bundle/tagbar/autoload/tagbar.vim	/^function! s:DetectFiletype(bufnr) abort$/;"	f
DetectScala	bundle/vim-scala/ftdetect/scala.vim	/^fun! s:DetectScala()$/;"	f
DiffClose	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DiffClose() abort$/;"	f
Dir	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Dir(...) abort$/;"	f
DirCheck	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DirCheck(...) abort$/;"	f
DirCommitFile	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DirCommitFile(path) abort$/;"	f
DirRev	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DirRev(url) abort$/;"	f
DirectoryOfThisScript	conf/ycm/c99_ycm_extra_conf.py	/^def DirectoryOfThisScript():$/;"	f
DirectoryOfThisScript	conf/ycm/templates/valloric_ycm_extra_conf.py	/^def DirectoryOfThisScript():$/;"	f
DirectoryOfThisScript	conf/ycm/ycm_extra_conf.py	/^def DirectoryOfThisScript():$/;"	f
Dispatch	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Dispatch(bang, cmd, args) abort$/;"	f
Do	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Do(action, visual) abort$/;"	f
DoStageUnpushed	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnpushed(record) abort$/;"	f
DoStageUnpushedHeading	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnpushedHeading(heading) abort$/;"	f
DoStageUnstaged	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnstaged(record) abort$/;"	f
DoStageUnstagedHeading	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUnstagedHeading(heading) abort$/;"	f
DoStageUntracked	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUntracked(record) abort$/;"	f
DoStageUntrackedHeading	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoStageUntrackedHeading(heading) abort$/;"	f
DoToggleHeadHeader	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleHeadHeader(value) abort$/;"	f
DoToggleStaged	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleStaged(record) abort$/;"	f
DoToggleStagedHeading	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleStagedHeading(...) abort$/;"	f
DoToggleUnpulled	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpulled(record) abort$/;"	f
DoToggleUnpulledHeading	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpulledHeading(heading) abort$/;"	f
DoToggleUnpushed	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpushed(record) abort$/;"	f
DoToggleUnpushedHeading	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnpushedHeading(heading) abort$/;"	f
DoToggleUnstaged	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnstaged(record) abort$/;"	f
DoToggleUnstagedHeading	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUnstagedHeading(...) abort$/;"	f
DoToggleUntracked	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUntracked(record) abort$/;"	f
DoToggleUntrackedHeading	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoToggleUntrackedHeading(...) abort$/;"	f
DoUnstageStaged	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageStaged(record) abort$/;"	f
DoUnstageStagedHeading	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageStagedHeading(heading) abort$/;"	f
DoUnstageUnpulled	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpulled(record) abort$/;"	f
DoUnstageUnpulledHeading	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpulledHeading(heading) abort$/;"	f
DoUnstageUnpushed	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnpushed(record) abort$/;"	f
DoUnstageUnstaged	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DoUnstageUnstaged(record) abort$/;"	f
DoneParseArgs	bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^:DoneParseArgs$/;"	l
DoneParseArgs	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^:DoneParseArgs$/;"	l
DotRelative	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:DotRelative(path, ...) abort$/;"	f
EchoExec	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:EchoExec(...) abort$/;"	f
EditClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:EditClasspath() " {{{2$/;"	f
EditConfig	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:EditConfig() " {{{2$/;"	f
Emmet	bundle/emmet-vim/plugin/emmet.vim	/^  command! -nargs=1 Emmet call emmet#expandAbbr(4, <q-args>)$/;"	c
EmmetInstall	bundle/emmet-vim/plugin/emmet.vim	/^command! -nargs=0 -bar EmmetInstall call <SID>install_plugin(get(g:, 'user_emmet_mode', 'a'), 1)$/;"	c
EmmetUnitTest	bundle/emmet-vim/unittest.vim	/^command! -bang -nargs=* -complete=customlist,<SID>emmet_unittest_complete EmmetUnitTest call s:do_tests("<bang>", <f-args>)$/;"	c
Errors	bundle/syntastic/plugin/syntastic.vim	/^command! -bar Errors              call SyntasticErrors()$/;"	c
EscapeCtagsCmd	bundle/tagbar/autoload/tagbar.vim	/^function! s:EscapeCtagsCmd(ctags_bin, args, ...) abort$/;"	f
Event.New	bundle/nerdtree/lib/nerdtree/event.vim	/^function! s:Event.New(nerdtree, subject, action, params) abort$/;"	f
ExecPath	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:ExecPath() abort$/;"	f
ExecuteCtags	bundle/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtags(ctags_cmd) abort$/;"	f
ExecuteCtagsOnFile	bundle/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtagsOnFile(fname, realfname, typeinfo) abort$/;"	f
Expand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Expand(rev, ...) abort$/;"	f
ExpandSplit	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpandSplit(string, ...) abort$/;"	f
ExpandVar	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpandVar(other, var, flags, esc, ...) abort$/;"	f
ExpandVarLegacy	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpandVarLegacy(str) abort$/;"	f
ExpireStatus	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:ExpireStatus(bufnr) abort$/;"	f
FILESIZE	bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^for \/F %%F in ("%DB_FILE%.files") do set FILESIZE=%%~zF$/;"	v
FILESIZE	bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILESIZE=0$/;"	v
FILE_LIST_CMD	bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD=%~2$/;"	v
FILE_LIST_CMD	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD=$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set FILE_LIST_CMD_IS_ABSOLUTE=1$/;"	v
FILE_LIST_CMD_IS_ABSOLUTE	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^set FILE_LIST_CMD_IS_ABSOLUTE=0$/;"	v
FetchSubcommand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:FetchSubcommand(line1, line2, range, bang, mods, args) abort$/;"	f
FilterEscape	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:FilterEscape(items, ...) abort$/;"	f
FindOpenBracket	indent/php.vim	/^function! FindOpenBracket(lnum) " {{{$/;"	f
FindParentVCSRoot	bundle/nerdtree/nerdtree_plugin/vcs.vim	/^function! s:FindParentVCSRoot(path)$/;"	f
FindTheIfOfAnElse	indent/php.vim	/^function! FindTheIfOfAnElse (lnum, StopAfterFirstPrevElse) " {{{$/;"	f
FindTheSwitchIndent	indent/php.vim	/^function! FindTheSwitchIndent (lnum) " {{{$/;"	f
Findcomplete	autoload/pathogen.vim	/^function! s:Findcomplete(A,L,P) " {{{1$/;"	f
FinishCommit	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:FinishCommit() abort$/;"	f
FlagSet.New	bundle/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.New()$/;"	f
FlagSet._flagsForScope	bundle/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet._flagsForScope(scope)$/;"	f
FlagSet.addFlag	bundle/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.addFlag(scope, flag)$/;"	f
FlagSet.clearFlags	bundle/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.clearFlags(scope)$/;"	f
FlagSet.removeFlag	bundle/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.removeFlag(scope, flag)$/;"	f
FlagSet.renderToString	bundle/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.renderToString()$/;"	f
FlagsForFile	conf/ycm/c99_ycm_extra_conf.py	/^def FlagsForFile( filename, **kwargs ):$/;"	f
FlagsForFile	conf/ycm/templates/valloric_ycm_extra_conf.py	/^def FlagsForFile( filename, **kwargs ):$/;"	f
FlagsForFile	conf/ycm/ycm_extra_conf.py	/^def FlagsForFile( filename, **kwargs ):$/;"	f
Format	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Format(val) abort$/;"	f
FormatFile	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatFile(dict) abort$/;"	f
FormatLog	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatLog(dict) abort$/;"	f
FormatRebase	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:FormatRebase(dict) abort$/;"	f
ForwardToZshChecker	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:ForwardToZshChecker() " {{{2$/;"	f
FugitiveCommonDir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveCommonDir(...) abort$/;"	f
FugitiveConfig	bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveConfig(...) abort$/;"	f
FugitiveDetect	bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveDetect(path) abort$/;"	f
FugitiveExtractGitDir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveExtractGitDir(path) abort$/;"	f
FugitiveFind	bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveFind(...) abort$/;"	f
FugitiveGitDir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveGitDir(...) abort$/;"	f
FugitiveGitPath	bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveGitPath(path) abort$/;"	f
FugitiveHead	bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveHead(...) abort$/;"	f
FugitiveIsGitDir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveIsGitDir(path) abort$/;"	f
FugitiveParse	bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveParse(...) abort$/;"	f
FugitivePath	bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitivePath(...) abort$/;"	f
FugitivePrepare	bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitivePrepare(...) abort$/;"	f
FugitiveReal	bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveReal(...) abort$/;"	f
FugitiveReloadCheck	bundle/vim-fugitive/autoload/fugitive.vim	/^function! FugitiveReloadCheck() abort$/;"	f
FugitiveRemoteUrl	bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveRemoteUrl(...) abort$/;"	f
FugitiveStatusline	bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveStatusline(...) abort$/;"	f
FugitiveVimPath	bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveVimPath(path) abort$/;"	f
FugitiveWorkTree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveWorkTree(...) abort$/;"	f
GF	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
Generate	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Generate(rev, ...) abort$/;"	f
GetCompilationInfoForFile	conf/ycm/c99_ycm_extra_conf.py	/^def GetCompilationInfoForFile( filename ):$/;"	f
GetCompilationInfoForFile	conf/ycm/templates/valloric_ycm_extra_conf.py	/^def GetCompilationInfoForFile( filename ):$/;"	f
GetCompilationInfoForFile	conf/ycm/ycm_extra_conf.py	/^def GetCompilationInfoForFile( filename ):$/;"	f
GetDialect	bundle/syntastic/syntax_checkers/asm/gcc.vim	/^function! s:GetDialect(buf) " {{{2$/;"	f
GetFileWinnr	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetFileWinnr(fileinfo) abort$/;"	f
GetIncludes	bundle/syntastic/syntax_checkers/d/dmd.vim	/^function! s:GetIncludes(checker, base) " {{{2$/;"	f
GetLastRealCodeLNum	indent/php.vim	/^function! GetLastRealCodeLNum(startline) " {{{$/;"	f
GetMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetMakeprg(buf) " {{{2$/;"	f
GetMavenClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenClasspath() " {{{2$/;"	f
GetMavenProperties	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenProperties() " {{{2$/;"	f
GetNearbyTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetNearbyTag(all, forcecurrent, ...) abort$/;"	f
GetOcamlBuildMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOcamlBuildMakeprg(buf) " {{{2$/;"	f
GetOcamlcMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOcamlcMakeprg(buf) " {{{2$/;"	f
GetOtherMakeprg	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOtherMakeprg(buf) " {{{2$/;"	f
GetPhpIndent	indent/php.vim	/^function! GetPhpIndent()$/;"	f
GetProfile	bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^function! s:GetProfile(buf) " {{{2$/;"	f
GetScalaIndent	bundle/vim-scala/indent/scala.vim	/^function! GetScalaIndent()$/;"	f
GetShell	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:GetShell(buf) " {{{2$/;"	f
GetShell	bundle/syntastic/syntax_checkers/sh/shellcheck.vim	/^function! s:GetShell(buf) " {{{2$/;"	f
GetSupportedFiletypes	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetSupportedFiletypes() abort$/;"	f
GetTagInfo	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetTagInfo(linenr, ignorepseudo) abort$/;"	f
GetValaOpts	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! s:GetValaOpts(buf, name, comment, cmd) " {{{2$/;"	f
GlobComplete	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:GlobComplete(lead, pattern) abort$/;"	f
GotoFileWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoFileWindow(fileinfo, ...) abort$/;"	f
GotoNextFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoNextFold() abort$/;"	f
GotoNextToplevelTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoNextToplevelTag(direction) abort$/;"	f
GotoPrevFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoPrevFold() abort$/;"	f
GrepParseLine	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepParseLine(prefix, name_only, dir, line) abort$/;"	f
GrepSubcommand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:GrepSubcommand(line1, line2, range, bang, mods, args) abort$/;"	f
GutentagsToggleEnabled	bundle/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleEnabled :let g:gutentags_enabled=!g:gutentags_enabled$/;"	c
GutentagsToggleFake	bundle/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleFake    :call gutentags#fake()$/;"	c
GutentagsToggleTrace	bundle/vim-gutentags/plugin/gutentags.vim	/^    command! GutentagsToggleTrace   :call gutentags#toggletrace()$/;"	c
HandleBufDelete	bundle/tagbar/autoload/tagbar.vim	/^function! s:HandleBufDelete(bufname, bufnr) abort$/;"	f
HandleBufWrite	bundle/tagbar/autoload/tagbar.vim	/^function! s:HandleBufWrite(fname) abort$/;"	f
HandleOnlyWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:HandleOnlyWindow() abort$/;"	f
HasOpenFileWindows	bundle/tagbar/autoload/tagbar.vim	/^function! s:HasOpenFileWindows() abort$/;"	f
HasOpt	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:HasOpt(args, ...) abort$/;"	f
Helptags	autoload/pathogen.vim	/^command! -bar Helptags :call pathogen#helptags()$/;"	c
HighlightTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:HighlightTag(openfolds, ...) abort$/;"	f
HtmlIndentClose	indent/html.vim	/^fun! <SID>HtmlIndentClose(lnum, pattern)$/;"	f
HtmlIndentCloseAlt	indent/html.vim	/^fun! <SID>HtmlIndentCloseAlt(lnum)$/;"	f
HtmlIndentGet	indent/html.vim	/^fun! HtmlIndentGet(lnum)$/;"	f
HtmlIndentOpen	indent/html.vim	/^fun! <SID>HtmlIndentOpen(lnum, pattern)$/;"	f
HtmlIndentOpenAlt	indent/html.vim	/^fun! <SID>HtmlIndentOpenAlt(lnum)$/;"	f
HtmlIndentPush	indent/html.vim	/^fun! <SID>HtmlIndentPush(tag)$/;"	f
HtmlIndentSum	indent/html.vim	/^fun! <SID>HtmlIndentSum(lnum, style)$/;"	f
INDEX_WHOLE_PROJECT	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^        set INDEX_WHOLE_PROJECT=0$/;"	v
INDEX_WHOLE_PROJECT	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^set INDEX_WHOLE_PROJECT=1$/;"	v
IgnoreError	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:IgnoreError(text) " {{{2$/;"	f
IgnoreError	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:IgnoreError(text) " {{{2$/;"	f
Init	bundle/tagbar/autoload/tagbar.vim	/^function! s:Init(silent) abort$/;"	f
InitTypes	bundle/tagbar/autoload/tagbar.vim	/^function! s:InitTypes() abort$/;"	f
InitWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:InitWindow(autoclose) abort$/;"	f
IsConflicted	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:IsConflicted() abort$/;"	f
IsHeaderFile	conf/ycm/c99_ycm_extra_conf.py	/^def IsHeaderFile( filename ):$/;"	f
IsHeaderFile	conf/ycm/templates/valloric_ycm_extra_conf.py	/^def IsHeaderFile( filename ):$/;"	f
IsHeaderFile	conf/ycm/ycm_extra_conf.py	/^def IsHeaderFile( filename ):$/;"	f
IsShellValid	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:IsShellValid(buf) " {{{2$/;"	f
IsValidFile	bundle/tagbar/autoload/tagbar.vim	/^function! s:IsValidFile(fname, ftype) abort$/;"	f
IslinePHP	indent/php.vim	/^function! IslinePHP (lnum, tofind) " {{{$/;"	f
JumpToTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:JumpToTag(stay_in_tagbar) abort$/;"	f
KeyMap.Add	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Compare	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Compare(keyMap1, keyMap2)$/;"	f
KeyMap.Create	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	bundle/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
Keywordprg	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Keywordprg() abort$/;"	f
LOG_FILE	bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^set LOG_FILE=$/;"	v
LOG_FILE	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set LOG_FILE=%~2$/;"	v
LOG_FILE	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^if [%LOG_FILE%]==[] set LOG_FILE=CON$/;"	v
LOG_FILE	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^set LOG_FILE=$/;"	v
LinesError	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:LinesError(...) abort$/;"	f
LoadConfigFile	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:LoadConfigFile() " {{{2$/;"	f
LoadUserTypeDefs	bundle/tagbar/autoload/tagbar.vim	/^function! s:LoadUserTypeDefs(...) abort$/;"	f
LogFlushQueue	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:LogFlushQueue(state) abort$/;"	f
LogParse	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:LogParse(state, dir, line) abort$/;"	f
LoopParseArgs	bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^:LoopParseArgs$/;"	l
LoopParseArgs	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^:LoopParseArgs$/;"	l
MAX_2POWER	conf/testdir/bitwise.c	/^#define MAX_2POWER /;"	d	file:
MakeRelativePathsInFlagsAbsolute	conf/ycm/c99_ycm_extra_conf.py	/^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$/;"	f
MakeRelativePathsInFlagsAbsolute	conf/ycm/templates/valloric_ycm_extra_conf.py	/^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$/;"	f
MakeRelativePathsInFlagsAbsolute	conf/ycm/ycm_extra_conf.py	/^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$/;"	f
Map	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Map(mode, lhs, rhs, ...) abort$/;"	f
Map	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Map(mode, lhs, rhs, ...) abort$/;"	f
MapKeys	bundle/tagbar/autoload/tagbar.vim	/^function! s:MapKeys() abort$/;"	f
MapMotion	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:MapMotion(lhs, rhs) abort$/;"	f
MavenOutputDirectory	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:MavenOutputDirectory() " {{{2$/;"	f
MenuController.New	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.isMinimal	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.isMinimal()$/;"	f
MenuController.showMenu	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
MergeRebase	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:MergeRebase(cmd, bang, mods, args, ...) abort$/;"	f
MergeSubcommand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:MergeSubcommand(line1, line2, range, bang, mods, args) abort$/;"	f
MessageCfile	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:MessageCfile(...) abort$/;"	f
MinimizeMaxFoldLevel	bundle/tagbar/autoload/tagbar.vim	/^function! s:MinimizeMaxFoldLevel(fileinfo, tags) abort$/;"	f
Mods	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Mods(mods, ...) abort$/;"	f
Modules	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function s:Modules(buf)$/;"	f
Move	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Move(force, rename, destination) abort$/;"	f
NERDTree	bundle/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree.AddPathFilter	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.AddPathFilter(callback)$/;"	f
NERDTree.Close	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.Close()$/;"	f
NERDTree.CloseIfQuitOnOpen	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CloseIfQuitOnOpen()$/;"	f
NERDTree.CursorToBookmarkTable	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToBookmarkTable()$/;"	f
NERDTree.CursorToTreeWin	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToTreeWin()$/;"	f
NERDTree.ExistsForBuf	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForBuf()$/;"	f
NERDTree.ExistsForTab	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForTab()$/;"	f
NERDTree.ForCurrentBuf	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentBuf()$/;"	f
NERDTree.ForCurrentTab	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentTab()$/;"	f
NERDTree.GetWinNum	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.GetWinNum()$/;"	f
NERDTree.IsOpen	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.IsOpen()$/;"	f
NERDTree.MustBeOpen	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.MustBeOpen()$/;"	f
NERDTree.New	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.New(path, type)$/;"	f
NERDTree.PathFilters	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.PathFilters()$/;"	f
NERDTree.changeRoot	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.changeRoot(node)$/;"	f
NERDTree.getRoot	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.getRoot()$/;"	f
NERDTree.isTabTree	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isTabTree()$/;"	f
NERDTree.isWinTree	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isWinTree()$/;"	f
NERDTree.previousBuf	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.previousBuf()$/;"	f
NERDTree.render	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.render()$/;"	f
NERDTree.setPreviousBuf	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.setPreviousBuf(bnum)$/;"	f
NERDTreeAddKeyMap	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddPathFilter	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddPathFilter(callback)$/;"	f
NERDTreeAddSubmenu	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeCopyNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeCopyPath	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyPath()$/;"	f
NERDTreeDeleteNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeExecuteFileLinux	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileLinux()$/;"	f
NERDTreeFocus	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeHijackNetrw	bundle/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeListNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNode()$/;"	f
NERDTreeListNodeWin32	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNodeWin32()$/;"	f
NERDTreeMoveNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealFileLinux	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealFileLinux()$/;"	f
NERDTreeRevealInFinder	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeVCS	bundle/nerdtree/nerdtree_plugin/vcs.vim	/^command! -n=? -complete=dir -bar NERDTreeVCS :call <SID>CreateTabTreeVCS('<args>')$/;"	c
NavigateUp	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:NavigateUp(count) abort$/;"	f
NeoCompleteBufferMakeCache	bundle/neocomplete/plugin/neocomplete/buffer.vim	/^      \\ NeoCompleteBufferMakeCache$/;"	c
NeoCompleteClean	bundle/neocomplete/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteClean$/;"	c
NeoCompleteDictionaryMakeCache	bundle/neocomplete/plugin/neocomplete/dictionary.vim	/^      \\ NeoCompleteDictionaryMakeCache$/;"	c
NeoCompleteDisable	bundle/neocomplete/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteDisable$/;"	c
NeoCompleteEnable	bundle/neocomplete/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteEnable$/;"	c
NeoCompleteLock	bundle/neocomplete/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteLock$/;"	c
NeoCompleteMemberMakeCache	bundle/neocomplete/plugin/neocomplete/member.vim	/^      \\ NeoCompleteMemberMakeCache$/;"	c
NeoCompleteSetFileType	bundle/neocomplete/plugin/neocomplete.vim	/^command! -nargs=1 -bar -complete=filetype NeoCompleteSetFileType$/;"	c
NeoCompleteTagMakeCache	bundle/neocomplete/plugin/neocomplete/tag.vim	/^      \\ NeoCompleteTagMakeCache$/;"	c
NeoCompleteToggle	bundle/neocomplete/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteToggle$/;"	c
NeoCompleteUnlock	bundle/neocomplete/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteUnlock$/;"	c
NewTags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:NewTags(name) " {{{2$/;"	f
NextExpandedHunk	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:NextExpandedHunk(count) abort$/;"	f
NextFile	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:NextFile(count) abort$/;"	f
NextHunk	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:NextHunk(count) abort$/;"	f
NextItem	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:NextItem(count) abort$/;"	f
NextSection	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:NextSection(count) abort$/;"	f
NextSection	bundle/vim-scala/ftplugin/scala.vim	/^function! s:NextSection(backwards)$/;"	f
NextSectionEnd	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:NextSectionEnd(count) abort$/;"	f
NoSimulataneousEdits	rcs/init.vim	/^augroup NoSimulataneousEdits$/;"	a
Notifier.AddListener	bundle/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.AddListener(event, funcname)$/;"	f
Notifier.GetListenersForEvent	bundle/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersForEvent(name)$/;"	f
Notifier.GetListenersMap	bundle/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersMap()$/;"	f
Notifier.NotifyListeners	bundle/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.NotifyListeners(event, path, nerdtree, params)$/;"	f
NullError	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:NullError(...) abort$/;"	f
OpenExec	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:OpenExec(cmd, mods, args, ...) abort$/;"	f
OpenFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenFold() abort$/;"	f
OpenParents	bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenParents(...) abort$/;"	f
OpenParse	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:OpenParse(args) abort$/;"	f
OpenWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenWindow(flags) abort$/;"	f
Opener.New	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._bufInWindows	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._bufInWindows(bnum)$/;"	f
Opener._checkToCloseTree	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._firstUsableWindow	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._firstUsableWindow()$/;"	f
Opener._gotoTargetWin	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._isWindowUsable	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._isWindowUsable(winnumber)$/;"	f
Opener._newSplit	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	bundle/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
Owner	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Owner(path, ...) abort$/;"	f
PAUSE_BEFORE_EXIT	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set PAUSE_BEFORE_EXIT=1$/;"	v
PAUSE_BEFORE_EXIT	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^set PAUSE_BEFORE_EXIT=0$/;"	v
POST_PROCESS_CMD	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set POST_PROCESS_CMD=%~2$/;"	v
POST_PROCESS_CMD	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^set POST_PROCESS_CMD=$/;"	v
PROJECT_ROOT	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set PROJECT_ROOT=%~2$/;"	v
PROJECT_ROOT	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^set PROJECT_ROOT=$/;"	v
PROJ_ROOT	bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^    set PROJ_ROOT=%~2$/;"	v
ParseArgs	bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^:ParseArgs$/;"	l
ParseArgs	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^:ParseArgs$/;"	l
ParseTagline	bundle/tagbar/autoload/tagbar.vim	/^function! s:ParseTagline(part1, part2, typeinfo, fileinfo) abort$/;"	f
PatchSearchExpr	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:PatchSearchExpr(reverse) abort$/;"	f
Path.AbsolutePathFor	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(pathStr)$/;"	f
Path.CopyingSupported	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(pathStr)$/;"	f
Path.Resolve	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.Slash	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Slash()$/;"	f
Path.WinToUnixPath	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._escChars	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._escChars()$/;"	f
Path._ignorePatternMatches	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._splitChunks	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._splitChunks(path)$/;"	f
Path._str	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
Path.addDelimiter	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.addDelimiter(line)$/;"	f
Path.bookmarkNames	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString() abort$/;"	f
Path.changeToDir	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.createParentDirectories	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f
Path.delete	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
Path.equals	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortKey	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortKey()$/;"	f
Path.getSortOrderIndex	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore(nerdtree)$/;"	f
Path.isAncestor	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isAncestor(path)$/;"	f
Path.isHiddenUnder	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isHiddenUnder(path)$/;"	f
Path.isUnder	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.isUnixHiddenFile	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
Path.isUnixHiddenPath	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
Path.readInfoFromDisk	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh(nerdtree)$/;"	f
Path.refreshFlags	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refreshFlags(nerdtree)$/;"	f
Path.rename	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	bundle/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
PathInfo	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:PathInfo(url) abort$/;"	f
Plugin	bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=+  -bar   Plugin$/;"	c
PluginClean	bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang   PluginClean$/;"	c
PluginDocs	bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=0         PluginDocs$/;"	c
PluginInstall	bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete PluginInstall$/;"	c
PluginList	bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=0 -bang PluginList$/;"	c
PluginSearch	bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete PluginSearch$/;"	c
PluginUpdate	bundle/Vundle.vim/autoload/vundle.vim	/^com! PluginUpdate PluginInstall!$/;"	c
PreparePathArgs	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:PreparePathArgs(cmd, dir, literal) abort$/;"	f
PreviousFile	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousFile(count) abort$/;"	f
PreviousHunk	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousHunk(count) abort$/;"	f
PreviousItem	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousItem(count) abort$/;"	f
PreviousSection	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousSection(count) abort$/;"	f
PreviousSectionEnd	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:PreviousSectionEnd(count) abort$/;"	f
PrintHelp	bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintHelp() abort$/;"	f
PrintKinds	bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintKinds(typeinfo, fileinfo) abort$/;"	f
PrintTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintTag(tag, depth, output, fileinfo, typeinfo) abort$/;"	f
ProcessFile	bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessFile(fname, ftype) abort$/;"	f
ProcessTag	bundle/tagbar/autoload/tagbar.vim	/^function s:ProcessTag(name, filename, pattern, fields, is_split, typeinfo, fileinfo) abort$/;"	f
ProjectionistDetect	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ProjectionistDetect() abort$/;"	f
PullSubcommand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:PullSubcommand(line1, line2, range, bang, mods, args) abort$/;"	f
PushSubcommand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:PushSubcommand(line1, line2, range, bang, mods, args) abort$/;"	f
QueryLog	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:QueryLog(refspec) abort$/;"	f
QuickfixCreate	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixCreate(nr, opts) abort$/;"	f
QuickfixGet	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixGet(nr, ...) abort$/;"	f
QuickfixSet	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixSet(nr, ...) abort$/;"	f
QuickfixStream	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:QuickfixStream(nr, title, cmd, first, callback, ...) abort$/;"	f
QuitPreHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:QuitPreHook(fname) abort " {{{2$/;"	f
RebaseArgument	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseArgument() abort$/;"	f
RebaseClean	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseClean(file) abort$/;"	f
RebaseEdit	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseEdit(cmd, dir) abort$/;"	f
RebaseSequenceAborter	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseSequenceAborter() abort$/;"	f
RebaseSubcommand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:RebaseSubcommand(line1, line2, range, bang, mods, args) abort$/;"	f
Relative	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Relative(...) abort$/;"	f
ReloadStatus	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadStatus(...) abort$/;"	f
ReloadTabStatus	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadTabStatus(...) abort$/;"	f
ReloadWinStatus	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:ReloadWinStatus(...) abort$/;"	f
Remote	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Remote(dir) abort$/;"	f
Remove	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Remove(after, force) abort$/;"	f
RemoveCarriageReturn	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:RemoveCarriageReturn(line) " {{{2$/;"	f
RenderContent	bundle/tagbar/autoload/tagbar.vim	/^function! s:RenderContent(...) abort$/;"	f
RenderKeepView	bundle/tagbar/autoload/tagbar.vim	/^function! s:RenderKeepView(...) abort$/;"	f
ReopenWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:ReopenWindow(delbufname) abort$/;"	f
ReplaceCmd	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:ReplaceCmd(cmd) abort$/;"	f
ResetPhpOptions	indent/php.vim	/^function! ResetPhpOptions()$/;"	f
Resolve	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Resolve(path) abort$/;"	f
RestoreSession	bundle/tagbar/autoload/tagbar.vim	/^function! s:RestoreSession() abort$/;"	f
RevertSubcommand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:RevertSubcommand(line1, line2, range, bang, mods, args) abort$/;"	f
SEP_LINE	conf/testdir/bitwise.c	/^#define SEP_LINE /;"	d	file:
SID	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function s:SID()$/;"	f
SIZE_UINT	conf/testdir/bitwise.c	/^#define SIZE_UINT /;"	d	file:
SOURCE_EXTENSIONS	conf/ycm/c99_ycm_extra_conf.py	/^SOURCE_EXTENSIONS = [ '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ]$/;"	v
SOURCE_EXTENSIONS	conf/ycm/templates/valloric_ycm_extra_conf.py	/^SOURCE_EXTENSIONS = [ '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ]$/;"	v
SOURCE_EXTENSIONS	conf/ycm/ycm_extra_conf.py	/^SOURCE_EXTENSIONS = [ '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ]$/;"	v
SaveClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveClasspath() " {{{2$/;"	f
SaveConfig	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveConfig() " {{{2$/;"	f
Selection	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Selection(arg1, ...) abort$/;"	f
SetCompilerType	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! s:SetCompilerType(exe) " {{{2$/;"	f
SetFoldLevel	bundle/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevel(level, force) abort$/;"	f
SetFoldLevelRecursive	bundle/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevelRecursive(fileinfo, tags, level) abort$/;"	f
SetStatusLine	bundle/tagbar/autoload/tagbar.vim	/^function! s:SetStatusLine()$/;"	f
ShowInPreviewWin	bundle/tagbar/autoload/tagbar.vim	/^function! s:ShowInPreviewWin() abort$/;"	f
ShowPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:ShowPrototype(short) abort$/;"	f
ShowUsage	bundle/vim-gutentags/plat/unix/update_scopedb.sh	/^ShowUsage() {$/;"	f
ShowUsage	bundle/vim-gutentags/plat/unix/update_tags.sh	/^ShowUsage() {$/;"	f
ShrinkIfExpanded	bundle/tagbar/autoload/tagbar.vim	/^function! s:ShrinkIfExpanded() abort$/;"	f
Skippmatch	indent/php.vim	/^function! Skippmatch()	" {{{$/;"	f
Skippmatch2	indent/php.vim	/^function! Skippmatch2()$/;"	f
Slash	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Slash(path) abort$/;"	f
Slash	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Slash(path) abort$/;"	f
SortScalaImports	bundle/vim-scala/plugin/scala.vim	/^command! SortScalaImports call SortScalaImports()$/;"	c
SortScalaImports	bundle/vim-scala/plugin/scala.vim	/^function! SortScalaImports()$/;"	f
SplitClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:SplitClasspath(classpath) " {{{2$/;"	f
SplitExpand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:SplitExpand(string, ...) abort$/;"	f
SplitExpandChain	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:SplitExpandChain(string, ...) abort$/;"	f
SquashArgument	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:SquashArgument(...) abort$/;"	f
StageApply	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StageApply(info, reverse, extra) abort$/;"	f
StageArgs	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StageArgs(visual) abort$/;"	f
StageDelete	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDelete(lnum1, lnum2, count) abort$/;"	f
StageDiff	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StageIgnore	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StageIgnore(lnum1, lnum2, count) abort$/;"	f
StageInfo	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StageInfo(...) abort$/;"	f
StageInline	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StageInline(mode, ...) abort$/;"	f
StageJump	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StageJump(offset, section, ...) abort$/;"	f
StagePatch	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StageReveal	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StageReveal(...) abort$/;"	f
StageSeek	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StageSeek(info, fallback) abort$/;"	f
State.New	bundle/tagbar/autoload/tagbar/state.vim	/^function! s:State.New() abort dict$/;"	f
State.getCurrent	bundle/tagbar/autoload/tagbar/state.vim	/^function! s:State.getCurrent(force_current) abort dict$/;"	f
State.setCurrentFile	bundle/tagbar/autoload/tagbar/state.vim	/^function! s:State.setCurrentFile(fileinfo) abort dict$/;"	f
State.setPaused	bundle/tagbar/autoload/tagbar/state.vim	/^function! s:State.setPaused() abort dict$/;"	f
StatusCfile	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StatusCfile(...) abort$/;"	f
StatusCommand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:StatusCommand(line1, line2, range, count, bang, mods, reg, arg, args, ...) abort$/;"	f
Subcommands	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Subcommands() abort$/;"	f
SyntasticAutoloclistNotifier.AutoToggle	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.AutoToggle(loclist) abort " {{{2$/;"	f
SyntasticAutoloclistNotifier.New	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.New() abort " {{{2$/;"	f
SyntasticAutoloclistNotifier.refresh	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticBalloonsExprNotifier	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! SyntasticBalloonsExprNotifier() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.New	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.New() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.enabled	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.enabled() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.refresh	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticBalloonsNotifier.reset	bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticCheck	bundle/syntastic/plugin/syntastic.vim	/^command! -bar -nargs=* -complete=custom,s:CompleteCheckerName SyntasticCheck call SyntasticCheck(<f-args>)$/;"	c
SyntasticCheck	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticCheck(...) abort " {{{2$/;"	f
SyntasticChecker.New	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.New(args, ...) abort " {{{2$/;"	f
SyntasticChecker._getOpt	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._getOpt(opts, basename, name, default) abort " {{{2$/;"	f
SyntasticChecker._populateHighlightRegexes	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._populateHighlightRegexes(errors) abort " {{{2$/;"	f
SyntasticChecker._quietMessages	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._quietMessages(errors) abort " {{{2$/;"	f
SyntasticChecker.getCName	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getCName() abort " {{{2$/;"	f
SyntasticChecker.getExec	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getExec() abort " {{{2$/;"	f
SyntasticChecker.getExecEscaped	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getExecEscaped() abort " {{{2$/;"	f
SyntasticChecker.getFiletype	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getFiletype() abort " {{{2$/;"	f
SyntasticChecker.getLocList	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocList() abort " {{{2$/;"	f
SyntasticChecker.getLocListRaw	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocListRaw() abort " {{{2$/;"	f
SyntasticChecker.getName	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getName() abort " {{{2$/;"	f
SyntasticChecker.getVersion	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getVersion(...) abort " {{{2$/;"	f
SyntasticChecker.isAvailable	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.isAvailable() abort " {{{2$/;"	f
SyntasticChecker.isDisabled	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.isDisabled() abort " {{{2$/;"	f
SyntasticChecker.log	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.log(msg, ...) abort " {{{2$/;"	f
SyntasticChecker.makeprgBuild	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.makeprgBuild(opts) abort " {{{2$/;"	f
SyntasticChecker.setVersion	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.setVersion(version) abort " {{{2$/;"	f
SyntasticChecker.setWantSort	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.setWantSort(val) abort " {{{2$/;"	f
SyntasticChecker.syncExec	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.syncExec(...) abort " {{{2$/;"	f
SyntasticChecker.wantSort	bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.wantSort() abort " {{{2$/;"	f
SyntasticCursorNotifier.New	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.New() abort " {{{2$/;"	f
SyntasticCursorNotifier.enabled	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.enabled() abort " {{{2$/;"	f
SyntasticCursorNotifier.refresh	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticCursorNotifier.reset	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticErrors	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticErrors() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.New	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.New() abort " {{{2$/;"	f
SyntasticHighlightingNotifier._reset	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier._reset() abort " {{{2$/;"	f
SyntasticHighlightingNotifier._setup	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier._setup() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.enabled	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.enabled() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.refresh	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticHighlightingNotifier.reset	bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticInfo	bundle/syntastic/plugin/syntastic.vim	/^command! -bar -nargs=? -complete=custom,s:CompleteFiletypes   SyntasticInfo  call SyntasticInfo(<f-args>)$/;"	c
SyntasticInfo	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticInfo(...) abort " {{{2$/;"	f
SyntasticJavacEditClasspath	bundle/syntastic/plugin/syntastic.vim	/^command! SyntasticJavacEditClasspath runtime! syntax_checkers\/java\/*.vim | SyntasticJavacEditClasspath$/;"	c
SyntasticJavacEditClasspath	bundle/syntastic/syntax_checkers/java/javac.vim	/^command! SyntasticJavacEditClasspath call s:EditClasspath()$/;"	c
SyntasticJavacEditConfig	bundle/syntastic/plugin/syntastic.vim	/^command! SyntasticJavacEditConfig    runtime! syntax_checkers\/java\/*.vim | SyntasticJavacEditConfig$/;"	c
SyntasticJavacEditConfig	bundle/syntastic/syntax_checkers/java/javac.vim	/^command! SyntasticJavacEditConfig    call s:EditConfig()$/;"	c
SyntasticLoclist.New	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.New(rawLoclist) abort " {{{2$/;"	f
SyntasticLoclist.balloons	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.balloons() abort " {{{2$/;"	f
SyntasticLoclist.copyRaw	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.copyRaw() abort " {{{2$/;"	f
SyntasticLoclist.current	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.current(...) abort " {{{2$/;"	f
SyntasticLoclist.decorate	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.decorate(tag) abort " {{{2$/;"	f
SyntasticLoclist.deploy	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.deploy() abort " {{{2$/;"	f
SyntasticLoclist.destroy	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.destroy() abort " {{{2$/;"	f
SyntasticLoclist.errors	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.errors() abort " {{{2$/;"	f
SyntasticLoclist.extend	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.extend(other) abort " {{{2$/;"	f
SyntasticLoclist.filter	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.filter(filters) abort " {{{2$/;"	f
SyntasticLoclist.getBuffers	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getBuffers() abort " {{{2$/;"	f
SyntasticLoclist.getCursorColumns	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getCursorColumns() abort " {{{2$/;"	f
SyntasticLoclist.getFirstError	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getFirstError(...) abort " {{{2$/;"	f
SyntasticLoclist.getName	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getName() abort " {{{2$/;"	f
SyntasticLoclist.getOwner	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getOwner() abort " {{{2$/;"	f
SyntasticLoclist.getRaw	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getRaw() abort " {{{2$/;"	f
SyntasticLoclist.getStatuslineFlag	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getStatuslineFlag() abort " {{{2$/;"	f
SyntasticLoclist.hasErrorsOrWarningsToDisplay	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.hasErrorsOrWarningsToDisplay() abort " {{{2$/;"	f
SyntasticLoclist.isEmpty	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.isEmpty() abort " {{{2$/;"	f
SyntasticLoclist.isNewerThan	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.isNewerThan(stamp) abort " {{{2$/;"	f
SyntasticLoclist.messages	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.messages(buf) abort " {{{2$/;"	f
SyntasticLoclist.setName	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setName(name) abort " {{{2$/;"	f
SyntasticLoclist.setOwner	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setOwner(buffer) abort " {{{2$/;"	f
SyntasticLoclist.setloclist	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setloclist(new) abort " {{{2$/;"	f
SyntasticLoclist.show	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.show() abort " {{{2$/;"	f
SyntasticLoclist.sort	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.sort() abort " {{{2$/;"	f
SyntasticLoclist.warnings	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.warnings() abort " {{{2$/;"	f
SyntasticLoclistHide	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! SyntasticLoclistHide() abort " {{{2$/;"	f
SyntasticMake	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticMake(options) abort " {{{2$/;"	f
SyntasticModeMap.Instance	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.Instance() abort " {{{2$/;"	f
SyntasticModeMap._isOneFiletypeActive	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._isOneFiletypeActive(filetypes) abort " {{{2$/;"	f
SyntasticModeMap._noFiletypesArePassive	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._noFiletypesArePassive(filetypes) abort " {{{2$/;"	f
SyntasticModeMap.allowsAutoChecking	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.allowsAutoChecking(filetype) abort " {{{2$/;"	f
SyntasticModeMap.doAutoChecking	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.doAutoChecking(buf) abort " {{{2$/;"	f
SyntasticModeMap.echoMode	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.echoMode() abort " {{{2$/;"	f
SyntasticModeMap.isPassive	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.isPassive() abort " {{{2$/;"	f
SyntasticModeMap.modeInfo	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.modeInfo(filetypes) abort " {{{2$/;"	f
SyntasticModeMap.synch	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.synch() abort " {{{2$/;"	f
SyntasticModeMap.toggleMode	bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.toggleMode() abort " {{{2$/;"	f
SyntasticNotifiers.Instance	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.Instance() abort " {{{2$/;"	f
SyntasticNotifiers._initNotifiers	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers._initNotifiers() abort " {{{2$/;"	f
SyntasticNotifiers.refresh	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.refresh(loclist) abort " {{{2$/;"	f
SyntasticNotifiers.reset	bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.reset(loclist) abort " {{{2$/;"	f
SyntasticRefreshCursor	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! SyntasticRefreshCursor() abort " {{{2$/;"	f
SyntasticRegistry.CreateAndRegisterChecker	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.CreateAndRegisterChecker(args) abort " {{{2$/;"	f
SyntasticRegistry.Instance	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.Instance() abort " {{{2$/;"	f
SyntasticRegistry._filterCheckersByName	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByName(cnames) abort " {{{2$/;"	f
SyntasticRegistry._findChecker	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._findChecker(cname) abort " {{{2$/;"	f
SyntasticRegistry._loadCheckersFor	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._loadCheckersFor(filetype, force) abort " {{{2$/;"	f
SyntasticRegistry._registerChecker	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._registerChecker(checker) abort " {{{2$/;"	f
SyntasticRegistry._sanityCheck	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._sanityCheck(filetype) abort " {{{2$/;"	f
SyntasticRegistry.echoInfoFor	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.echoInfoFor(ftalias_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckers(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckersAvailable	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckersAvailable(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckersDisabled	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckersDisabled(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getKnownFiletypes	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getKnownFiletypes() abort " {{{2$/;"	f
SyntasticRegistry.getNamesOfAvailableCheckers	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getNamesOfAvailableCheckers(ftalias) abort " {{{2$/;"	f
SyntasticRegistry.resolveFiletypes	bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.resolveFiletypes(ftalias) abort " {{{2$/;"	f
SyntasticReset	bundle/syntastic/plugin/syntastic.vim	/^command! -bar SyntasticReset      call SyntasticReset()$/;"	c
SyntasticReset	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticReset() abort " {{{2$/;"	f
SyntasticSetLoclist	bundle/syntastic/plugin/syntastic.vim	/^command! -bar SyntasticSetLoclist call SyntasticSetLoclist()$/;"	c
SyntasticSetLoclist	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticSetLoclist() abort " {{{2$/;"	f
SyntasticSignsNotifier.New	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.New() abort " {{{2$/;"	f
SyntasticSignsNotifier._bufSignIds	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._bufSignIds() abort " {{{2$/;"	f
SyntasticSignsNotifier._removeSigns	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._removeSigns(ids) abort " {{{2$/;"	f
SyntasticSignsNotifier._setup	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._setup() abort " {{{2$/;"	f
SyntasticSignsNotifier._signErrors	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._signErrors(loclist) abort " {{{2$/;"	f
SyntasticSignsNotifier.enabled	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.enabled() abort " {{{2$/;"	f
SyntasticSignsNotifier.refresh	bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticStatuslineFlag	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticStatuslineFlag() abort " {{{2$/;"	f
SyntasticToggleMode	bundle/syntastic/plugin/syntastic.vim	/^command! -bar SyntasticToggleMode call SyntasticToggleMode()$/;"	c
SyntasticToggleMode	bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticToggleMode() abort " {{{2$/;"	f
SyntaxCheckers_actionscript_mxmlc_GetHighlightRegex	bundle/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^function! SyntaxCheckers_actionscript_mxmlc_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_actionscript_mxmlc_GetLocList	bundle/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^function! SyntaxCheckers_actionscript_mxmlc_GetLocList() dict$/;"	f
SyntaxCheckers_ada_gcc_GetLocList	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_ada_gcc_IsAvailable	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_ansible_ansible_lint_GetLocList	bundle/syntastic/syntax_checkers/ansible/ansible_lint.vim	/^function! SyntaxCheckers_ansible_ansible_lint_GetLocList() dict$/;"	f
SyntaxCheckers_ansible_ansible_lint_IsAvailable	bundle/syntastic/syntax_checkers/ansible/ansible_lint.vim	/^function! SyntaxCheckers_ansible_ansible_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_apiblueprint_drafter_GetLocList	bundle/syntastic/syntax_checkers/apiblueprint/drafter.vim	/^function! SyntaxCheckers_apiblueprint_drafter_GetLocList() dict$/;"	f
SyntaxCheckers_applescript_osacompile_GetLocList	bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^function! SyntaxCheckers_applescript_osacompile_GetLocList() dict$/;"	f
SyntaxCheckers_asciidoc_asciidoc_GetLocList	bundle/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^function! SyntaxCheckers_asciidoc_asciidoc_GetLocList() dict$/;"	f
SyntaxCheckers_asl_iasl_GetLocList	bundle/syntastic/syntax_checkers/asl/iasl.vim	/^function! SyntaxCheckers_asl_iasl_GetLocList() dict$/;"	f
SyntaxCheckers_asm_gcc_GetLocList	bundle/syntastic/syntax_checkers/asm/gcc.vim	/^function! SyntaxCheckers_asm_gcc_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_asm_gcc_IsAvailable	bundle/syntastic/syntax_checkers/asm/gcc.vim	/^function! SyntaxCheckers_asm_gcc_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_bemhtml_bemhtmllint_GetLocList	bundle/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^function SyntaxCheckers_bemhtml_bemhtmllint_GetLocList() dict$/;"	f
SyntaxCheckers_bro_bro_GetHighlightRegex	bundle/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_bro_bro_GetLocList	bundle/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_GetLocList() dict$/;"	f
SyntaxCheckers_bro_bro_IsAvailable	bundle/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_IsAvailable() dict$/;"	f
SyntaxCheckers_c_avrgcc_GetLocList	bundle/syntastic/syntax_checkers/c/avrgcc.vim	/^function! SyntaxCheckers_c_avrgcc_GetLocList() dict$/;"	f
SyntaxCheckers_c_checkpatch_GetLocList	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_GetLocList() dict$/;"	f
SyntaxCheckers_c_checkpatch_IsAvailable	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_IsAvailable() dict$/;"	f
SyntaxCheckers_c_clang_check_GetLocList	bundle/syntastic/syntax_checkers/c/clang_check.vim	/^function! SyntaxCheckers_c_clang_check_GetLocList() dict$/;"	f
SyntaxCheckers_c_clang_tidy_GetLocList	bundle/syntastic/syntax_checkers/c/clang_tidy.vim	/^function! SyntaxCheckers_c_clang_tidy_GetLocList() dict$/;"	f
SyntaxCheckers_c_cppcheck_GetLocList	bundle/syntastic/syntax_checkers/c/cppcheck.vim	/^function! SyntaxCheckers_c_cppcheck_GetLocList() dict$/;"	f
SyntaxCheckers_c_cppclean_GetLocList	bundle/syntastic/syntax_checkers/c/cppclean.vim	/^function! SyntaxCheckers_c_cppclean_GetLocList() dict$/;"	f
SyntaxCheckers_c_flawfinder_GetHighlightRegex	bundle/syntastic/syntax_checkers/c/flawfinder.vim	/^function! SyntaxCheckers_c_flawfinder_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_c_flawfinder_GetLocList	bundle/syntastic/syntax_checkers/c/flawfinder.vim	/^function! SyntaxCheckers_c_flawfinder_GetLocList() dict$/;"	f
SyntaxCheckers_c_gcc_GetLocList	bundle/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_c_gcc_IsAvailable	bundle/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_c_make_GetLocList	bundle/syntastic/syntax_checkers/c/make.vim	/^function! SyntaxCheckers_c_make_GetLocList() dict$/;"	f
SyntaxCheckers_c_oclint_GetLocList	bundle/syntastic/syntax_checkers/c/oclint.vim	/^function! SyntaxCheckers_c_oclint_GetLocList() dict$/;"	f
SyntaxCheckers_c_pc_lint_GetLocList	bundle/syntastic/syntax_checkers/c/pc_lint.vim	/^function! SyntaxCheckers_c_pc_lint_GetLocList() dict$/;"	f
SyntaxCheckers_c_sparse_GetLocList	bundle/syntastic/syntax_checkers/c/sparse.vim	/^function! SyntaxCheckers_c_sparse_GetLocList() dict$/;"	f
SyntaxCheckers_c_splint_GetLocList	bundle/syntastic/syntax_checkers/c/splint.vim	/^function! SyntaxCheckers_c_splint_GetLocList() dict$/;"	f
SyntaxCheckers_cabal_cabal_GetHighlightRegex	bundle/syntastic/syntax_checkers/cabal/cabal.vim	/^function! SyntaxCheckers_cabal_cabal_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_cabal_cabal_GetLocList	bundle/syntastic/syntax_checkers/cabal/cabal.vim	/^function! SyntaxCheckers_cabal_cabal_GetLocList() dict$/;"	f
SyntaxCheckers_chef_foodcritic_GetLocList	bundle/syntastic/syntax_checkers/chef/foodcritic.vim	/^function! SyntaxCheckers_chef_foodcritic_GetLocList() dict$/;"	f
SyntaxCheckers_cmake_cmakelint_GetLocList	bundle/syntastic/syntax_checkers/cmake/cmakelint.vim	/^function! SyntaxCheckers_cmake_cmakelint_GetLocList() dict$/;"	f
SyntaxCheckers_co_coco_GetLocList	bundle/syntastic/syntax_checkers/co/coco.vim	/^function! SyntaxCheckers_co_coco_GetLocList() dict$/;"	f
SyntaxCheckers_cobol_cobc_GetLocList	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^function! SyntaxCheckers_cobol_cobc_GetLocList() dict$/;"	f
SyntaxCheckers_cobol_cobc_IsAvailable	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^function! SyntaxCheckers_cobol_cobc_IsAvailable() dict$/;"	f
SyntaxCheckers_coffee_coffee_GetLocList	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_GetLocList() dict$/;"	f
SyntaxCheckers_coffee_coffee_IsAvailable	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_IsAvailable() dict$/;"	f
SyntaxCheckers_coffee_coffee_jshint_GetLocList	bundle/syntastic/syntax_checkers/coffee/coffee_jshint.vim	/^function! SyntaxCheckers_coffee_coffee_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_coffee_coffeelint_GetLocList	bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^function! SyntaxCheckers_coffee_coffeelint_GetLocList() dict$/;"	f
SyntaxCheckers_coq_coqtop_GetLocList	bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^function! SyntaxCheckers_coq_coqtop_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_cpplint_GetLocList	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^function! SyntaxCheckers_cpp_cpplint_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_gcc_GetLocList	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_gcc_IsAvailable	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_cpp_verapp_GetLocList	bundle/syntastic/syntax_checkers/cpp/verapp.vim	/^function! SyntaxCheckers_cpp_verapp_GetLocList() dict$/;"	f
SyntaxCheckers_cs_mcs_GetLocList	bundle/syntastic/syntax_checkers/cs/mcs.vim	/^function! SyntaxCheckers_cs_mcs_GetLocList() dict$/;"	f
SyntaxCheckers_css_csslint_GetLocList	bundle/syntastic/syntax_checkers/css/csslint.vim	/^function! SyntaxCheckers_css_csslint_GetLocList() dict$/;"	f
SyntaxCheckers_css_prettycss_GetHighlightRegex	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_css_prettycss_GetLocList	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetLocList() dict$/;"	f
SyntaxCheckers_css_stylelint_GetLocList	bundle/syntastic/syntax_checkers/css/stylelint.vim	/^function! SyntaxCheckers_css_stylelint_GetLocList() dict$/;"	f
SyntaxCheckers_cucumber_cucumber_GetLocList	bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^function! SyntaxCheckers_cucumber_cucumber_GetLocList() dict$/;"	f
SyntaxCheckers_cuda_nvcc_GetLocList	bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^function! SyntaxCheckers_cuda_nvcc_GetLocList() dict$/;"	f
SyntaxCheckers_d_dmd_GetLocList	bundle/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_d_dmd_IsAvailable	bundle/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_d_dscanner_GetHighlightRegex	bundle/syntastic/syntax_checkers/d/dscanner.vim	/^function! SyntaxCheckers_d_dscanner_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_d_dscanner_GetLocList	bundle/syntastic/syntax_checkers/d/dscanner.vim	/^function! SyntaxCheckers_d_dscanner_GetLocList() dict$/;"	f
SyntaxCheckers_dart_dartanalyzer_GetHighlightRegex	bundle/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^function! SyntaxCheckers_dart_dartanalyzer_GetHighlightRegex(error)$/;"	f
SyntaxCheckers_dart_dartanalyzer_GetLocList	bundle/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^function! SyntaxCheckers_dart_dartanalyzer_GetLocList() dict$/;"	f
SyntaxCheckers_docbk_igor_GetLocList	bundle/syntastic/syntax_checkers/docbk/igor.vim	/^function! SyntaxCheckers_docbk_igor_GetLocList() dict$/;"	f
SyntaxCheckers_dockerfile_dockerfile_lint_GetLocList	bundle/syntastic/syntax_checkers/dockerfile/dockerfile_lint.vim	/^function! SyntaxCheckers_dockerfile_dockerfile_lint_GetLocList() dict$/;"	f
SyntaxCheckers_dockerfile_hadolint_GetLocList	bundle/syntastic/syntax_checkers/dockerfile/hadolint.vim	/^function! SyntaxCheckers_dockerfile_hadolint_GetLocList() dict$/;"	f
SyntaxCheckers_dustjs_swiffer_GetLocList	bundle/syntastic/syntax_checkers/dustjs/swiffer.vim	/^function! SyntaxCheckers_dustjs_swiffer_GetLocList() dict$/;"	f
SyntaxCheckers_elixir_elixir_GetLocList	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_GetLocList() dict$/;"	f
SyntaxCheckers_elixir_elixir_IsAvailable	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_IsAvailable() dict$/;"	f
SyntaxCheckers_erlang_escript_GetLocList	bundle/syntastic/syntax_checkers/erlang/escript.vim	/^function! SyntaxCheckers_erlang_escript_GetLocList() dict$/;"	f
SyntaxCheckers_erlang_syntaxerl_GetLocList	bundle/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^function! SyntaxCheckers_erlang_syntaxerl_GetLocList() dict$/;"	f
SyntaxCheckers_eruby_ruby_GetLocList	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_GetLocList() dict$/;"	f
SyntaxCheckers_eruby_ruby_IsAvailable	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_IsAvailable() dict$/;"	f
SyntaxCheckers_fortran_gfortran_GetLocList	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_fortran_gfortran_IsAvailable	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_glsl_cgc_GetLocList	bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^function! SyntaxCheckers_glsl_cgc_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_go_go_GetLocList	bundle/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_GetLocList() dict$/;"	f
SyntaxCheckers_go_go_IsAvailable	bundle/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_IsAvailable() dict$/;"	f
SyntaxCheckers_go_gofmt_GetLocList	bundle/syntastic/syntax_checkers/go/gofmt.vim	/^function! SyntaxCheckers_go_gofmt_GetLocList() dict$/;"	f
SyntaxCheckers_go_golangci_lint_GetLocList	bundle/syntastic/syntax_checkers/go/golangci_lint.vim	/^function! SyntaxCheckers_go_golangci_lint_GetLocList() dict$/;"	f
SyntaxCheckers_go_golint_GetLocList	bundle/syntastic/syntax_checkers/go/golint.vim	/^function! SyntaxCheckers_go_golint_GetLocList() dict$/;"	f
SyntaxCheckers_go_gometalinter_GetLocList	bundle/syntastic/syntax_checkers/go/gometalinter.vim	/^function! SyntaxCheckers_go_gometalinter_GetLocList() dict$/;"	f
SyntaxCheckers_go_gotype_GetLocList	bundle/syntastic/syntax_checkers/go/gotype.vim	/^function! SyntaxCheckers_go_gotype_GetLocList() dict$/;"	f
SyntaxCheckers_go_govet_GetLocList	bundle/syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_GetLocList() dict$/;"	f
SyntaxCheckers_haml_haml_GetLocList	bundle/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_GetLocList() dict$/;"	f
SyntaxCheckers_haml_haml_IsAvailable	bundle/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_IsAvailable() dict$/;"	f
SyntaxCheckers_haml_haml_lint_GetLocList	bundle/syntastic/syntax_checkers/haml/haml_lint.vim	/^function! SyntaxCheckers_haml_haml_lint_GetLocList() dict$/;"	f
SyntaxCheckers_handlebars_handlebars_GetLocList	bundle/syntastic/syntax_checkers/handlebars/handlebars.vim	/^function! SyntaxCheckers_handlebars_handlebars_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_hdevtools_GetLocList	bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^function! SyntaxCheckers_haskell_hdevtools_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_hlint_GetLocList	bundle/syntastic/syntax_checkers/haskell/hlint.vim	/^function! SyntaxCheckers_haskell_hlint_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_hlint_IsAvailable	bundle/syntastic/syntax_checkers/haskell/hlint.vim	/^function! SyntaxCheckers_haskell_hlint_IsAvailable() dict$/;"	f
SyntaxCheckers_haskell_scan_GetLocList	bundle/syntastic/syntax_checkers/haskell/scan.vim	/^function! SyntaxCheckers_haskell_scan_GetLocList() dict$/;"	f
SyntaxCheckers_haxe_haxe_GetLocList	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^function! SyntaxCheckers_haxe_haxe_GetLocList() dict$/;"	f
SyntaxCheckers_hss_hss_GetLocList	bundle/syntastic/syntax_checkers/hss/hss.vim	/^function! SyntaxCheckers_hss_hss_GetLocList() dict$/;"	f
SyntaxCheckers_html_htmlhint_GetLocList	bundle/syntastic/syntax_checkers/html/htmlhint.vim	/^function! SyntaxCheckers_html_htmlhint_GetLocList() dict$/;"	f
SyntaxCheckers_html_htmlhint_IsAvailable	bundle/syntastic/syntax_checkers/html/htmlhint.vim	/^function! SyntaxCheckers_html_htmlhint_IsAvailable() dict$/;"	f
SyntaxCheckers_html_jshint_GetLocList	bundle/syntastic/syntax_checkers/html/jshint.vim	/^function! SyntaxCheckers_html_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_html_jshint_IsAvailable	bundle/syntastic/syntax_checkers/html/jshint.vim	/^function! SyntaxCheckers_html_jshint_IsAvailable() dict$/;"	f
SyntaxCheckers_html_tidy_GetLocList	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! SyntaxCheckers_html_tidy_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_html_validator_GetLocList	bundle/syntastic/syntax_checkers/html/validator.vim	/^function! SyntaxCheckers_html_validator_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_html_w3_GetLocList	bundle/syntastic/syntax_checkers/html/w3.vim	/^function! SyntaxCheckers_html_w3_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_java_checkstyle_GetLocList	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_GetLocList() dict$/;"	f
SyntaxCheckers_java_checkstyle_IsAvailable	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_IsAvailable() dict$/;"	f
SyntaxCheckers_java_javac_GetLocList	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_java_javac_IsAvailable	bundle/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_javascript_closurecompiler_GetLocList	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_closurecompiler_IsAvailable	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_eslint_GetLocList	bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^function! SyntaxCheckers_javascript_eslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_eslint_IsAvailable	bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^function! SyntaxCheckers_javascript_eslint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_flow_GetLocList	bundle/syntastic/syntax_checkers/javascript/flow.vim	/^function! SyntaxCheckers_javascript_flow_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_flow_IsAvailable	bundle/syntastic/syntax_checkers/javascript/flow.vim	/^function! SyntaxCheckers_javascript_flow_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_gjslint_GetLocList	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^function! SyntaxCheckers_javascript_gjslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jscs_GetLocList	bundle/syntastic/syntax_checkers/javascript/jscs.vim	/^function! SyntaxCheckers_javascript_jscs_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jscs_IsAvailable	bundle/syntastic/syntax_checkers/javascript/jscs.vim	/^function! SyntaxCheckers_javascript_jscs_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_jshint_GetLocList	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jshint_IsAvailable	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_jsl_GetLocList	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^function! SyntaxCheckers_javascript_jsl_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jslint_GetHighlightRegex	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_javascript_jslint_GetLocList	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jsxhint_GetLocList	bundle/syntastic/syntax_checkers/javascript/jsxhint.vim	/^function! SyntaxCheckers_javascript_jsxhint_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_javascript_jsxhint_IsAvailable	bundle/syntastic/syntax_checkers/javascript/jsxhint.vim	/^function! SyntaxCheckers_javascript_jsxhint_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_javascript_lynt_GetLocList	bundle/syntastic/syntax_checkers/javascript/lynt.vim	/^function! SyntaxCheckers_javascript_lynt_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_mixedindentlint_GetLocList	bundle/syntastic/syntax_checkers/javascript/mixedindentlint.vim	/^function! SyntaxCheckers_javascript_mixedindentlint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_standard_GetLocList	bundle/syntastic/syntax_checkers/javascript/standard.vim	/^function! SyntaxCheckers_javascript_standard_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_standard_IsAvailable	bundle/syntastic/syntax_checkers/javascript/standard.vim	/^function! SyntaxCheckers_javascript_standard_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_tern_lint_GetLocList	bundle/syntastic/syntax_checkers/javascript/tern_lint.vim	/^function! SyntaxCheckers_javascript_tern_lint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_tern_lint_IsAvailable	bundle/syntastic/syntax_checkers/javascript/tern_lint.vim	/^function! SyntaxCheckers_javascript_tern_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_json_jsonlint_GetLocList	bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^function! SyntaxCheckers_json_jsonlint_GetLocList() dict$/;"	f
SyntaxCheckers_json_jsonval_GetLocList	bundle/syntastic/syntax_checkers/json/jsonval.vim	/^function! SyntaxCheckers_json_jsonval_GetLocList() dict$/;"	f
SyntaxCheckers_julia_lint_GetHighlightRegex	bundle/syntastic/syntax_checkers/julia/lint.vim	/^function! SyntaxCheckers_julia_lint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_julia_lint_GetLocList	bundle/syntastic/syntax_checkers/julia/lint.vim	/^function! SyntaxCheckers_julia_lint_GetLocList() dict$/;"	f
SyntaxCheckers_julia_lint_IsAvailable	bundle/syntastic/syntax_checkers/julia/lint.vim	/^function! SyntaxCheckers_julia_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_less_lessc_GetLocList	bundle/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_GetLocList() dict$/;"	f
SyntaxCheckers_less_lessc_IsAvailable	bundle/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_IsAvailable() dict$/;"	f
SyntaxCheckers_less_recess_GetLocList	bundle/syntastic/syntax_checkers/less/recess.vim	/^function! SyntaxCheckers_less_recess_GetLocList() dict$/;"	f
SyntaxCheckers_lex_flex_GetHighlightRegex	bundle/syntastic/syntax_checkers/lex/flex.vim	/^function! SyntaxCheckers_lex_flex_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_lex_flex_GetLocList	bundle/syntastic/syntax_checkers/lex/flex.vim	/^function! SyntaxCheckers_lex_flex_GetLocList() dict$/;"	f
SyntaxCheckers_limbo_limbo_GetLocList	bundle/syntastic/syntax_checkers/limbo/limbo.vim	/^function! SyntaxCheckers_limbo_limbo_GetLocList() dict$/;"	f
SyntaxCheckers_lisp_clisp_GetLocList	bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^function! SyntaxCheckers_lisp_clisp_GetLocList() dict$/;"	f
SyntaxCheckers_llvm_llvm_GetLocList	bundle/syntastic/syntax_checkers/llvm/llvm.vim	/^function! SyntaxCheckers_llvm_llvm_GetLocList() dict$/;"	f
SyntaxCheckers_lua_luac_GetHighlightRegex	bundle/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetHighlightRegex(pos)$/;"	f
SyntaxCheckers_lua_luac_GetLocList	bundle/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetLocList() dict$/;"	f
SyntaxCheckers_lua_luacheck_GetHighlightRegex	bundle/syntastic/syntax_checkers/lua/luacheck.vim	/^function! SyntaxCheckers_lua_luacheck_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_lua_luacheck_GetLocList	bundle/syntastic/syntax_checkers/lua/luacheck.vim	/^function! SyntaxCheckers_lua_luacheck_GetLocList() dict$/;"	f
SyntaxCheckers_markdown_mdl_GetLocList	bundle/syntastic/syntax_checkers/markdown/mdl.vim	/^function! SyntaxCheckers_markdown_mdl_GetLocList() dict$/;"	f
SyntaxCheckers_markdown_remark_lint_GetLocList	bundle/syntastic/syntax_checkers/markdown/remark_lint.vim	/^function! SyntaxCheckers_markdown_remark_lint_GetLocList() dict$/;"	f
SyntaxCheckers_matlab_mlint_GetLocList	bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^function! SyntaxCheckers_matlab_mlint_GetLocList() dict$/;"	f
SyntaxCheckers_mercury_mmc_GetLocList	bundle/syntastic/syntax_checkers/mercury/mmc.vim	/^function! SyntaxCheckers_mercury_mmc_GetLocList() dict$/;"	f
SyntaxCheckers_nasm_nasm_GetLocList	bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^function! SyntaxCheckers_nasm_nasm_GetLocList() dict$/;"	f
SyntaxCheckers_nix_nix_GetLocList	bundle/syntastic/syntax_checkers/nix/nix.vim	/^function! SyntaxCheckers_nix_nix_GetLocList() dict$/;"	f
SyntaxCheckers_nroff_mandoc_GetLocList	bundle/syntastic/syntax_checkers/nroff/mandoc.vim	/^function! SyntaxCheckers_nroff_mandoc_GetLocList() dict$/;"	f
SyntaxCheckers_objc_gcc_GetLocList	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_objc_gcc_IsAvailable	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_objcpp_gcc_GetLocList	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_objcpp_gcc_IsAvailable	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_ocaml_camlp4o_GetLocList	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_ocaml_camlp4o_IsAvailable	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_perl6_perl6_GetHighlightRegex	bundle/syntastic/syntax_checkers/perl6/perl6.vim	/^function! SyntaxCheckers_perl6_perl6_GetHighlightRegex(item) " {{{1$/;"	f
SyntaxCheckers_perl6_perl6_GetLocList	bundle/syntastic/syntax_checkers/perl6/perl6.vim	/^function! SyntaxCheckers_perl6_perl6_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_perl6_perl6_IsAvailable	bundle/syntastic/syntax_checkers/perl6/perl6.vim	/^function! SyntaxCheckers_perl6_perl6_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_perl_perl_GetLocList	bundle/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_perl_perl_IsAvailable	bundle/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_perl_perlcritic_GetLocList	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^function! SyntaxCheckers_perl_perlcritic_GetLocList() dict$/;"	f
SyntaxCheckers_php_php_GetHighlightRegex	bundle/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_php_GetLocList	bundle/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpcs_GetLocList	bundle/syntastic/syntax_checkers/php/phpcs.vim	/^function! SyntaxCheckers_php_phpcs_GetLocList() dict$/;"	f
SyntaxCheckers_php_phplint_GetHighlightRegex	bundle/syntastic/syntax_checkers/php/phplint.vim	/^function! SyntaxCheckers_php_phplint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phplint_GetLocList	bundle/syntastic/syntax_checkers/php/phplint.vim	/^function! SyntaxCheckers_php_phplint_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpmd_GetHighlightRegex	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phpmd_GetLocList	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpstan_GetLocList	bundle/syntastic/syntax_checkers/php/phpstan.vim	/^function! SyntaxCheckers_php_phpstan_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpstan_IsAvailable	bundle/syntastic/syntax_checkers/php/phpstan.vim	/^function! SyntaxCheckers_php_phpstan_IsAvailable() dict$/;"	f
SyntaxCheckers_po_dennis_GetLocList	bundle/syntastic/syntax_checkers/po/dennis.vim	/^function! SyntaxCheckers_po_dennis_GetLocList() dict$/;"	f
SyntaxCheckers_po_msgfmt_GetHighlightRegex	bundle/syntastic/syntax_checkers/po/msgfmt.vim	/^function! SyntaxCheckers_po_msgfmt_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_po_msgfmt_GetLocList	bundle/syntastic/syntax_checkers/po/msgfmt.vim	/^function! SyntaxCheckers_po_msgfmt_GetLocList() dict$/;"	f
SyntaxCheckers_pod_podchecker_GetLocList	bundle/syntastic/syntax_checkers/pod/podchecker.vim	/^function! SyntaxCheckers_pod_podchecker_GetLocList() dict$/;"	f
SyntaxCheckers_pug_pug_lint_GetLocList	bundle/syntastic/syntax_checkers/pug/pug_lint.vim	/^function! SyntaxCheckers_pug_pug_lint_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppet_GetLocList	bundle/syntastic/syntax_checkers/puppet/puppet.vim	/^function! SyntaxCheckers_puppet_puppet_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppetlint_GetLocList	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppetlint_IsAvailable	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_IsAvailable() dict$/;"	f
SyntaxCheckers_python_bandit_GetLocList	bundle/syntastic/syntax_checkers/python/bandit.vim	/^function! SyntaxCheckers_python_bandit_GetLocList() dict$/;"	f
SyntaxCheckers_python_flake8_GetHighlightRegex	bundle/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_python_flake8_GetLocList	bundle/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetLocList() dict$/;"	f
SyntaxCheckers_python_frosted_GetLocList	bundle/syntastic/syntax_checkers/python/frosted.vim	/^function! SyntaxCheckers_python_frosted_GetLocList() dict$/;"	f
SyntaxCheckers_python_mypy_GetLocList	bundle/syntastic/syntax_checkers/python/mypy.vim	/^function! SyntaxCheckers_python_mypy_GetLocList() dict$/;"	f
SyntaxCheckers_python_prospector_GetLocList	bundle/syntastic/syntax_checkers/python/prospector.vim	/^function! SyntaxCheckers_python_prospector_GetLocList() dict$/;"	f
SyntaxCheckers_python_prospector_IsAvailable	bundle/syntastic/syntax_checkers/python/prospector.vim	/^function! SyntaxCheckers_python_prospector_IsAvailable() dict$/;"	f
SyntaxCheckers_python_py3kwarn_GetLocList	bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^function! SyntaxCheckers_python_py3kwarn_GetLocList() dict$/;"	f
SyntaxCheckers_python_pycodestyle_GetLocList	bundle/syntastic/syntax_checkers/python/pycodestyle.vim	/^function! SyntaxCheckers_python_pycodestyle_GetLocList() dict$/;"	f
SyntaxCheckers_python_pydocstyle_GetLocList	bundle/syntastic/syntax_checkers/python/pydocstyle.vim	/^function! SyntaxCheckers_python_pydocstyle_GetLocList() dict$/;"	f
SyntaxCheckers_python_pyflakes_GetHighlightRegex	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_python_pyflakes_GetLocList	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylama_GetHighlightRegex	bundle/syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_python_pylama_GetLocList	bundle/syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylint_GetLocList	bundle/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_python_pylint_IsAvailable	bundle/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_python_python_GetLocList	bundle/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_GetLocList() dict$/;"	f
SyntaxCheckers_python_python_IsAvailable	bundle/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_IsAvailable() dict$/;"	f
SyntaxCheckers_qml_qmllint_GetLocList	bundle/syntastic/syntax_checkers/qml/qmllint.vim	/^function! SyntaxCheckers_qml_qmllint_GetLocList() dict$/;"	f
SyntaxCheckers_r_lint_GetHighlightRegex	bundle/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_lint_GetLocList	bundle/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_GetLocList() dict$/;"	f
SyntaxCheckers_r_lint_IsAvailable	bundle/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_r_lintr_GetHighlightRegex	bundle/syntastic/syntax_checkers/r/lintr.vim	/^function! SyntaxCheckers_r_lintr_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_lintr_GetLocList	bundle/syntastic/syntax_checkers/r/lintr.vim	/^function! SyntaxCheckers_r_lintr_GetLocList() dict$/;"	f
SyntaxCheckers_r_lintr_IsAvailable	bundle/syntastic/syntax_checkers/r/lintr.vim	/^function! SyntaxCheckers_r_lintr_IsAvailable() dict$/;"	f
SyntaxCheckers_r_svtools_GetHighlightRegex	bundle/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_svtools_GetLocList	bundle/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_GetLocList() dict$/;"	f
SyntaxCheckers_r_svtools_IsAvailable	bundle/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_IsAvailable() dict$/;"	f
SyntaxCheckers_racket_code_ayatollah_GetLocList	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^function! SyntaxCheckers_racket_code_ayatollah_GetLocList() dict$/;"	f
SyntaxCheckers_racket_code_ayatollah_IsAvailable	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^function! SyntaxCheckers_racket_code_ayatollah_IsAvailable() dict$/;"	f
SyntaxCheckers_racket_racket_GetLocList	bundle/syntastic/syntax_checkers/racket/racket.vim	/^function! SyntaxCheckers_racket_racket_GetLocList() dict$/;"	f
SyntaxCheckers_rnc_rnv_GetLocList	bundle/syntastic/syntax_checkers/rnc/rnv.vim	/^function! SyntaxCheckers_rnc_rnv_GetLocList() dict$/;"	f
SyntaxCheckers_rst_rst2pseudoxml_GetLocList	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^function! SyntaxCheckers_rst_rst2pseudoxml_GetLocList() dict$/;"	f
SyntaxCheckers_rst_rst2pseudoxml_IsAvailable	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^function! SyntaxCheckers_rst_rst2pseudoxml_IsAvailable() dict$/;"	f
SyntaxCheckers_rst_rstcheck_GetLocList	bundle/syntastic/syntax_checkers/rst/rstcheck.vim	/^function! SyntaxCheckers_rst_rstcheck_GetLocList() dict$/;"	f
SyntaxCheckers_rst_sphinx_GetLocList	bundle/syntastic/syntax_checkers/rst/sphinx.vim	/^function! SyntaxCheckers_rst_sphinx_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_flog_GetLocList	bundle/syntastic/syntax_checkers/ruby/flog.vim	/^function! SyntaxCheckers_ruby_flog_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_jruby_GetLocList	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^function! SyntaxCheckers_ruby_jruby_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_macruby_GetLocList	bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^function! SyntaxCheckers_ruby_macruby_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_mri_GetHighlightRegex	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_ruby_mri_GetLocList	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_mri_IsAvailable	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_reek_GetLocList	bundle/syntastic/syntax_checkers/ruby/reek.vim	/^function! SyntaxCheckers_ruby_reek_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_reek_IsAvailable	bundle/syntastic/syntax_checkers/ruby/reek.vim	/^function! SyntaxCheckers_ruby_reek_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_rubocop_GetLocList	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_rubocop_IsAvailable	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_rubylint_GetLocList	bundle/syntastic/syntax_checkers/ruby/rubylint.vim	/^function! SyntaxCheckers_ruby_rubylint_GetLocList() dict$/;"	f
SyntaxCheckers_sass_sass_GetLocList	bundle/syntastic/syntax_checkers/sass/sass.vim	/^function! SyntaxCheckers_sass_sass_GetLocList() dict$/;"	f
SyntaxCheckers_sass_sass_lint_GetLocList	bundle/syntastic/syntax_checkers/sass/sass_lint.vim	/^function! SyntaxCheckers_sass_sass_lint_GetLocList() dict$/;"	f
SyntaxCheckers_sass_sass_lint_IsAvailable	bundle/syntastic/syntax_checkers/sass/sass_lint.vim	/^function! SyntaxCheckers_sass_sass_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_sass_sassc_GetLocList	bundle/syntastic/syntax_checkers/sass/sassc.vim	/^function! SyntaxCheckers_sass_sassc_GetLocList() dict$/;"	f
SyntaxCheckers_scala_fsc_GetLocList	bundle/syntastic/syntax_checkers/scala/fsc.vim	/^function! SyntaxCheckers_scala_fsc_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalac_GetLocList	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^function! SyntaxCheckers_scala_scalac_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalastyle_GetLocList	bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^function! SyntaxCheckers_scala_scalastyle_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalastyle_IsAvailable	bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^function! SyntaxCheckers_scala_scalastyle_IsAvailable() dict$/;"	f
SyntaxCheckers_scss_scss_lint_GetLocList	bundle/syntastic/syntax_checkers/scss/scss_lint.vim	/^function! SyntaxCheckers_scss_scss_lint_GetLocList() dict$/;"	f
SyntaxCheckers_scss_scss_lint_IsAvailable	bundle/syntastic/syntax_checkers/scss/scss_lint.vim	/^function! SyntaxCheckers_scss_scss_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_sh_bashate_GetLocList	bundle/syntastic/syntax_checkers/sh/bashate.vim	/^function! SyntaxCheckers_sh_bashate_GetLocList() dict$/;"	f
SyntaxCheckers_sh_checkbashisms_GetLocList	bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^function! SyntaxCheckers_sh_checkbashisms_GetLocList() dict$/;"	f
SyntaxCheckers_sh_sh_GetLocList	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_sh_sh_IsAvailable	bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_sh_shellcheck_GetLocList	bundle/syntastic/syntax_checkers/sh/shellcheck.vim	/^function! SyntaxCheckers_sh_shellcheck_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_slim_slim_lint_GetLocList	bundle/syntastic/syntax_checkers/slim/slim_lint.vim	/^function! SyntaxCheckers_slim_slim_lint_GetLocList() dict$/;"	f
SyntaxCheckers_slim_slimrb_GetLocList	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^function! SyntaxCheckers_slim_slimrb_GetLocList() dict$/;"	f
SyntaxCheckers_sml_smlnj_GetLocList	bundle/syntastic/syntax_checkers/sml/smlnj.vim	/^function! SyntaxCheckers_sml_smlnj_GetLocList() dict$/;"	f
SyntaxCheckers_solidity_solc_GetLocList	bundle/syntastic/syntax_checkers/solidity/solc.vim	/^function! SyntaxCheckers_solidity_solc_GetLocList() dict$/;"	f
SyntaxCheckers_solidity_solhint_GetLocList	bundle/syntastic/syntax_checkers/solidity/solhint.vim	/^function! SyntaxCheckers_solidity_solhint_GetLocList() dict$/;"	f
SyntaxCheckers_solidity_solium_GetLocList	bundle/syntastic/syntax_checkers/solidity/solium.vim	/^function! SyntaxCheckers_solidity_solium_GetLocList() dict$/;"	f
SyntaxCheckers_spec_rpmlint_GetLocList	bundle/syntastic/syntax_checkers/spec/rpmlint.vim	/^function! SyntaxCheckers_spec_rpmlint_GetLocList() dict$/;"	f
SyntaxCheckers_sql_sqlint_GetHighlightRegex	bundle/syntastic/syntax_checkers/sql/sqlint.vim	/^function! SyntaxCheckers_sql_sqlint_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_sql_sqlint_GetLocList	bundle/syntastic/syntax_checkers/sql/sqlint.vim	/^function! SyntaxCheckers_sql_sqlint_GetLocList() dict$/;"	f
SyntaxCheckers_sql_sqlint_IsAvailable	bundle/syntastic/syntax_checkers/sql/sqlint.vim	/^function! SyntaxCheckers_sql_sqlint_IsAvailable() dict$/;"	f
SyntaxCheckers_sql_tsqllint_GetLocList	bundle/syntastic/syntax_checkers/sql/tsqllint.vim	/^function! SyntaxCheckers_sql_tsqllint_GetLocList() dict$/;"	f
SyntaxCheckers_stylus_stylint_GetLocList	bundle/syntastic/syntax_checkers/stylus/stylint.vim	/^function! SyntaxCheckers_stylus_stylint_GetLocList() dict$/;"	f
SyntaxCheckers_tcl_nagelfar_GetLocList	bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^function! SyntaxCheckers_tcl_nagelfar_GetLocList() dict$/;"	f
SyntaxCheckers_tex_chktex_GetLocList	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^function! SyntaxCheckers_tex_chktex_GetLocList() dict$/;"	f
SyntaxCheckers_tex_lacheck_GetLocList	bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^function! SyntaxCheckers_tex_lacheck_GetLocList() dict$/;"	f
SyntaxCheckers_texinfo_makeinfo_GetHighlightRegex	bundle/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^function! SyntaxCheckers_texinfo_makeinfo_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_texinfo_makeinfo_GetLocList	bundle/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^function! SyntaxCheckers_texinfo_makeinfo_GetLocList() dict$/;"	f
SyntaxCheckers_text_atdtool_GetHighlightRegex	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_text_atdtool_GetLocList	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetLocList() dict$/;"	f
SyntaxCheckers_text_language_check_GetLocList	bundle/syntastic/syntax_checkers/text/language_check.vim	/^function! SyntaxCheckers_text_language_check_GetLocList() dict$/;"	f
SyntaxCheckers_text_proselint_GetLocList	bundle/syntastic/syntax_checkers/text/proselint.vim	/^function! SyntaxCheckers_text_proselint_GetLocList() dict$/;"	f
SyntaxCheckers_text_textlint_GetLocList	bundle/syntastic/syntax_checkers/text/textlint.vim	/^function! SyntaxCheckers_text_textlint_GetLocList() dict$/;"	f
SyntaxCheckers_turtle_rapper_GetHighlightRegex	bundle/syntastic/syntax_checkers/turtle/rapper.vim	/^function! SyntaxCheckers_turtle_rapper_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_turtle_rapper_GetLocList	bundle/syntastic/syntax_checkers/turtle/rapper.vim	/^function! SyntaxCheckers_turtle_rapper_GetLocList() dict$/;"	f
SyntaxCheckers_turtle_ttl_GetHighlightRegex	bundle/syntastic/syntax_checkers/turtle/ttl.vim	/^function! SyntaxCheckers_turtle_ttl_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_turtle_ttl_GetLocList	bundle/syntastic/syntax_checkers/turtle/ttl.vim	/^function! SyntaxCheckers_turtle_ttl_GetLocList() dict$/;"	f
SyntaxCheckers_twig_twiglint_GetLocList	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^function! SyntaxCheckers_twig_twiglint_GetLocList() dict$/;"	f
SyntaxCheckers_typescript_tslint_GetHighlightRegex	bundle/syntastic/syntax_checkers/typescript/tslint.vim	/^function! SyntaxCheckers_typescript_tslint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_typescript_tslint_GetLocList	bundle/syntastic/syntax_checkers/typescript/tslint.vim	/^function! SyntaxCheckers_typescript_tslint_GetLocList() dict$/;"	f
SyntaxCheckers_vala_valac_GetHighlightRegex	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetHighlightRegex(pos) " {{{1$/;"	f
SyntaxCheckers_vala_valac_GetLocList	bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_verilog_iverilog_GetLocList	bundle/syntastic/syntax_checkers/verilog/iverilog.vim	/^function! SyntaxCheckers_verilog_iverilog_GetLocList() dict$/;"	f
SyntaxCheckers_verilog_verilator_GetLocList	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^function! SyntaxCheckers_verilog_verilator_GetLocList() dict$/;"	f
SyntaxCheckers_verilog_verilator_IsAvailable	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^function! SyntaxCheckers_verilog_verilator_IsAvailable() dict$/;"	f
SyntaxCheckers_vhdl_ghdl_GetLocList	bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^function! SyntaxCheckers_vhdl_ghdl_GetLocList() dict$/;"	f
SyntaxCheckers_vhdl_vcom_GetLocList	bundle/syntastic/syntax_checkers/vhdl/vcom.vim	/^function! SyntaxCheckers_vhdl_vcom_GetLocList() dict$/;"	f
SyntaxCheckers_vim_vimlint_GetHighlightRegex	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_GetHighlightRegex(item) " {{{1$/;"	f
SyntaxCheckers_vim_vimlint_GetLocList	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_vim_vimlint_IsAvailable	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_vim_vint_GetLocList	bundle/syntastic/syntax_checkers/vim/vint.vim	/^function! SyntaxCheckers_vim_vint_GetLocList() dict$/;"	f
SyntaxCheckers_vue_pug_lint_vue_GetLocList	bundle/syntastic/syntax_checkers/vue/pug_lint_vue.vim	/^function! SyntaxCheckers_vue_pug_lint_vue_GetLocList() dict$/;"	f
SyntaxCheckers_xhtml_tidy_GetLocList	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! SyntaxCheckers_xhtml_tidy_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_xml_plutil_GetLocList	bundle/syntastic/syntax_checkers/xml/plutil.vim	/^function! SyntaxCheckers_xml_plutil_GetLocList() dict$/;"	f
SyntaxCheckers_xml_xmllint_GetLocList	bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^function! SyntaxCheckers_xml_xmllint_GetLocList() dict$/;"	f
SyntaxCheckers_xquery_basex_GetLocList	bundle/syntastic/syntax_checkers/xquery/basex.vim	/^function! SyntaxCheckers_xquery_basex_GetLocList() dict$/;"	f
SyntaxCheckers_yacc_bison_GetLocList	bundle/syntastic/syntax_checkers/yacc/bison.vim	/^function! SyntaxCheckers_yacc_bison_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_jsyaml_GetLocList	bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^function! SyntaxCheckers_yaml_jsyaml_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamllint_GetLocList	bundle/syntastic/syntax_checkers/yaml/yamllint.vim	/^function! SyntaxCheckers_yaml_yamllint_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamlxs_GetLocList	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function! SyntaxCheckers_yaml_yamlxs_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamlxs_IsAvailable	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function! SyntaxCheckers_yaml_yamlxs_IsAvailable() dict$/;"	f
SyntaxCheckers_yang_pyang_GetHighlightRegex	bundle/syntastic/syntax_checkers/yang/pyang.vim	/^function! SyntaxCheckers_yang_pyang_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_yang_pyang_GetLocList	bundle/syntastic/syntax_checkers/yang/pyang.vim	/^function! SyntaxCheckers_yang_pyang_GetLocList() dict$/;"	f
SyntaxCheckers_yara_yarac_GetLocList	bundle/syntastic/syntax_checkers/yara/yara.vim	/^function! SyntaxCheckers_yara_yarac_GetLocList() dict$/;"	f
SyntaxCheckers_z80_z80syntaxchecker_GetLocList	bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^function! SyntaxCheckers_z80_z80syntaxchecker_GetLocList() dict$/;"	f
SyntaxCheckers_zpt_zptlint_GetLocList	bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^function! SyntaxCheckers_zpt_zptlint_GetLocList() dict$/;"	f
SyntaxCheckers_zsh_zsh_GetLocList	bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^function! SyntaxCheckers_zsh_zsh_GetLocList() dict$/;"	f
SystemError	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:SystemError(cmd, ...) abort$/;"	f
TAGS_FILE	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set TAGS_FILE=%~2$/;"	v
TAGS_FILE	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^set TAGS_FILE=tags$/;"	v
Tagbar	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 Tagbar              call tagbar#ToggleWindow()$/;"	c
TagbarBalloonExpr	bundle/tagbar/autoload/tagbar.vim	/^function! TagbarBalloonExpr() abort$/;"	f
TagbarBufName	bundle/tagbar/autoload/tagbar.vim	/^function! s:TagbarBufName() abort$/;"	f
TagbarClose	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarClose         call tagbar#CloseWindow()$/;"	c
TagbarCurrentTag	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarCurrentTag    echo tagbar#currenttag('%s', 'No current tag', <f-args>)$/;"	c
TagbarDebug	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarDebug         call tagbar#debug#start_debug(<f-args>)$/;"	c
TagbarDebugEnd	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarDebugEnd      call tagbar#debug#stop_debug()$/;"	c
TagbarGetTypeConfig	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=1 TagbarGetTypeConfig call tagbar#gettypeconfig(<f-args>)$/;"	c
TagbarOpen	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarOpen          call tagbar#OpenWindow(<f-args>)$/;"	c
TagbarOpenAutoClose	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarOpenAutoClose call tagbar#OpenWindow('fcj')$/;"	c
TagbarSession	bundle/tagbar/plugin/tagbar.vim	/^augroup TagbarSession$/;"	a
TagbarSetFoldlevel	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=1 -bang TagbarSetFoldlevel  call tagbar#SetFoldLevel(<args>, <bang>0)$/;"	c
TagbarShowTag	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarShowTag       call tagbar#highlighttag(1, 1)$/;"	c
TagbarToggle	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarToggle        call tagbar#ToggleWindow()$/;"	c
TagbarTogglePause	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarTogglePause   call tagbar#toggle_pause()$/;"	c
TempCmd	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:TempCmd(out, cmd) abort$/;"	f
TempReadPost	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:TempReadPost(file) abort$/;"	f
TempReadPre	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:TempReadPre(file) abort$/;"	f
TempState	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:TempState(...) abort$/;"	f
TidyEncOptByFenc	bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:TidyEncOptByFenc() " {{{2$/;"	f
TidyEncOptByFenc	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:TidyEncOptByFenc()$/;"	f
ToggleAutoclose	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleAutoclose() abort$/;"	f
ToggleCaseInsensitive	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleCaseInsensitive() abort$/;"	f
ToggleFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleFold() abort$/;"	f
ToggleHelp	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleHelp() abort$/;"	f
ToggleHideNonPublicTags	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleHideNonPublicTags() abort$/;"	f
ToggleSort	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleSort() abort$/;"	f
ToggleWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleWindow(flags) abort$/;"	f
TransformUserTypeDef	bundle/tagbar/autoload/tagbar.vim	/^function! s:TransformUserTypeDef(def) abort$/;"	f
Tree	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Tree(...) abort$/;"	f
Tree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Tree(path) abort$/;"	f
TreeChomp	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:TreeChomp(...) abort$/;"	f
TreeDirNode.AbsoluteTreeRoot	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path, nerdtree)$/;"	f
TreeDirNode._glob	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._glob(pattern, all)$/;"	f
TreeDirNode._initChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode.activate	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.displayString	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.displayString()$/;"	f
TreeDirNode.findNode	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getCascade	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascade()$/;"	f
TreeDirNode.getCascadeRoot	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascadeRoot()$/;"	f
TreeDirNode.getChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getDirChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getDirChildren()$/;"	f
TreeDirNode.getVisibleChildCount	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.isCascadable	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.isCascadable()$/;"	f
TreeDirNode.open	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.refreshDirFlags	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshDirFlags()$/;"	f
TreeDirNode.refreshFlags	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshFlags()$/;"	f
TreeDirNode.removeChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path, ...)$/;"	f
TreeDirNode.sortChildren	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetSelected	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path, nerdtree)$/;"	f
TreeFileNode._renderToString	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText)$/;"	f
TreeFileNode.activate	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findSibling	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getNerdtree	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getNerdtree()$/;"	f
TreeFileNode.isRoot	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.open	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openExplorer	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openExplorer()$/;"	f
TreeFileNode.openInNewTab	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.refreshFlags	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refreshFlags()$/;"	f
TreeFileNode.rename	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
TreeInfo	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:TreeInfo(dir, commit) abort$/;"	f
UI.IndentWid	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.IndentWid()$/;"	f
UI.MarkupReg	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.MarkupReg()$/;"	f
UI.New	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.New(nerdtree)$/;"	f
UI.UpDirLine	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.UpDirLine()$/;"	f
UI._dumpHelp	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._dumpHelp()$/;"	f
UI._indentLevelFor	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._indentLevelFor(line)$/;"	f
UI._renderBookmarks	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._renderBookmarks()$/;"	f
UI._stripMarkup	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._stripMarkup(line)$/;"	f
UI.centerView	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.centerView()$/;"	f
UI.getLineNum	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getLineNum(node)$/;"	f
UI.getPath	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getPath(ln)$/;"	f
UI.getRootLineNum	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getRootLineNum()$/;"	f
UI.getShowBookmarks	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowBookmarks()$/;"	f
UI.getShowFiles	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowFiles()$/;"	f
UI.getShowHelp	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHelp()$/;"	f
UI.getShowHidden	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHidden()$/;"	f
UI.isIgnoreFilterEnabled	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isIgnoreFilterEnabled()$/;"	f
UI.isMinimal	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isMinimal()$/;"	f
UI.render	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.render()$/;"	f
UI.renderViewSavingPosition	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.renderViewSavingPosition()$/;"	f
UI.restoreScreenState	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.restoreScreenState()$/;"	f
UI.saveScreenState	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.saveScreenState()$/;"	f
UI.setShowHidden	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.setShowHidden(val)$/;"	f
UI.toggleHelp	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleHelp()$/;"	f
UI.toggleIgnoreFilter	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleIgnoreFilter()$/;"	f
UI.toggleShowBookmarks	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowBookmarks()$/;"	f
UI.toggleShowFiles	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowFiles()$/;"	f
UI.toggleShowHidden	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowHidden()$/;"	f
UI.toggleZoom	bundle/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleZoom()$/;"	f
UPDATED_SOURCE	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^    set UPDATED_SOURCE=%~2$/;"	v
UPDATED_SOURCE	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^set UPDATED_SOURCE=$/;"	v
Uniq	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:Uniq(list) abort$/;"	f
Unlock	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^:Unlock$/;"	l
UpdateErrors	bundle/syntastic/plugin/syntastic.vim	/^function! s:UpdateErrors(buf, auto_invoked, checker_names) abort " {{{2$/;"	f
UsableWin	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:UsableWin(nr) abort$/;"	f
Usage	bundle/vim-gutentags/plat/win32/update_scopedb.cmd	/^:Usage$/;"	l
Usage	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^:Usage$/;"	l
UserCommand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:UserCommand(...) abort$/;"	f
UserCommandList	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:UserCommandList(...) abort$/;"	f
ValidateDub	bundle/syntastic/syntax_checkers/d/dmd.vim	/^function! s:ValidateDub(checker) " {{{2$/;"	f
Ve	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Ve       :execute s:find(<count>,'edit<bang>',<q-args>)$/;"	c
Vedit	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vedit    :execute s:find(<count>,'edit<bang>',<q-args>)$/;"	c
VimEnterHook	bundle/syntastic/plugin/syntastic.vim	/^function! s:VimEnterHook() abort " {{{2$/;"	f
Vopen	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vopen    :execute s:find(<count>,'edit<bang>',<q-args>,'lcd')$/;"	c
Vpedit	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vpedit   :execute s:find(<count>,'pedit<bang>',<q-args>)$/;"	c
Vread	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vread    :execute s:find(<count>,'read<bang>',<q-args>)$/;"	c
Vsplit	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vsplit   :execute s:find(<count>,'split<bang>',<q-args>)$/;"	c
Vtabedit	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vtabedit :execute s:find(<count>,'tabedit<bang>',<q-args>)$/;"	c
VundleClean	bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang                                          VundleClean   PluginClean<bang>$/;"	c
VundleDocs	bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=0                                                VundleDocs    PluginDocs$/;"	c
VundleInstall	bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete VundleInstall PluginInstall<bang> <args>$/;"	c
VundleSearch	bundle/Vundle.vim/autoload/vundle.vim	/^com! -nargs=? -bang -complete=custom,vundle#scripts#complete VundleSearch  PluginSearch<bang> <args>$/;"	c
VundleUpdate	bundle/Vundle.vim/autoload/vundle.vim	/^com!                                                         VundleUpdate  PluginInstall!$/;"	c
Vvsplit	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vvsplit  :execute s:find(<count>,'vsplit<bang>',<q-args>)$/;"	c
ZoomWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:ZoomWindow() abort$/;"	f
[[	bundle/vim-scala/ftplugin/scala.vim	/^noremap <script> <buffer> <silent> [[ :call <SID>NextSection(1)<cr>$/;"	m
]]	bundle/vim-scala/ftplugin/scala.vim	/^noremap <script> <buffer> <silent> ]] :call <SID>NextSection(0)<cr>$/;"	m
_"	rcs/init.vim	/^inoremap _" ""<Esc>:call BC_AddChar("\\"")<CR>i$/;"	m
_'	rcs/init.vim	/^inoremap _' ''<Esc>:call BC_AddChar("\\'")<CR>i$/;"	m
_(	rcs/init.vim	/^inoremap _( ()<Esc>:call BC_AddChar(")")<CR>i$/;"	m
_SID	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^  function! s:_SID() abort$/;"	f
_SID	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^  function! s:_SID() abort$/;"	f
_SID	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^  function! s:_SID() abort$/;"	f
_SID	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^  function! s:_SID() abort$/;"	f
_SID	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^  function! s:_SID() abort$/;"	f
_SID	bundle/neocomplete/autoload/vital/neocomplete.vim	/^  function! s:_SID() abort$/;"	f
_[	rcs/init.vim	/^inoremap _[ []<Esc>:call BC_AddChar("]")<CR>i$/;"	m
_add_to_errors	bundle/syntastic/plugin/syntastic.vim	/^function! s:_add_to_errors(errors, options) abort " {{{2$/;"	f
_checkPackage	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_checkPackage(name, ...) abort " {{{2$/;"	f
_checkPhp	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_checkPhp() abort " {{{2$/;"	f
_checkPython	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_checkPython() abort " {{{2$/;"	f
_checkRuby	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_checkRuby() abort " {{{2$/;"	f
_compare	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
_compare_checker_names	bundle/syntastic/plugin/syntastic/registry.vim	/^function! s:_compare_checker_names(a, b) abort " {{{2$/;"	f
_compare_error_items_by_columns	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! s:_compare_error_items_by_columns(a, b) abort " {{{2$/;"	f
_compare_error_items_by_lines	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! s:_compare_error_items_by_lines(a, b) abort " {{{2$/;"	f
_create_hash	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^function! s:_create_hash(dir, str) abort$/;"	f
_decode_JSON	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! s:_decode_JSON(json) abort " {{{2$/;"	f
_default_compare	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
_delete_dumb	bundle/syntastic/autoload/syntastic/util.vim	/^function! s:_delete_dumb(what, flags) abort " {{{2$/;"	f
_disabled_by_eclim	bundle/syntastic/plugin/syntastic/registry.vim	/^function! s:_disabled_by_eclim(filetype) abort " {{{2$/;"	f
_disabled_by_ycm	bundle/syntastic/plugin/syntastic/registry.vim	/^function! s:_disabled_by_ycm(filetype) abort " {{{2$/;"	f
_dot_to_sharp	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f
_encode_name	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^function! s:_encode_name(cache_dir, filename) abort$/;"	f
_exists_autoload_func_with_source	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:_exists_autoload_func_with_source(funcname) abort$/;"	f
_explain_skip	bundle/syntastic/plugin/syntastic.vim	/^function! s:_explain_skip(filetypes) abort " {{{2$/;"	f
_extract_files	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
_file2module	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:_file2module(file) abort$/;"	f
_find_index	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! s:_find_index(column, messages) abort " {{{2$/;"	f
_float2str_dumb	bundle/syntastic/autoload/syntastic/util.vim	/^function! s:_float2str_dumb(val) abort " {{{2$/;"	f
_float2str_smart	bundle/syntastic/autoload/syntastic/util.vim	/^function! s:_float2str_smart(val) abort " {{{2$/;"	f
_format_variable	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_format_variable(name) abort " {{{2$/;"	f
_function	bundle/neocomplete/autoload/vital/neocomplete.vim	/^  function! s:_function(fstr) abort$/;"	f
_fuzz_dumb	bundle/syntastic/autoload/syntastic/util.vim	/^function! s:_fuzz_dumb() abort " {{{2$/;"	f
_getPrefix	bundle/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:_getPrefix() abort dict$/;"	f
_get_builtin_module	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:_get_builtin_module(name) abort$/;"	f
_get_cflags	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_get_cflags(ft, ck, opts) abort " {{{2$/;"	f
_get_checker_var	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_get_checker_var(scope, filetype, subchecker, name, default) abort " {{{2$/;"	f
_get_include_dirs	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_get_include_dirs(filetype) abort " {{{2$/;"	f
_get_module	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:_get_module(name) abort dict$/;"	f
_getbufvar_dumb	bundle/syntastic/autoload/syntastic/util.vim	/^function! s:_getbufvar_dumb(buf, name, ...) abort " {{{2$/;"	f
_global_vital_files	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:_global_vital_files() abort$/;"	f
_handleOldOptions	bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:_handleOldOptions() abort$/;"	f
_ignore_file	bundle/syntastic/plugin/syntastic.vim	/^function! s:_ignore_file(filename) abort " {{{2$/;"	f
_import	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:_import(name) abort dict$/;"	f
_import_func_name	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f
_init	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_init() abort " {{{2$/;"	f
_isAvailableDefault	bundle/syntastic/plugin/syntastic/checker.vim	/^function! s:_isAvailableDefault() dict " {{{2$/;"	f
_isDebugEnabled_dumb	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_isDebugEnabled_dumb(level) abort " {{{2$/;"	f
_isDebugEnabled_smart	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_isDebugEnabled_smart(level) abort " {{{2$/;"	f
_is_modified	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_is_modified(name) abort " {{{2$/;"	f
_is_quitting	bundle/syntastic/plugin/syntastic.vim	/^function! s:_is_quitting(buf) abort " {{{2$/;"	f
_is_same_index	bundle/syntastic/plugin/syntastic/cursor.vim	/^function! s:_is_same_index(line, old_line, column, idx, messages) abort " {{{2$/;"	f
_logRedirect	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_logRedirect(on) abort " {{{2$/;"	f
_log_timestamp_dumb	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_log_timestamp_dumb() abort " {{{2$/;"	f
_log_timestamp_smart	bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_log_timestamp_smart() abort " {{{2$/;"	f
_module_path	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:_module_path(name) abort$/;"	f
_module_sid	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:_module_sid(name) abort$/;"	f
_module_sid_base_dir	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:_module_sid_base_dir() abort$/;"	f
_normalise_filetype	bundle/syntastic/plugin/syntastic/registry.vim	/^function! s:_normalise_filetype(ftalias) abort " {{{2$/;"	f
_os_name	bundle/syntastic/plugin/syntastic.vim	/^function! s:_os_name() abort " {{{2$/;"	f
_pad_with_char	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
_path2project_directory_git	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
_path2project_directory_others	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
_path2project_directory_svn	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
_redir	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:_redir(cmd) abort$/;"	f
_registerHandler	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_registerHandler(regex, function, args) abort " {{{2$/;"	f
_remove_shadowed_items	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! s:_remove_shadowed_items(errors) abort " {{{2$/;"	f
_replace	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
_rmrf	bundle/syntastic/autoload/syntastic/util.vim	/^function! s:_rmrf(what) abort " {{{2$/;"	f
_runtime	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:_runtime(path) abort$/;"	f
_search_headers	bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_search_headers() abort " {{{2$/;"	f
_self_vital_files	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:_self_vital_files() abort$/;"	f
_set_screen_column	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! s:_set_screen_column(item) abort " {{{2$/;"	f
_sfuncname	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
_sid	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f
_skip_file	bundle/syntastic/plugin/syntastic.vim	/^function! s:_skip_file(buf) abort " {{{2$/;"	f
_source	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:_source(path) abort$/;"	f
_split_by_wcswidth	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
_split_by_wcswidth_once	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
_translate	bundle/syntastic/plugin/syntastic/loclist.vim	/^function! s:_translate(key, val) abort " {{{2$/;"	f
_translateElement	bundle/syntastic/autoload/syntastic/util.vim	/^function! s:_translateElement(key, term) abort " {{{2$/;"	f
_translateFilter	bundle/syntastic/autoload/syntastic/util.vim	/^function! s:_translateFilter(filters) abort " {{{2$/;"	f
_unify_path	bundle/neocomplete/autoload/vital/neocomplete.vim	/^  function! s:_unify_path(path) abort$/;"	f
_uniq	bundle/neocomplete/autoload/vital/neocomplete.vim	/^  function! s:_uniq(list) abort$/;"	f
_vital_created	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_vital_created(module) abort$/;"	f
_vital_depends	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_loaded	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_warn_deprecated	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f
_wcwidth	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_{	rcs/init.vim	/^inoremap _{ {<CR>}<Esc>:call BC_AddChar("}")<CR><Esc>kA<CR>$/;"	m
activateAll	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateAll()$/;"	f
activateBookmark	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateBookmark(bm)$/;"	f
activateDirNode	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateDirNode(directoryNode, ...)$/;"	f
activateFileNode	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateFileNode(node)$/;"	f
addChild	bundle/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:addChild(tag) abort dict$/;"	f
addTag	bundle/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:addTag(tag) abort dict$/;"	f
add_db	bundle/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! s:add_db(db_file) abort$/;"	f
add_methods	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_snr	bundle/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:add_snr(funcname) abort$/;"	f
add_snr	bundle/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:add_snr(funcname) abort$/;"	f
add_snr	bundle/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:add_snr(funcname) abort$/;"	f
add_snr	bundle/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:add_snr(funcname) abort$/;"	f
add_snr	bundle/tagbar/autoload/tagbar/prototypes/pseudotag.vim	/^function! s:add_snr(funcname) abort$/;"	f
add_snr	bundle/tagbar/autoload/tagbar/prototypes/splittag.vim	/^function! s:add_snr(funcname) abort$/;"	f
add_snr	bundle/tagbar/autoload/tagbar/prototypes/typeinfo.vim	/^function! s:add_snr(funcname) abort$/;"	f
add_tag_recursive	bundle/tagbar/autoload/tagbar.vim	/^function! s:add_tag_recursive(parent, taginfo, pathlist) abort$/;"	f
all	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
and	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:and(xs) abort$/;"	f
any	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
apps_dir_from_src	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^apps_dir_from_src(SrcFile) ->$/;"	f
argv	bundle/syntastic/syntax_checkers/python/codec.py	/^from sys import argv, exit$/;"	i
argv	bundle/syntastic/syntax_checkers/python/compile.py	/^from sys import argv, exit$/;"	i
async_load	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! s:async_load(argv, cache_dir, filename) abort "{{{$/;"	f
auto_save	bundle/vim-auto-save/plugin/AutoSave.vim	/^augroup auto_save$/;"	a
b64encode	bundle/emmet-vim/autoload/emmet/util.vim	/^function! s:b64encode(bytes, table, pad)$/;"	f
b:InPHPcode	indent/php.vim	/^let b:InPHPcode = 0$/;"	v
b:InPHPcode_and_script	indent/php.vim	/^let b:InPHPcode_and_script = 0$/;"	v
b:InPHPcode_checked	indent/php.vim	/^let b:InPHPcode_checked = 0$/;"	v
b:InPHPcode_tofind	indent/php.vim	/^let b:InPHPcode_tofind = ""$/;"	v
b:PHP_BracesAtCodeLevel	indent/php.vim	/^    let b:PHP_BracesAtCodeLevel = 0$/;"	v
b:PHP_BracesAtCodeLevel	indent/php.vim	/^    let b:PHP_BracesAtCodeLevel = PHP_BracesAtCodeLevel$/;"	v
b:PHP_CurrentIndentLevel	indent/php.vim	/^let b:PHP_CurrentIndentLevel = b:PHP_default_indenting$/;"	v
b:PHP_InsideMultilineComment	indent/php.vim	/^let b:PHP_InsideMultilineComment = 0$/;"	v
b:PHP_LastIndentedWasComment	indent/php.vim	/^let b:PHP_LastIndentedWasComment = 0$/;"	v
b:PHP_autoformatcomment	indent/php.vim	/^    let b:PHP_autoformatcomment = 1$/;"	v
b:PHP_autoformatcomment	indent/php.vim	/^    let b:PHP_autoformatcomment = PHP_autoformatcomment$/;"	v
b:PHP_default_indenting	indent/php.vim	/^    let b:PHP_default_indenting = 0$/;"	v
b:PHP_default_indenting	indent/php.vim	/^    let b:PHP_default_indenting = PHP_default_indenting * &sw$/;"	v
b:PHP_indentbeforelast	indent/php.vim	/^let b:PHP_indentbeforelast = 0$/;"	v
b:PHP_indentinghuge	indent/php.vim	/^let b:PHP_indentinghuge = 0$/;"	v
b:PHP_lastindented	indent/php.vim	/^let b:PHP_lastindented = 0$/;"	v
b:PHP_oldchangetick	indent/php.vim	/^let b:PHP_oldchangetick = b:changedtick$/;"	v
b:PHP_outdentSLComments	indent/php.vim	/^    let b:PHP_outdentSLComments = 0$/;"	v
b:PHP_outdentSLComments	indent/php.vim	/^    let b:PHP_outdentSLComments = PHP_outdentSLComments * &sw$/;"	v
b:PHP_outdentphpescape	indent/php.vim	/^    let b:PHP_outdentphpescape = 1$/;"	v
b:PHP_outdentphpescape	indent/php.vim	/^    let b:PHP_outdentphpescape = PHP_outdentphpescape$/;"	v
b:PHP_vintage_case_default_indent	indent/php.vim	/^    let b:PHP_vintage_case_default_indent = 0$/;"	v
b:PHP_vintage_case_default_indent	indent/php.vim	/^    let b:PHP_vintage_case_default_indent = 1$/;"	v
b:UserIsTypingComment	indent/php.vim	/^let b:UserIsTypingComment = 0$/;"	v
b:current_syntax	bundle/tagbar/syntax/tagbar.vim	/^let b:current_syntax = "tagbar"$/;"	v
b:current_syntax	bundle/vim-fugitive/syntax/fugitive.vim	/^let b:current_syntax = "fugitive"$/;"	v
b:current_syntax	bundle/vim-fugitive/syntax/fugitiveblame.vim	/^let b:current_syntax = "fugitiveblame"$/;"	v
b:current_syntax	bundle/vim-scala/syntax/scala.vim	/^let b:current_syntax = "scala"$/;"	v
b:current_syntax	bundle/vim-scala/syntax/scala.vim	/^let b:current_syntax = 'scala'$/;"	v
b:did_ftplugin	bundle/vim-scala/ftplugin/scala.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	bundle/vim-scala/indent/scala.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	indent/html.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	indent/php.vim	/^let b:did_indent = 1$/;"	v
b:optionsset	indent/php.vim	/^let b:optionsset = 0$/;"	v
binary_search	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
black	colors/goldenrod.vim	/^let black = '16'$/;"	v
break	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
buffer_repo	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_type	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
bundle.is_pinned	bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:bundle.is_pinned()$/;"	f
bundle.path	bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:bundle.path()$/;"	f
cache_project_root	bundle/vim-gutentags/autoload/gutentags.vim	/^function! s:cache_project_root(path) abort$/;"	f
can_diffoff	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
cfile	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:cfile() abort$/;"	f
chCwd	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chCwd(node)$/;"	f
chRoot	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chRoot(node)$/;"	f
char_range	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
chars	bundle/emmet-vim/docs/static/js/jquery-latest.js	/^}var chars = jQuery.browser.safari && parseInt(jQuery.browser.version) < 417 ?$/;"	v
check_async_cache	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:check_async_cache(context) abort "{{{$/;"	f
check_bundle_name	bundle/Vundle.vim/autoload/vundle/config.vim	/^funct! s:check_bundle_name(bundle)$/;"	f
check_changed_buffer	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:check_changed_buffer(bufnr) abort "{{{$/;"	f
check_fallback	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! s:check_fallback(cur_text) abort "{{{$/;"	f
check_force_omni	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! s:check_force_omni(cur_text) abort "{{{$/;"	f
check_in_do_auto_complete	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! s:check_in_do_auto_complete(event) abort "{{{$/;"	f
check_old_cache	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^function! s:check_old_cache(cache_dir, filename) abort$/;"	f
check_source	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:check_source() abort "{{{$/;"	f
chomp	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
chop	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
clean	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:clean() abort "{{{$/;"	f
clear	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:clear(list) abort$/;"	f
clearOldFolds	bundle/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:clearOldFolds() abort dict$/;"	f
clone	bundle/emmet-vim/docs/static/js/jquery-latest.js	/^		var clone = ret.find("*").andSelf().each(function(){$/;"	v
closeChildren	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeChildren(node)$/;"	f
closeCurrentDir	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeCurrentDir(node)$/;"	f
closeFold	bundle/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:closeFold() abort dict$/;"	f
closeFold	bundle/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:closeFold() abort dict$/;"	f
closeKindFold	bundle/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:closeKindFold(kind) abort dict$/;"	f
closeTreeWindow	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeTreeWindow()$/;"	f
close_preview_window	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! s:close_preview_window() abort "{{{$/;"	f
codecs	bundle/syntastic/syntax_checkers/python/codec.py	/^import codecs$/;"	i
color1	colors/goldenrod.vim	/^let color1 = '40'$/;"	v
color10	colors/goldenrod.vim	/^let color10 = '232'$/;"	v
color11	colors/goldenrod.vim	/^let color11 = '235'$/;"	v
color12	colors/goldenrod.vim	/^let color12 = '236'$/;"	v
color13	colors/goldenrod.vim	/^let color13 = '51'$/;"	v
color14	colors/goldenrod.vim	/^let color14 = '185'$/;"	v
color15	colors/goldenrod.vim	/^let color15 = '242'$/;"	v
color2	colors/goldenrod.vim	/^let color2 = '119'$/;"	v
color3	colors/goldenrod.vim	/^let color3 = '197'$/;"	v
color4	colors/goldenrod.vim	/^let color4 = '233'$/;"	v
color5	colors/goldenrod.vim	/^let color5 = '220'$/;"	v
color6	colors/goldenrod.vim	/^let color6 = '45'$/;"	v
color8	colors/goldenrod.vim	/^let color8 = '119'$/;"	v
color9	colors/goldenrod.vim	/^let color9 = '33'$/;"	v
combinations	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
command	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:command(definition, ...) abort$/;"	f
common_head	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
compare	bundle/neocomplete/autoload/neocomplete/filters/sorter_length.vim	/^function! s:compare(i1, i2) abort$/;"	f
compare	bundle/neocomplete/autoload/neocomplete/filters/sorter_word.vim	/^function! s:compare(i1, i2) abort$/;"	f
compare_by_kind	bundle/tagbar/autoload/tagbar/sorting.vim	/^function! s:compare_by_kind(tag1, tag2) abort$/;"	f
compare_by_line	bundle/tagbar/autoload/tagbar/sorting.vim	/^function! s:compare_by_line(tag1, tag2) abort$/;"	f
compare_source_rank	bundle/neocomplete/autoload/neocomplete/complete.vim	/^function! s:compare_source_rank(i1, i2) abort$/;"	f
compilation_database_folder	conf/ycm/c99_ycm_extra_conf.py	/^compilation_database_folder = ''$/;"	v
compilation_database_folder	conf/ycm/templates/valloric_ycm_extra_conf.py	/^compilation_database_folder = ''$/;"	v
compilation_database_folder	conf/ycm/ycm_extra_conf.py	/^compilation_database_folder = ''$/;"	v
complete_delay	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! s:complete_delay(timer) abort "{{{$/;"	f
complete_key	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! s:complete_key(key) abort "{{{$/;"	f
concat	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:concat(list) abort$/;"	f
conj	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
cons	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
contains_multibyte	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
converter.filter	bundle/neocomplete/autoload/neocomplete/filters/converter_abbr.vim	/^function! s:converter.filter(context) abort "{{{$/;"	f
converter.filter	bundle/neocomplete/autoload/neocomplete/filters/converter_add_paren.vim	/^function! s:converter.filter(context) abort "{{{$/;"	f
converter.filter	bundle/neocomplete/autoload/neocomplete/filters/converter_case.vim	/^function! s:converter.filter(context) abort "{{{$/;"	f
converter.filter	bundle/neocomplete/autoload/neocomplete/filters/converter_delimiter.vim	/^function! s:converter.filter(context) abort "{{{$/;"	f
converter.filter	bundle/neocomplete/autoload/neocomplete/filters/converter_disable_abbr.vim	/^function! s:converter.filter(context) abort "{{{$/;"	f
converter.filter	bundle/neocomplete/autoload/neocomplete/filters/converter_remove_last_paren.vim	/^function! s:converter.filter(context) abort "{{{$/;"	f
converter.filter	bundle/neocomplete/autoload/neocomplete/filters/converter_remove_overlap.vim	/^function! s:converter.filter(context) abort "{{{$/;"	f
cpath	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:cpath(path, ...) abort$/;"	f
createKinddict	bundle/tagbar/autoload/tagbar/prototypes/typeinfo.vim	/^function! s:createKinddict() abort dict$/;"	f
create_changelog	bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! s:create_changelog() abort$/;"	f
create_pseudotag	bundle/tagbar/autoload/tagbar.vim	/^function! s:create_pseudotag(name, parent, kind, typeinfo, fileinfo) abort$/;"	f
current_compiler	bundle/vim-scala/compiler/sbt.vim	/^let current_compiler = 'sbt'$/;"	v
customOpenBookmark	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenBookmark(node)$/;"	f
customOpenDir	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenDir(node)$/;"	f
customOpenFile	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:customOpenFile(node)$/;"	f
database	conf/ycm/c99_ycm_extra_conf.py	/^  database = None$/;"	v
database	conf/ycm/c99_ycm_extra_conf.py	/^  database = ycm_core.CompilationDatabase( compilation_database_folder )$/;"	v
database	conf/ycm/templates/valloric_ycm_extra_conf.py	/^  database = None$/;"	v
database	conf/ycm/templates/valloric_ycm_extra_conf.py	/^  database = ycm_core.CompilationDatabase( compilation_database_folder )$/;"	v
database	conf/ycm/ycm_extra_conf.py	/^  database = None$/;"	v
database	conf/ycm/ycm_extra_conf.py	/^  database = ycm_core.CompilationDatabase( compilation_database_folder )$/;"	v
define_commands	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:define_commands() abort$/;"	f
delete	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^function! s:delete(cache_dir, filename) abort$/;"	f
deleteBookmark	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:deleteBookmark(bookmark)$/;"	f
deletefile	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^function! s:deletefile(cache_dir, filename) abort$/;"	f
diff_modifier	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_modifier(count) abort$/;"	f
diff_restore	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
diff_window_count	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
diffcolor1	colors/goldenrod.vim	/^let diffcolor1 = '237'$/;"	v
diffcolor2	colors/goldenrod.vim	/^let diffcolor2 = '124'$/;"	v
diffcolor3	colors/goldenrod.vim	/^let diffcolor3 = '53'$/;"	v
diffcolor4	colors/goldenrod.vim	/^let diffcolor4 = '22'$/;"	v
diffidx	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
diffoff	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:diffoff() abort$/;"	f
diffoff_all	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
diffthis	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:diffthis() abort$/;"	f
displayHelp	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:displayHelp()$/;"	f
do_auto_complete	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! s:do_auto_complete(event) abort "{{{$/;"	f
do_delayed_update	bundle/tagbar/autoload/tagbar.vim	/^function! s:do_delayed_update() abort$/;"	f
do_tests	bundle/emmet-vim/unittest.vim	/^function! s:do_tests(bang, ...)$/;"	f
dollar_add	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! s:dollar_add(base,no) abort$/;"	f
dstring	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
emmet#anchorizeURL	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#anchorizeURL(flag) abort$/;"	f
emmet#balanceTag	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#balanceTag(flag) range abort$/;"	f
emmet#codePretty	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#codePretty() range abort$/;"	f
emmet#completeTag	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#completeTag(findstart, base) abort$/;"	f
emmet#expandAbbr	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#expandAbbr(mode, abbr) range abort$/;"	f
emmet#expandAbbrIntelligent	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#expandAbbrIntelligent(feedkey) abort$/;"	f
emmet#expandCursorExpr	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#expandCursorExpr(expand, mode) abort$/;"	f
emmet#expandDollarExpr	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#expandDollarExpr(expand) abort$/;"	f
emmet#expandWord	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#expandWord(abbr, type, orig) abort$/;"	f
emmet#getBaseType	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getBaseType(type) abort$/;"	f
emmet#getDollarExprs	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getDollarExprs(expand) abort$/;"	f
emmet#getDollarValueByKey	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getDollarValueByKey(key) abort$/;"	f
emmet#getExpandos	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getExpandos(type, key) abort$/;"	f
emmet#getFileType	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getFileType(...) abort$/;"	f
emmet#getFilters	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getFilters(type) abort$/;"	f
emmet#getIndentation	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getIndentation(...) abort$/;"	f
emmet#getResource	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getResource(type, name, default) abort$/;"	f
emmet#getSettings	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getSettings() abort$/;"	f
emmet#getSnippets	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getSnippets(type) abort$/;"	f
emmet#imageEncode	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#imageEncode() abort$/;"	f
emmet#imageSize	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#imageSize() abort$/;"	f
emmet#isExpandable	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#isExpandable() abort$/;"	f
emmet#isExtends	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#isExtends(type, extend) abort$/;"	f
emmet#lang#css#balanceTag	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#balanceTag(flag) range abort$/;"	f
emmet#lang#css#findTokens	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#findTokens(str) abort$/;"	f
emmet#lang#css#imageEncode	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#imageEncode() abort$/;"	f
emmet#lang#css#imageSize	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#imageSize() abort$/;"	f
emmet#lang#css#mergeLines	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#mergeLines() abort$/;"	f
emmet#lang#css#moveNextPrev	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#moveNextPrev(flag) abort$/;"	f
emmet#lang#css#moveNextPrevItem	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#css#parseIntoTree	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#css#parseTag	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#parseTag(tag) abort$/;"	f
emmet#lang#css#removeTag	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#removeTag() abort$/;"	f
emmet#lang#css#splitJoinTag	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#splitJoinTag() abort$/;"	f
emmet#lang#css#toString	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#css#toggleComment	bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#toggleComment() abort$/;"	f
emmet#lang#elm#balanceTag	bundle/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#balanceTag(flag) range abort$/;"	f
emmet#lang#elm#findTokens	bundle/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#findTokens(str) abort$/;"	f
emmet#lang#elm#imageEncode	bundle/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#imageEncode() abort$/;"	f
emmet#lang#elm#mergeLines	bundle/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#mergeLines() abort$/;"	f
emmet#lang#elm#moveNextPrev	bundle/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#moveNextPrev(flag) abort$/;"	f
emmet#lang#elm#moveNextPrevItem	bundle/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#elm#parseIntoTree	bundle/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#elm#parseTag	bundle/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#parseTag(tag) abort$/;"	f
emmet#lang#elm#removeTag	bundle/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#removeTag() abort$/;"	f
emmet#lang#elm#renderNode	bundle/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#renderNode(node)$/;"	f
emmet#lang#elm#renderParam	bundle/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#renderParam(param)$/;"	f
emmet#lang#elm#splitJoinTag	bundle/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#splitJoinTag() abort$/;"	f
emmet#lang#elm#toString	bundle/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#elm#toggleComment	bundle/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#toggleComment() abort$/;"	f
emmet#lang#exists	bundle/emmet-vim/autoload/emmet/lang.vim	/^function! emmet#lang#exists(type) abort$/;"	f
emmet#lang#getExtends	bundle/emmet-vim/autoload/emmet/lang.vim	/^function! emmet#lang#getExtends(type) abort$/;"	f
emmet#lang#haml#balanceTag	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#balanceTag(flag) range abort$/;"	f
emmet#lang#haml#findTokens	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#findTokens(str) abort$/;"	f
emmet#lang#haml#imageEncode	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#imageEncode() abort$/;"	f
emmet#lang#haml#imageSize	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#imageSize() abort$/;"	f
emmet#lang#haml#mergeLines	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#mergeLines() abort$/;"	f
emmet#lang#haml#moveNextPrev	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#moveNextPrev(flag) abort$/;"	f
emmet#lang#haml#moveNextPrevItem	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#haml#parseIntoTree	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#haml#parseTag	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#parseTag(tag) abort$/;"	f
emmet#lang#haml#removeTag	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#removeTag() abort$/;"	f
emmet#lang#haml#splitJoinTag	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#splitJoinTag() abort$/;"	f
emmet#lang#haml#toString	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#haml#toggleComment	bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#toggleComment() abort$/;"	f
emmet#lang#html#balanceTag	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#balanceTag(flag) range abort$/;"	f
emmet#lang#html#findTokens	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#findTokens(str) abort$/;"	f
emmet#lang#html#imageEncode	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#imageEncode() abort$/;"	f
emmet#lang#html#imageSize	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#imageSize() abort$/;"	f
emmet#lang#html#mergeLines	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#mergeLines() abort$/;"	f
emmet#lang#html#moveNextPrev	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#moveNextPrev(flag) abort$/;"	f
emmet#lang#html#moveNextPrevItem	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#html#parseIntoTree	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#html#parseTag	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#parseTag(tag) abort$/;"	f
emmet#lang#html#removeTag	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#removeTag() abort$/;"	f
emmet#lang#html#splitJoinTag	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#splitJoinTag() abort$/;"	f
emmet#lang#html#toString	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#html#toggleComment	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#toggleComment() abort$/;"	f
emmet#lang#jade#balanceTag	bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#balanceTag(flag) range abort$/;"	f
emmet#lang#jade#findTokens	bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#findTokens(str) abort$/;"	f
emmet#lang#jade#imageEncode	bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#imageEncode() abort$/;"	f
emmet#lang#jade#imageSize	bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#imageSize() abort$/;"	f
emmet#lang#jade#mergeLines	bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#mergeLines() abort$/;"	f
emmet#lang#jade#moveNextPrev	bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#moveNextPrev(flag) abort$/;"	f
emmet#lang#jade#moveNextPrevItem	bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#jade#parseIntoTree	bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#jade#parseTag	bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#parseTag(tag) abort$/;"	f
emmet#lang#jade#removeTag	bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#removeTag() abort$/;"	f
emmet#lang#jade#splitJoinTag	bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#splitJoinTag() abort$/;"	f
emmet#lang#jade#toString	bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#jade#toggleComment	bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#toggleComment() abort$/;"	f
emmet#lang#less#balanceTag	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#balanceTag(flag) range abort$/;"	f
emmet#lang#less#findTokens	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#findTokens(str) abort$/;"	f
emmet#lang#less#imageEncode	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#imageEncode() abort$/;"	f
emmet#lang#less#imageSize	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#imageSize() abort$/;"	f
emmet#lang#less#mergeLines	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#mergeLines() abort$/;"	f
emmet#lang#less#moveNextPrev	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#moveNextPrev(flag) abort$/;"	f
emmet#lang#less#moveNextPrevItem	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#less#parseIntoTree	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#less#parseTag	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#parseTag(tag) abort$/;"	f
emmet#lang#less#removeTag	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#removeTag() abort$/;"	f
emmet#lang#less#splitJoinTag	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#splitJoinTag() abort$/;"	f
emmet#lang#less#toString	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#less#toggleComment	bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#toggleComment() abort$/;"	f
emmet#lang#sass#balanceTag	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#balanceTag(flag) range abort$/;"	f
emmet#lang#sass#findTokens	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#findTokens(str) abort$/;"	f
emmet#lang#sass#imageEncode	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#imageEncode() abort$/;"	f
emmet#lang#sass#imageSize	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#imageSize() abort$/;"	f
emmet#lang#sass#mergeLines	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#mergeLines() abort$/;"	f
emmet#lang#sass#moveNextPrev	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#moveNextPrev(flag) abort$/;"	f
emmet#lang#sass#moveNextPrevItem	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#sass#parseIntoTree	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#sass#parseTag	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#parseTag(tag) abort$/;"	f
emmet#lang#sass#removeTag	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#removeTag() abort$/;"	f
emmet#lang#sass#splitJoinTag	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#splitJoinTag() abort$/;"	f
emmet#lang#sass#toString	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#sass#toggleComment	bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#toggleComment() abort$/;"	f
emmet#lang#scss#balanceTag	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#balanceTag(flag) range abort$/;"	f
emmet#lang#scss#findTokens	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#findTokens(str) abort$/;"	f
emmet#lang#scss#imageEncode	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#imageEncode() abort$/;"	f
emmet#lang#scss#imageSize	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#imageSize() abort$/;"	f
emmet#lang#scss#mergeLines	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#mergeLines() abort$/;"	f
emmet#lang#scss#moveNextPrev	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#moveNextPrev(flag) abort$/;"	f
emmet#lang#scss#moveNextPrevItem	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#scss#parseIntoTree	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#scss#parseTag	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#parseTag(tag) abort$/;"	f
emmet#lang#scss#removeTag	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#removeTag() abort$/;"	f
emmet#lang#scss#splitJoinTag	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#splitJoinTag() abort$/;"	f
emmet#lang#scss#toString	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#scss#toggleComment	bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#toggleComment() abort$/;"	f
emmet#lang#slim#balanceTag	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#balanceTag(flag) range abort$/;"	f
emmet#lang#slim#findTokens	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#findTokens(str) abort$/;"	f
emmet#lang#slim#imageEncode	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#imageEncode() abort$/;"	f
emmet#lang#slim#imageSize	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#imageSize() abort$/;"	f
emmet#lang#slim#mergeLines	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#mergeLines() abort$/;"	f
emmet#lang#slim#moveNextPrev	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#moveNextPrev(flag) abort$/;"	f
emmet#lang#slim#moveNextPrevItem	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#slim#parseIntoTree	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#slim#parseTag	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#parseTag(tag) abort$/;"	f
emmet#lang#slim#removeTag	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#removeTag() abort$/;"	f
emmet#lang#slim#splitJoinTag	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#splitJoinTag() abort$/;"	f
emmet#lang#slim#toString	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#slim#toggleComment	bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#toggleComment() abort$/;"	f
emmet#lang#type	bundle/emmet-vim/autoload/emmet/lang.vim	/^function! emmet#lang#type(type) abort$/;"	f
emmet#lorem#en#expand	bundle/emmet-vim/autoload/emmet/lorem/en.vim	/^function! emmet#lorem#en#expand(command) abort$/;"	f
emmet#lorem#ja#expand	bundle/emmet-vim/autoload/emmet/lorem/ja.vim	/^function! emmet#lorem#ja#expand(command) abort$/;"	f
emmet#mergeConfig	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#mergeConfig(lhs, rhs) abort$/;"	f
emmet#mergeLines	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#mergeLines() abort$/;"	f
emmet#mergeLines	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#mergeLines() range abort$/;"	f
emmet#moveNextPrev	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#moveNextPrev(flag) abort$/;"	f
emmet#moveNextPrevItem	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#moveNextPrevItem(flag) abort$/;"	f
emmet#newNode	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#newNode() abort$/;"	f
emmet#parseIntoTree	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#parseIntoTree(abbr, type) abort$/;"	f
emmet#reExpandDollarExpr	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#reExpandDollarExpr(expand, times) abort$/;"	f
emmet#removeTag	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#removeTag() abort$/;"	f
emmet#splitFilterArg	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#splitFilterArg(filters) abort$/;"	f
emmet#splitJoinTag	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#splitJoinTag() abort$/;"	f
emmet#toString	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#toString(...) abort$/;"	f
emmet#toggleComment	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#toggleComment() abort$/;"	f
emmet#unescapeDollarExpr	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#unescapeDollarExpr(expand) abort$/;"	f
emmet#updateTag	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#updateTag() abort$/;"	f
emmet#useFilter	bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#useFilter(filters, filter) abort$/;"	f
emmet#util#cache	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#cache(name, ...) abort$/;"	f
emmet#util#closePopup	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#closePopup() abort$/;"	f
emmet#util#cursorInRegion	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#cursorInRegion(region) abort$/;"	f
emmet#util#deleteContent	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#deleteContent(region) abort$/;"	f
emmet#util#getContent	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getContent(region) abort$/;"	f
emmet#util#getContentFromURL	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getContentFromURL(url) abort$/;"	f
emmet#util#getImageSize	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getImageSize(fn) abort$/;"	f
emmet#util#getTextFromHTML	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getTextFromHTML(buf) abort$/;"	f
emmet#util#getVisualBlock	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getVisualBlock() abort$/;"	f
emmet#util#getcurpos	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getcurpos() abort$/;"	f
emmet#util#imageEncodeDecode	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#imageEncodeDecode(fn, flag) abort$/;"	f
emmet#util#imageSizeWithImageMagick	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#imageSizeWithImageMagick(fn) abort$/;"	f
emmet#util#isImageMagickInstalled	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#isImageMagickInstalled() abort$/;"	f
emmet#util#pointInRegion	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#pointInRegion(point, region) abort$/;"	f
emmet#util#rand	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#rand() abort$/;"	f
emmet#util#regionInRegion	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#regionInRegion(outer, inner) abort$/;"	f
emmet#util#regionIsValid	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#regionIsValid(region) abort$/;"	f
emmet#util#searchRegion	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#searchRegion(start, end) abort$/;"	f
emmet#util#selectRegion	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#selectRegion(region) abort$/;"	f
emmet#util#setContent	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#setContent(region, content) abort$/;"	f
emmet#util#srand	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#srand(seed) abort$/;"	f
emmet#util#unique	bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#unique(arr) abort$/;"	f
emmet_unittest_complete	bundle/emmet-vim/unittest.vim	/^function! s:emmet_unittest_complete(arglead, cmdline, cmdpos)$/;"	f
ends_with	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:ends_with(str, suffix) abort$/;"	f
erlangmk_file	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_file(Dir) -> filename:join(Dir, "erlang.mk").$/;"	f
erlangmk_format_erl_libs	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erl_libs(ErlLibsLine) ->$/;"	f
erlangmk_format_erlc_opts	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(ErlcOptsLines, BaseDir) ->$/;"	f
erlangmk_format_erlc_opts	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(["+" ++ Option | Rest], Opts, BaseDir) ->$/;"	f
erlangmk_format_erlc_opts	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(["-D" ++ Opt | Rest], Opts, BaseDir)$/;"	f
erlangmk_format_erlc_opts	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(["-D", [C | _] = Val0 | Rest], Opts, BaseDir)$/;"	f
erlangmk_format_erlc_opts	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(["-I" ++ Opt | Rest], Opts, BaseDir)$/;"	f
erlangmk_format_erlc_opts	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(["-I", [C | _] = Dir | Rest], Opts, BaseDir)$/;"	f
erlangmk_format_erlc_opts	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(["-W" ++ Warn | Rest], Opts, BaseDir)$/;"	f
erlangmk_format_erlc_opts	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts(["-W", Warn | Rest], Opts, BaseDir) ->$/;"	f
erlangmk_format_erlc_opts	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts([PathFlag, [_ | _] = Dir | Rest], Opts, BaseDir)$/;"	f
erlangmk_format_erlc_opts	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts([], Opts, _) ->$/;"	f
erlangmk_format_erlc_opts	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_erlc_opts([_ | Rest], Opts, BaseDir) ->$/;"	f
erlangmk_format_opts	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_format_opts(Stdout, BaseDir) ->$/;"	f
erlangmk_opts	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_opts(BaseDir, Profile) ->$/;"	f
erlangmk_port_receive_loop	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^erlangmk_port_receive_loop(Port, Stdout, BaseDir) ->$/;"	f
escape	bundle/emmet-vim/unittest.vim	/^function! s:escape(str)$/;"	f
escape	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! s:escape(path) abort"{{{$/;"	f
escape_file_searching	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
escape_pattern	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:escape_pattern(str) abort$/;"	f
escape_pattern	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
evalScript	bundle/emmet-vim/docs/static/js/jquery-latest.js	/^function evalScript( i, elem ) {$/;"	f
executable	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:executable(binary) abort$/;"	f
exists	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:exists(name) abort dict$/;"	f
exists_current_source	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:exists_current_source() abort "{{{$/;"	f
exit	bundle/syntastic/syntax_checkers/python/codec.py	/^from sys import argv, exit$/;"	i
exit	bundle/syntastic/syntax_checkers/python/compile.py	/^from sys import argv, exit$/;"	i
expand_path	bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:expand_path(path) abort$/;"	f
expected	bundle/vim-scala/spec/spec_helper.rb	/^def expected(name)$/;"	f
fallback_opts	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^fallback_opts() ->$/;"	f
fetch_scripts	bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! s:fetch_scripts(to)$/;"	f
filereadable	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^function! s:filereadable(cache_dir, filename) abort$/;"	f
find	autoload/pathogen.vim	/^function! s:find(count,cmd,file,...) " {{{1$/;"	f
find	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
findAndRevealPath	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:findAndRevealPath(pathStr)$/;"	f
find_index	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_indices	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
find_last_index	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
flags	conf/ycm/c99_ycm_extra_conf.py	/^flags = [$/;"	v
flags	conf/ycm/templates/valloric_ycm_extra_conf.py	/^flags = [$/;"	v
flags	conf/ycm/ycm_extra_conf.py	/^flags = [$/;"	v
flatten	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
fnameescape	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
foldl	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl1	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldr	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr1	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
fugitive	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#BlameComplete	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BlameComplete(A, L, P) abort$/;"	f
fugitive#BlameSyntax	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BlameSyntax() abort$/;"	f
fugitive#BrowseCommand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BrowseCommand(line1, count, range, bang, mods, arg, args) abort$/;"	f
fugitive#BufReadCmd	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufReadCmd(...) abort$/;"	f
fugitive#BufReadStatus	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufReadStatus() abort$/;"	f
fugitive#BufWriteCmd	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#BufWriteCmd(...) abort$/;"	f
fugitive#CanDiffoff	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CanDiffoff(buf) abort$/;"	f
fugitive#Cd	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cd(path, ...) abort$/;"	f
fugitive#CdComplete	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CdComplete(A, L, P) abort$/;"	f
fugitive#Cfile	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cfile() abort$/;"	f
fugitive#Command	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Command(line1, line2, range, bang, mods, arg) abort$/;"	f
fugitive#CommitComplete	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CommitComplete(A, L, P) abort$/;"	f
fugitive#CommonDir	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CommonDir(dir) abort$/;"	f
fugitive#Complete	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Complete(lead, ...) abort$/;"	f
fugitive#CompleteObject	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompleteObject(base, ...) abort$/;"	f
fugitive#CompletePath	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#CompletePath(base, ...) abort$/;"	f
fugitive#Config	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Config(...) abort$/;"	f
fugitive#Cwindow	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Cwindow() abort$/;"	f
fugitive#DeleteCommand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#DeleteCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#Diffsplit	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Diffsplit(autodir, keepfocus, mods, arg, args) abort$/;"	f
fugitive#Expand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Expand(object) abort$/;"	f
fugitive#FetchComplete	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FetchComplete(A, L, P) abort$/;"	f
fugitive#FileReadCmd	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FileReadCmd(...) abort$/;"	f
fugitive#FileWriteCmd	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#FileWriteCmd(...) abort$/;"	f
fugitive#Find	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Find(object, ...) abort$/;"	f
fugitive#Foldtext	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Foldtext() abort$/;"	f
fugitive#GitVersion	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GitVersion(...) abort$/;"	f
fugitive#GrepComplete	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#GrepComplete(A, L, P) abort$/;"	f
fugitive#Head	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Head(...) abort$/;"	f
fugitive#Init	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Init() abort$/;"	f
fugitive#LogCommand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#LogCommand(line1, count, range, bang, mods, args, type) abort$/;"	f
fugitive#LogComplete	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#LogComplete(A, L, P) abort$/;"	f
fugitive#MapCfile	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MapCfile(...) abort$/;"	f
fugitive#MapJumps	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MapJumps(...) abort$/;"	f
fugitive#MergeComplete	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MergeComplete(A, L, P) abort$/;"	f
fugitive#MessageCfile	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MessageCfile() abort$/;"	f
fugitive#MoveCommand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#MoveCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#Object	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Object(...) abort$/;"	f
fugitive#Open	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Open(cmd, bang, mods, arg, args) abort$/;"	f
fugitive#Path	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Path(url, ...) abort$/;"	f
fugitive#PathComplete	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PathComplete(...) abort$/;"	f
fugitive#Prepare	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Prepare(...) abort$/;"	f
fugitive#PrepareDirEnvArgv	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PrepareDirEnvArgv(...) abort$/;"	f
fugitive#PullComplete	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PullComplete(A, L, P) abort$/;"	f
fugitive#PushComplete	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#PushComplete(A, L, P) abort$/;"	f
fugitive#ReadCommand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReadCommand(line1, count, range, bang, mods, arg, args) abort$/;"	f
fugitive#ReadComplete	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReadComplete(A, L, P) abort$/;"	f
fugitive#Real	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Real(url) abort$/;"	f
fugitive#RebaseComplete	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RebaseComplete(A, L, P) abort$/;"	f
fugitive#ReloadStatus	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#ReloadStatus(...) abort$/;"	f
fugitive#RemoteUrl	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RemoteUrl(...) abort$/;"	f
fugitive#RemoveCommand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RemoveCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#RenameCommand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RenameCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#RenameComplete	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RenameComplete(A,L,P) abort$/;"	f
fugitive#RevParse	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RevParse(rev, ...) abort$/;"	f
fugitive#RevertComplete	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#RevertComplete(A, L, P) abort$/;"	f
fugitive#SourceCmd	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#SourceCmd(...) abort$/;"	f
fugitive#StatusCfile	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#StatusCfile() abort$/;"	f
fugitive#Statusline	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#Statusline(...) abort$/;"	f
fugitive#WqCommand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#WqCommand(...) abort$/;"	f
fugitive#WriteCommand	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#WriteCommand(line1, line2, range, bang, mods, arg, args) abort$/;"	f
fugitive#buffer	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#delete	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#delete(url, ...) abort$/;"	f
fugitive#detect	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#filereadable	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#filereadable(url) abort$/;"	f
fugitive#filewritable	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#filewritable(url) abort$/;"	f
fugitive#foldtext	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#getfperm	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getfperm(url) abort$/;"	f
fugitive#getfsize	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getfsize(url) abort$/;"	f
fugitive#getftime	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getftime(url) abort$/;"	f
fugitive#getftype	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#getftype(url) abort$/;"	f
fugitive#glob	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#glob(url, ...) abort$/;"	f
fugitive#head	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#isdirectory	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#isdirectory(url) abort$/;"	f
fugitive#readfile	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#readfile(url, ...) abort$/;"	f
fugitive#repo	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#resolve	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#resolve(url) abort$/;"	f
fugitive#setfperm	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#setfperm(url, perm) abort$/;"	f
fugitive#simplify	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#simplify(url) abort$/;"	f
fugitive#statusline	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive#writefile	bundle/vim-fugitive/autoload/fugitive.vim	/^function! fugitive#writefile(lines, url, ...) abort$/;"	f
fugitive_blame	bundle/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	bundle/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	bundle/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_folding	bundle/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_folding$/;"	a
fugitive_merge	bundle/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_merge$/;"	a
fugitive_status	bundle/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_temp	bundle/vim-fugitive/autoload/fugitive.vim	/^augroup fugitive_temp$/;"	a
function	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:function(name) abort$/;"	f
g:LanguageClient_autoStart	rcs/init.vim	/^let g:LanguageClient_autoStart = 1$/;"	v
g:LanguageClient_serverCommands	rcs/init.vim	/^let g:LanguageClient_serverCommands = {$/;"	v
g:NERDTree	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^let g:NERDTree = s:NERDTree$/;"	v
g:NERDTreeAutoDeleteBuffer	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeCreator	bundle/nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirNode	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeEvent	bundle/nerdtree/lib/nerdtree/event.vim	/^let g:NERDTreeEvent = s:Event$/;"	v
g:NERDTreeFileNode	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFlagSet	bundle/nerdtree/lib/nerdtree/flag_set.vim	/^let g:NERDTreeFlagSet = s:FlagSet$/;"	v
g:NERDTreeIgnore	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeKeyMap	bundle/nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMenuController	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuItem	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeOldSortOrder	bundle/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeOldSortOrder = []$/;"	v
g:NERDTreeOpener	bundle/nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	bundle/nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePathNotifier	bundle/nerdtree/lib/nerdtree/notifier.vim	/^let g:NERDTreePathNotifier = deepcopy(s:Notifier)$/;"	v
g:NERDTreeSortOrder	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTree')?b:NERDTree.root.path.str():''}"$/;"	v
g:NERDTreeUI	bundle/nerdtree/lib/nerdtree/ui.vim	/^let g:NERDTreeUI = s:UI$/;"	v
g:SyntasticAutoloclistNotifier	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^let g:SyntasticAutoloclistNotifier = {}$/;"	v
g:SyntasticBalloonsNotifier	bundle/syntastic/plugin/syntastic/balloons.vim	/^let g:SyntasticBalloonsNotifier = {}$/;"	v
g:SyntasticChecker	bundle/syntastic/plugin/syntastic/checker.vim	/^let g:SyntasticChecker = {}$/;"	v
g:SyntasticCursorNotifier	bundle/syntastic/plugin/syntastic/cursor.vim	/^let g:SyntasticCursorNotifier = {}$/;"	v
g:SyntasticHighlightingNotifier	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let g:SyntasticHighlightingNotifier = {}$/;"	v
g:SyntasticLoclist	bundle/syntastic/plugin/syntastic/loclist.vim	/^let g:SyntasticLoclist = {}$/;"	v
g:SyntasticModeMap	bundle/syntastic/plugin/syntastic/modemap.vim	/^let g:SyntasticModeMap = {}$/;"	v
g:SyntasticNotifiers	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let g:SyntasticNotifiers = {}$/;"	v
g:SyntasticRegistry	bundle/syntastic/plugin/syntastic/registry.vim	/^let g:SyntasticRegistry = {}$/;"	v
g:SyntasticSignsNotifier	bundle/syntastic/plugin/syntastic/signs.vim	/^let g:SyntasticSignsNotifier = {}$/;"	v
g:Tex_DefaultTargetFormat	ftplugin/latex.vim	/^let g:Tex_DefaultTargetFormat='pdf'$/;"	v
g:_SYNTASTIC_DEBUG_AUTOCOMMANDS	bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_AUTOCOMMANDS  = 8$/;"	v
g:_SYNTASTIC_DEBUG_CHECKERS	bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_CHECKERS      = 32$/;"	v
g:_SYNTASTIC_DEBUG_LOCLIST	bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_LOCLIST       = 2$/;"	v
g:_SYNTASTIC_DEBUG_NOTIFICATIONS	bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_NOTIFICATIONS = 4$/;"	v
g:_SYNTASTIC_DEBUG_TRACE	bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_TRACE         = 1$/;"	v
g:_SYNTASTIC_DEBUG_VARIABLES	bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_VARIABLES     = 16$/;"	v
g:_SYNTASTIC_DEFAULTS	bundle/syntastic/plugin/syntastic.vim	/^let g:_SYNTASTIC_DEFAULTS = {$/;"	v
g:_SYNTASTIC_SHELL_OPTIONS	bundle/syntastic/plugin/syntastic.vim	/^let g:_SYNTASTIC_SHELL_OPTIONS = [$/;"	v
g:_SYNTASTIC_START	bundle/syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_START = reltime()$/;"	v
g:_SYNTASTIC_UNAME	bundle/syntastic/plugin/syntastic.vim	/^        let g:_SYNTASTIC_UNAME = 'Unknown'$/;"	v
g:_SYNTASTIC_UNAME	bundle/syntastic/plugin/syntastic.vim	/^        let g:_SYNTASTIC_UNAME = split(syntastic#util#system('uname'), "\\n")[0]$/;"	v
g:_SYNTASTIC_UNAME	bundle/syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_UNAME = 'Unknown'$/;"	v
g:_SYNTASTIC_UNAME	bundle/syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_UNAME = 'Windows'$/;"	v
g:_SYNTASTIC_VERSION	bundle/syntastic/plugin/syntastic.vim	/^let g:_SYNTASTIC_VERSION = '3.9.0-44'$/;"	v
g:airline#extensions#hunks#enabled	rcs/init.vim	/^let g:airline#extensions#hunks#enabled = 0$/;"	v
g:airline#extensions#tabline#enabled	rcs/init.vim	/^let g:airline#extensions#tabline#enabled = 0$/;"	v
g:airline#extensions#tabline#fnamemod	rcs/init.vim	/^let g:airline#extensions#tabline#fnamemod = ':t'$/;"	v
g:airline#extensions#tabline#show_buffers	rcs/init.vim	/^let g:airline#extensions#tabline#show_buffers = 0$/;"	v
g:airline#extensions#tabline#show_close_button	rcs/init.vim	/^let g:airline#extensions#tabline#show_close_button = 0$/;"	v
g:airline#extensions#tabline#show_tab_nr	rcs/init.vim	/^let g:airline#extensions#tabline#show_tab_nr = 1$/;"	v
g:airline#extensions#tabline#tab_nr_type	rcs/init.vim	/^let g:airline#extensions#tabline#tab_nr_type = 1 " show tab number not number of split panes$/;"	v
g:airline_left_alt_sep	rcs/init.vim	/^let g:airline_left_alt_sep="|"$/;"	v
g:airline_left_sep	rcs/init.vim	/^let g:airline_left_sep=""$/;"	v
g:airline_right_alt_sep	rcs/init.vim	/^let g:airline_right_alt_sep="|"$/;"	v
g:airline_right_sep	rcs/init.vim	/^let g:airline_right_sep=""$/;"	v
g:airline_section_z	rcs/init.vim	/^let g:airline_section_z = ""$/;"	v
g:auto_save	bundle/vim-auto-save/plugin/AutoSave.vim	/^  let g:auto_save = 0$/;"	v
g:auto_save	rcs/init.vim	/^let g:auto_save = 1$/;"	v
g:auto_save_in_insert_mode	bundle/vim-auto-save/plugin/AutoSave.vim	/^  let g:auto_save_in_insert_mode = 1$/;"	v
g:auto_save_loaded	bundle/vim-auto-save/plugin/AutoSave.vim	/^  let g:auto_save_loaded = 1$/;"	v
g:auto_save_no_updatetime	bundle/vim-auto-save/plugin/AutoSave.vim	/^  let g:auto_save_no_updatetime = 0$/;"	v
g:auto_save_silent	bundle/vim-auto-save/plugin/AutoSave.vim	/^  let g:auto_save_silent = 0$/;"	v
g:autoloaded_fugitive	bundle/vim-fugitive/autoload/fugitive.vim	/^let g:autoloaded_fugitive = 1$/;"	v
g:autotagTagsFile	rcs/init.vim	/^let g:autotagTagsFile=".tags"$/;"	v
g:colors_name	bundle/vim-monokai/colors/monokai.vim	/^let g:colors_name = "monokai"$/;"	v
g:colors_name	colors/archery.vim	/^let g:colors_name = 'archery'$/;"	v
g:colors_name	colors/dracula.vim	/^let g:colors_name = "Dracula"$/;"	v
g:colors_name	colors/goldenrod.vim	/^let g:colors_name = "goldenrod"$/;"	v
g:deoplete#enable_at_startup	rcs/init.vim	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:emmet_curl_command	bundle/emmet-vim/plugin/emmet.vim	/^  let g:emmet_curl_command = 'curl -s -L -A Mozilla\/5.0'$/;"	v
g:emmet_debug	bundle/emmet-vim/plugin/emmet.vim	/^  let g:emmet_debug = 0$/;"	v
g:emmet_docroot	bundle/emmet-vim/plugin/emmet.vim	/^  let g:emmet_docroot = {}$/;"	v
g:emmet_html5	bundle/emmet-vim/plugin/emmet.vim	/^  let g:emmet_html5 = 1$/;"	v
g:fugitive_git_executable	bundle/vim-fugitive/autoload/fugitive.vim	/^  let g:fugitive_git_executable = 'env ' . g:fugitive_git_executable$/;"	v
g:fugitive_git_executable	bundle/vim-fugitive/autoload/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	bundle/vim-fugitive/autoload/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:fullDefMatcher	bundle/vim-scala/indent/scala.vim	/^let g:fullDefMatcher = '^\\s*' . s:defMatcher . '\\s\\+' . s:funcNameMatcher . '\\s*' . s:typeSpecMatcher . '\\?\\s*' . s:defArgMatcher . '\\?\\s*' . s:returnTypeMatcher . '\\?\\s*[={]'$/;"	v
g:fzf_command_prefix	rcs/init.vim	/^let g:fzf_command_prefix = 'Fzf'$/;"	v
g:gutentags_add_ctrlp_root_markers	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_ctrlp_root_markers = get(g:, 'gutentags_add_ctrlp_root_markers', 1)$/;"	v
g:gutentags_add_default_project_roots	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_add_default_project_roots = get(g:, 'gutentags_add_default_project_roots', 1)$/;"	v
g:gutentags_auto_add_cscope	bundle/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_auto_add_cscope = 1$/;"	v
g:gutentags_auto_add_gtags_cscope	bundle/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_auto_add_gtags_cscope = 1$/;"	v
g:gutentags_background_update	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_background_update = get(g:, 'gutentags_background_update', 1)$/;"	v
g:gutentags_cache_dir	bundle/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = ''$/;"	v
g:gutentags_cache_dir	bundle/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':p')$/;"	v
g:gutentags_cache_dir	bundle/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_cache_dir = fnamemodify(g:gutentags_cache_dir, ':s?[\/\\\\]$??')$/;"	v
g:gutentags_cscope_build_inverted_index	bundle/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_build_inverted_index = 0$/;"	v
g:gutentags_cscope_executable	bundle/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_cscope_executable = 'cscope'$/;"	v
g:gutentags_ctags_auto_set_tags	bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_auto_set_tags = get(g:, 'gutentags_ctags_auto_set_tags', 1)$/;"	v
g:gutentags_ctags_check_tagfile	bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_check_tagfile = get(g:, 'gutentags_ctags_check_tagfile', 0)$/;"	v
g:gutentags_ctags_exclude	bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude = get(g:, 'gutentags_ctags_exclude', [])$/;"	v
g:gutentags_ctags_exclude_wildignore	bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_exclude_wildignore = get(g:, 'gutentags_ctags_exclude_wildignore', 1)$/;"	v
g:gutentags_ctags_executable	bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_executable = get(g:, 'gutentags_ctags_executable', 'ctags')$/;"	v
g:gutentags_ctags_extra_args	bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_extra_args = get(g:, 'gutentags_ctags_extra_args', [])$/;"	v
g:gutentags_ctags_options_file	bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_options_file = get(g:, 'gutentags_ctags_options_file', '.gutctags')$/;"	v
g:gutentags_ctags_post_process_cmd	bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_post_process_cmd = get(g:, 'gutentags_ctags_post_process_cmd', '')$/;"	v
g:gutentags_ctags_tagfile	bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let g:gutentags_ctags_tagfile = get(g:, 'gutentags_ctags_tagfile', 'tags')$/;"	v
g:gutentags_debug	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_debug = get(g:, 'gutentags_debug', 0)$/;"	v
g:gutentags_define_advanced_commands	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_define_advanced_commands = get(g:, 'gutentags_define_advanced_commands', 0)$/;"	v
g:gutentags_enabled	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_enabled = get(g:, 'gutentags_enabled', 1)$/;"	v
g:gutentags_exclude_filetypes	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_filetypes = get(g:, 'gutentags_exclude_filetypes', [])$/;"	v
g:gutentags_exclude_project_root	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_exclude_project_root = get(g:, 'gutentags_exclude_project_root', ['\/usr\/local'])$/;"	v
g:gutentags_fake	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_fake = get(g:, 'gutentags_fake', 0)$/;"	v
g:gutentags_file_list_command	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_file_list_command = get(g:, 'gutentags_file_list_command', '')$/;"	v
g:gutentags_generate_on_empty_buffer	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_empty_buffer = get(g:, 'gutentags_generate_on_empty_buffer', 0)$/;"	v
g:gutentags_generate_on_missing	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_missing = get(g:, 'gutentags_generate_on_missing', 1)$/;"	v
g:gutentags_generate_on_new	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_new = get(g:, 'gutentags_generate_on_new', 1)$/;"	v
g:gutentags_generate_on_write	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_generate_on_write = get(g:, 'gutentags_generate_on_write', 1)$/;"	v
g:gutentags_gtags_cscope_executable	bundle/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_cscope_executable = 'gtags-cscope'$/;"	v
g:gutentags_gtags_dbpath	bundle/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_dbpath = ''$/;"	v
g:gutentags_gtags_executable	bundle/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_executable = 'gtags'$/;"	v
g:gutentags_gtags_options_file	bundle/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^    let g:gutentags_gtags_options_file = '.gutgtags'$/;"	v
g:gutentags_init_user_func	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_init_user_func = get(g:, 'gutentags_init_user_func', $/;"	v
g:gutentags_modules	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_modules = get(g:, 'gutentags_modules', ['ctags'])$/;"	v
g:gutentags_pause_after_update	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_pause_after_update = get(g:, 'gutentags_pause_after_update', 0)$/;"	v
g:gutentags_plat_dir	bundle/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . "\\\\plat\\\\win32\\\\"$/;"	v
g:gutentags_plat_dir	bundle/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_plat_dir = expand('<sfile>:h:h:p') . '\/plat\/unix\/'$/;"	v
g:gutentags_project_info	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_info = get(g:, 'gutentags_project_info', [])$/;"	v
g:gutentags_project_root	bundle/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_project_root += ['.git', '.hg', '.svn', '.bzr', '_darcs', '_FOSSIL_', '.fslckout']$/;"	v
g:gutentags_project_root	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root = get(g:, 'gutentags_project_root', [])$/;"	v
g:gutentags_project_root_finder	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_project_root_finder = get(g:, 'gutentags_project_root_finder', '')$/;"	v
g:gutentags_res_dir	bundle/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . "\\\\res\\\\"$/;"	v
g:gutentags_res_dir	bundle/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_res_dir = expand('<sfile>:h:h:p') . '\/res\/'$/;"	v
g:gutentags_resolve_symlinks	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_resolve_symlinks = get(g:, 'gutentags_resolve_symlinks', 0)$/;"	v
g:gutentags_scopefile	bundle/vim-gutentags/autoload/gutentags/cscope.vim	/^    let g:gutentags_scopefile = 'cscope.out'$/;"	v
g:gutentags_script_ext	bundle/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.cmd'$/;"	v
g:gutentags_script_ext	bundle/vim-gutentags/plugin/gutentags.vim	/^    let g:gutentags_script_ext = '.sh'$/;"	v
g:gutentags_trace	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_trace = get(g:, 'gutentags_trace', 0)$/;"	v
g:gutentags_use_jobs	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:gutentags_use_jobs = get(g:, 'gutentags_use_jobs', has('job'))$/;"	v
g:io_fugitive	bundle/vim-fugitive/plugin/fugitive.vim	/^let g:io_fugitive = {$/;"	v
g:loaded_emmet_vim	bundle/emmet-vim/plugin/emmet.vim	/^let g:loaded_emmet_vim = 1$/;"	v
g:loaded_fugitive	bundle/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_gutentags	bundle/vim-gutentags/plugin/gutentags.vim	/^let g:loaded_gutentags = 1$/;"	v
g:loaded_neocomplete	bundle/neocomplete/plugin/neocomplete.vim	/^let g:loaded_neocomplete = 1$/;"	v
g:loaded_neocomplete_buffer	bundle/neocomplete/plugin/neocomplete/buffer.vim	/^let g:loaded_neocomplete_buffer = 1$/;"	v
g:loaded_neocomplete_dictionary	bundle/neocomplete/plugin/neocomplete/dictionary.vim	/^let g:loaded_neocomplete_dictionary = 1$/;"	v
g:loaded_neocomplete_member	bundle/neocomplete/plugin/neocomplete/member.vim	/^let g:loaded_neocomplete_member = 1$/;"	v
g:loaded_neocomplete_tag	bundle/neocomplete/plugin/neocomplete/tag.vim	/^let g:loaded_neocomplete_tag = 1$/;"	v
g:loaded_nerdtree_autoload	bundle/nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_ui_glue_autoload	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^let g:loaded_nerdtree_ui_glue_autoload = 1$/;"	v
g:loaded_pathogen	autoload/pathogen.vim	/^let g:loaded_pathogen = 1$/;"	v
g:loaded_scala	bundle/vim-scala/plugin/scala.vim	/^let g:loaded_scala = 1$/;"	v
g:loaded_syntastic_actionscript_mxmlc_checker	bundle/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^let g:loaded_syntastic_actionscript_mxmlc_checker = 1$/;"	v
g:loaded_syntastic_ada_gcc_checker	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^let g:loaded_syntastic_ada_gcc_checker = 1$/;"	v
g:loaded_syntastic_ansible_ansible_lint_checker	bundle/syntastic/syntax_checkers/ansible/ansible_lint.vim	/^let g:loaded_syntastic_ansible_ansible_lint_checker = 1$/;"	v
g:loaded_syntastic_apiblueprint_drafter_checker	bundle/syntastic/syntax_checkers/apiblueprint/drafter.vim	/^let g:loaded_syntastic_apiblueprint_drafter_checker = 1$/;"	v
g:loaded_syntastic_applescript_osacompile_checker	bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^let g:loaded_syntastic_applescript_osacompile_checker = 1$/;"	v
g:loaded_syntastic_asciidoc_asciidoc_checker	bundle/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^let g:loaded_syntastic_asciidoc_asciidoc_checker = 1$/;"	v
g:loaded_syntastic_asciidoc_proselint_checker	bundle/syntastic/syntax_checkers/asciidoc/proselint.vim	/^let g:loaded_syntastic_asciidoc_proselint_checker = 1$/;"	v
g:loaded_syntastic_asl_iasl_checker	bundle/syntastic/syntax_checkers/asl/iasl.vim	/^let g:loaded_syntastic_asl_iasl_checker = 1$/;"	v
g:loaded_syntastic_asm_gcc_checker	bundle/syntastic/syntax_checkers/asm/gcc.vim	/^let g:loaded_syntastic_asm_gcc_checker = 1$/;"	v
g:loaded_syntastic_bemhtml_bemhtmllint_checker	bundle/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^let g:loaded_syntastic_bemhtml_bemhtmllint_checker = 1$/;"	v
g:loaded_syntastic_bro_bro_checker	bundle/syntastic/syntax_checkers/bro/bro.vim	/^let g:loaded_syntastic_bro_bro_checker = 1$/;"	v
g:loaded_syntastic_c_autoload	bundle/syntastic/autoload/syntastic/c.vim	/^let g:loaded_syntastic_c_autoload = 1$/;"	v
g:loaded_syntastic_c_avrgcc_checker	bundle/syntastic/syntax_checkers/c/avrgcc.vim	/^let g:loaded_syntastic_c_avrgcc_checker = 1$/;"	v
g:loaded_syntastic_c_checkpatch_checker	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^let g:loaded_syntastic_c_checkpatch_checker = 1$/;"	v
g:loaded_syntastic_c_clang_check_checker	bundle/syntastic/syntax_checkers/c/clang_check.vim	/^let g:loaded_syntastic_c_clang_check_checker = 1$/;"	v
g:loaded_syntastic_c_clang_tidy_checker	bundle/syntastic/syntax_checkers/c/clang_tidy.vim	/^let g:loaded_syntastic_c_clang_tidy_checker = 1$/;"	v
g:loaded_syntastic_c_cppcheck_checker	bundle/syntastic/syntax_checkers/c/cppcheck.vim	/^let g:loaded_syntastic_c_cppcheck_checker = 1$/;"	v
g:loaded_syntastic_c_cppclean_checker	bundle/syntastic/syntax_checkers/c/cppclean.vim	/^let g:loaded_syntastic_c_cppclean_checker = 1$/;"	v
g:loaded_syntastic_c_flawfinder_checker	bundle/syntastic/syntax_checkers/c/flawfinder.vim	/^let g:loaded_syntastic_c_flawfinder_checker = 1$/;"	v
g:loaded_syntastic_c_gcc_checker	bundle/syntastic/syntax_checkers/c/gcc.vim	/^let g:loaded_syntastic_c_gcc_checker = 1$/;"	v
g:loaded_syntastic_c_make_checker	bundle/syntastic/syntax_checkers/c/make.vim	/^let g:loaded_syntastic_c_make_checker = 1$/;"	v
g:loaded_syntastic_c_oclint_checker	bundle/syntastic/syntax_checkers/c/oclint.vim	/^let g:loaded_syntastic_c_oclint_checker = 1$/;"	v
g:loaded_syntastic_c_pc_lint_checker	bundle/syntastic/syntax_checkers/c/pc_lint.vim	/^let g:loaded_syntastic_c_pc_lint_checker = 1$/;"	v
g:loaded_syntastic_c_sparse_checker	bundle/syntastic/syntax_checkers/c/sparse.vim	/^let g:loaded_syntastic_c_sparse_checker = 1$/;"	v
g:loaded_syntastic_c_splint_checker	bundle/syntastic/syntax_checkers/c/splint.vim	/^let g:loaded_syntastic_c_splint_checker = 1$/;"	v
g:loaded_syntastic_cabal_cabal_checker	bundle/syntastic/syntax_checkers/cabal/cabal.vim	/^let g:loaded_syntastic_cabal_cabal_checker = 1$/;"	v
g:loaded_syntastic_checker	bundle/syntastic/plugin/syntastic/checker.vim	/^let g:loaded_syntastic_checker = 1$/;"	v
g:loaded_syntastic_chef_foodcritic_checker	bundle/syntastic/syntax_checkers/chef/foodcritic.vim	/^let g:loaded_syntastic_chef_foodcritic_checker = 1$/;"	v
g:loaded_syntastic_cmake_cmakelint_checker	bundle/syntastic/syntax_checkers/cmake/cmakelint.vim	/^let g:loaded_syntastic_cmake_cmakelint_checker = 1$/;"	v
g:loaded_syntastic_co_coco_checker	bundle/syntastic/syntax_checkers/co/coco.vim	/^let g:loaded_syntastic_co_coco_checker = 1$/;"	v
g:loaded_syntastic_cobol_cobc_checker	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^let g:loaded_syntastic_cobol_cobc_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffee_checker	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^let g:loaded_syntastic_coffee_coffee_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffee_jshint_checker	bundle/syntastic/syntax_checkers/coffee/coffee_jshint.vim	/^let g:loaded_syntastic_coffee_coffee_jshint_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffeelint_checker	bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^let g:loaded_syntastic_coffee_coffeelint_checker = 1$/;"	v
g:loaded_syntastic_coq_coqtop_checker	bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^let g:loaded_syntastic_coq_coqtop_checker = 1$/;"	v
g:loaded_syntastic_cpp_avrgcc_checker	bundle/syntastic/syntax_checkers/cpp/avrgcc.vim	/^let g:loaded_syntastic_cpp_avrgcc_checker = 1$/;"	v
g:loaded_syntastic_cpp_clang_check_checker	bundle/syntastic/syntax_checkers/cpp/clang_check.vim	/^let g:loaded_syntastic_cpp_clang_check_checker = 1$/;"	v
g:loaded_syntastic_cpp_clang_tidy_checker	bundle/syntastic/syntax_checkers/cpp/clang_tidy.vim	/^let g:loaded_syntastic_cpp_clang_tidy_checker = 1$/;"	v
g:loaded_syntastic_cpp_cppcheck_checker	bundle/syntastic/syntax_checkers/cpp/cppcheck.vim	/^let g:loaded_syntastic_cpp_cppcheck_checker = 1$/;"	v
g:loaded_syntastic_cpp_cppclean_checker	bundle/syntastic/syntax_checkers/cpp/cppclean.vim	/^let g:loaded_syntastic_cpp_cppclean_checker = 1$/;"	v
g:loaded_syntastic_cpp_cpplint_checker	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^let g:loaded_syntastic_cpp_cpplint_checker = 1$/;"	v
g:loaded_syntastic_cpp_flawfinder_checker	bundle/syntastic/syntax_checkers/cpp/flawfinder.vim	/^let g:loaded_syntastic_cpp_flawfinder_checker = 1$/;"	v
g:loaded_syntastic_cpp_gcc_checker	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^let g:loaded_syntastic_cpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_cpp_oclint_checker	bundle/syntastic/syntax_checkers/cpp/oclint.vim	/^let g:loaded_syntastic_cpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_cpp_pc_lint_checker	bundle/syntastic/syntax_checkers/cpp/pc_lint.vim	/^let g:loaded_syntastic_cpp_pc_lint_checker = 1$/;"	v
g:loaded_syntastic_cpp_verapp_checker	bundle/syntastic/syntax_checkers/cpp/verapp.vim	/^let g:loaded_syntastic_cpp_verapp_checker = 1$/;"	v
g:loaded_syntastic_cs_mcs_checker	bundle/syntastic/syntax_checkers/cs/mcs.vim	/^let g:loaded_syntastic_cs_mcs_checker = 1$/;"	v
g:loaded_syntastic_css_csslint_checker	bundle/syntastic/syntax_checkers/css/csslint.vim	/^let g:loaded_syntastic_css_csslint_checker = 1$/;"	v
g:loaded_syntastic_css_mixedindentlint_checker	bundle/syntastic/syntax_checkers/css/mixedindentlint.vim	/^let g:loaded_syntastic_css_mixedindentlint_checker = 1$/;"	v
g:loaded_syntastic_css_phpcs_checker	bundle/syntastic/syntax_checkers/css/phpcs.vim	/^let g:loaded_syntastic_css_phpcs_checker = 1$/;"	v
g:loaded_syntastic_css_prettycss_checker	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^let g:loaded_syntastic_css_prettycss_checker = 1$/;"	v
g:loaded_syntastic_css_recess_checker	bundle/syntastic/syntax_checkers/css/recess.vim	/^let g:loaded_syntastic_css_recess_checker = 1$/;"	v
g:loaded_syntastic_css_stylelint_checker	bundle/syntastic/syntax_checkers/css/stylelint.vim	/^let g:loaded_syntastic_css_stylelint_checker = 1$/;"	v
g:loaded_syntastic_cucumber_cucumber_checker	bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^let g:loaded_syntastic_cucumber_cucumber_checker = 1$/;"	v
g:loaded_syntastic_cuda_nvcc_checker	bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^let g:loaded_syntastic_cuda_nvcc_checker = 1$/;"	v
g:loaded_syntastic_d_dmd_checker	bundle/syntastic/syntax_checkers/d/dmd.vim	/^let g:loaded_syntastic_d_dmd_checker = 1$/;"	v
g:loaded_syntastic_d_dscanner_checker	bundle/syntastic/syntax_checkers/d/dscanner.vim	/^let g:loaded_syntastic_d_dscanner_checker = 1$/;"	v
g:loaded_syntastic_dart_dartanalyzer_checker	bundle/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^let g:loaded_syntastic_dart_dartanalyzer_checker = 1$/;"	v
g:loaded_syntastic_docbk_igor_checker	bundle/syntastic/syntax_checkers/docbk/igor.vim	/^let g:loaded_syntastic_docbk_igor_checker = 1$/;"	v
g:loaded_syntastic_docbk_xmllint_checker	bundle/syntastic/syntax_checkers/docbk/xmllint.vim	/^let g:loaded_syntastic_docbk_xmllint_checker = 1$/;"	v
g:loaded_syntastic_dockerfile_dockerfile_lint_checker	bundle/syntastic/syntax_checkers/dockerfile/dockerfile_lint.vim	/^let g:loaded_syntastic_dockerfile_dockerfile_lint_checker = 1$/;"	v
g:loaded_syntastic_dockerfile_hadolint_checker	bundle/syntastic/syntax_checkers/dockerfile/hadolint.vim	/^let g:loaded_syntastic_dockerfile_hadolint_checker = 1$/;"	v
g:loaded_syntastic_dustjs_swiffer_checker	bundle/syntastic/syntax_checkers/dustjs/swiffer.vim	/^let g:loaded_syntastic_dustjs_swiffer_checker = 1$/;"	v
g:loaded_syntastic_elixir_elixir_checker	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^let g:loaded_syntastic_elixir_elixir_checker = 1$/;"	v
g:loaded_syntastic_erlang_erlang_checker	bundle/syntastic/syntax_checkers/erlang/escript.vim	/^let g:loaded_syntastic_erlang_erlang_checker = 1$/;"	v
g:loaded_syntastic_erlang_syntaxerl_checker	bundle/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^let g:loaded_syntastic_erlang_syntaxerl_checker = 1$/;"	v
g:loaded_syntastic_eruby_ruby_checker	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^let g:loaded_syntastic_eruby_ruby_checker = 1$/;"	v
g:loaded_syntastic_fortran_gfortran_checker	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^let g:loaded_syntastic_fortran_gfortran_checker = 1$/;"	v
g:loaded_syntastic_glsl_cgc_checker	bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^let g:loaded_syntastic_glsl_cgc_checker = 1$/;"	v
g:loaded_syntastic_go_go_checker	bundle/syntastic/syntax_checkers/go/go.vim	/^let g:loaded_syntastic_go_go_checker = 1$/;"	v
g:loaded_syntastic_go_gofmt_checker	bundle/syntastic/syntax_checkers/go/gofmt.vim	/^let g:loaded_syntastic_go_gofmt_checker = 1$/;"	v
g:loaded_syntastic_go_golangci_lint_checker	bundle/syntastic/syntax_checkers/go/golangci_lint.vim	/^let g:loaded_syntastic_go_golangci_lint_checker = 1$/;"	v
g:loaded_syntastic_go_golint_checker	bundle/syntastic/syntax_checkers/go/golint.vim	/^let g:loaded_syntastic_go_golint_checker = 1$/;"	v
g:loaded_syntastic_go_gometalinter_checker	bundle/syntastic/syntax_checkers/go/gometalinter.vim	/^let g:loaded_syntastic_go_gometalinter_checker = 1$/;"	v
g:loaded_syntastic_go_gotype_checker	bundle/syntastic/syntax_checkers/go/gotype.vim	/^let g:loaded_syntastic_go_gotype_checker = 1$/;"	v
g:loaded_syntastic_go_govet_checker	bundle/syntastic/syntax_checkers/go/govet.vim	/^let g:loaded_syntastic_go_govet_checker = 1$/;"	v
g:loaded_syntastic_haml_haml_checker	bundle/syntastic/syntax_checkers/haml/haml.vim	/^let g:loaded_syntastic_haml_haml_checker = 1$/;"	v
g:loaded_syntastic_haml_haml_lint_checker	bundle/syntastic/syntax_checkers/haml/haml_lint.vim	/^let g:loaded_syntastic_haml_haml_lint_checker = 1$/;"	v
g:loaded_syntastic_handlebars_handlebars_checker	bundle/syntastic/syntax_checkers/handlebars/handlebars.vim	/^let g:loaded_syntastic_handlebars_handlebars_checker = 1$/;"	v
g:loaded_syntastic_haskell_hdevtools_checker	bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^let g:loaded_syntastic_haskell_hdevtools_checker = 1$/;"	v
g:loaded_syntastic_haskell_hlint_checker	bundle/syntastic/syntax_checkers/haskell/hlint.vim	/^let g:loaded_syntastic_haskell_hlint_checker = 1$/;"	v
g:loaded_syntastic_haskell_scan_checker	bundle/syntastic/syntax_checkers/haskell/scan.vim	/^let g:loaded_syntastic_haskell_scan_checker = 1$/;"	v
g:loaded_syntastic_haxe_haxe_checker	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^let g:loaded_syntastic_haxe_haxe_checker = 1$/;"	v
g:loaded_syntastic_help_proselint_checker	bundle/syntastic/syntax_checkers/help/proselint.vim	/^let g:loaded_syntastic_help_proselint_checker = 1$/;"	v
g:loaded_syntastic_hss_hss_checker	bundle/syntastic/syntax_checkers/hss/hss.vim	/^let g:loaded_syntastic_hss_hss_checker = 1$/;"	v
g:loaded_syntastic_html_eslint_checker	bundle/syntastic/syntax_checkers/html/eslint.vim	/^let g:loaded_syntastic_html_eslint_checker = 1$/;"	v
g:loaded_syntastic_html_gjslint_checker	bundle/syntastic/syntax_checkers/html/gjslint.vim	/^let g:loaded_syntastic_html_gjslint_checker = 1$/;"	v
g:loaded_syntastic_html_htmlhint_checker	bundle/syntastic/syntax_checkers/html/htmlhint.vim	/^let g:loaded_syntastic_html_htmlhint_checker = 1$/;"	v
g:loaded_syntastic_html_jshint_checker	bundle/syntastic/syntax_checkers/html/jshint.vim	/^let g:loaded_syntastic_html_jshint_checker = 1$/;"	v
g:loaded_syntastic_html_proselint_checker	bundle/syntastic/syntax_checkers/html/proselint.vim	/^let g:loaded_syntastic_html_proselint_checker = 1$/;"	v
g:loaded_syntastic_html_stylelint_checker	bundle/syntastic/syntax_checkers/html/stylelint.vim	/^let g:loaded_syntastic_html_stylelint_checker = 1$/;"	v
g:loaded_syntastic_html_textlint_checker	bundle/syntastic/syntax_checkers/html/textlint.vim	/^let g:loaded_syntastic_html_textlint_checker = 1$/;"	v
g:loaded_syntastic_html_tidy_checker	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let g:loaded_syntastic_html_tidy_checker = 1$/;"	v
g:loaded_syntastic_html_validator_checker	bundle/syntastic/syntax_checkers/html/validator.vim	/^let g:loaded_syntastic_html_validator_checker=1$/;"	v
g:loaded_syntastic_html_w3_checker	bundle/syntastic/syntax_checkers/html/w3.vim	/^let g:loaded_syntastic_html_w3_checker = 1$/;"	v
g:loaded_syntastic_jade_jade_lint_checker	bundle/syntastic/syntax_checkers/jade/jade_lint.vim	/^let g:loaded_syntastic_jade_jade_lint_checker = 1$/;"	v
g:loaded_syntastic_java_checkstyle_checker	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^let g:loaded_syntastic_java_checkstyle_checker = 1$/;"	v
g:loaded_syntastic_java_javac_checker	bundle/syntastic/syntax_checkers/java/javac.vim	/^let g:loaded_syntastic_java_javac_checker = 1$/;"	v
g:loaded_syntastic_javascript_closurecompiler_checker	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let g:loaded_syntastic_javascript_closurecompiler_checker = 1$/;"	v
g:loaded_syntastic_javascript_eslint_checker	bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^let g:loaded_syntastic_javascript_eslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_flow_checker	bundle/syntastic/syntax_checkers/javascript/flow.vim	/^let g:loaded_syntastic_javascript_flow_checker = 1$/;"	v
g:loaded_syntastic_javascript_gjslint_checker	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^let g:loaded_syntastic_javascript_gjslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jscs_checker	bundle/syntastic/syntax_checkers/javascript/jscs.vim	/^let g:loaded_syntastic_javascript_jscs_checker = 1$/;"	v
g:loaded_syntastic_javascript_jshint_checker	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^let g:loaded_syntastic_javascript_jshint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jsl_checker	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^let g:loaded_syntastic_javascript_jsl_checker = 1$/;"	v
g:loaded_syntastic_javascript_jslint_checker	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^let g:loaded_syntastic_javascript_jslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jsxhint_checker	bundle/syntastic/syntax_checkers/javascript/jsxhint.vim	/^let g:loaded_syntastic_javascript_jsxhint_checker = 1$/;"	v
g:loaded_syntastic_javascript_lynt_checker	bundle/syntastic/syntax_checkers/javascript/lynt.vim	/^let g:loaded_syntastic_javascript_lynt_checker = 1$/;"	v
g:loaded_syntastic_javascript_mixedindentlint_checker	bundle/syntastic/syntax_checkers/javascript/mixedindentlint.vim	/^let g:loaded_syntastic_javascript_mixedindentlint_checker = 1$/;"	v
g:loaded_syntastic_javascript_standard_checker	bundle/syntastic/syntax_checkers/javascript/standard.vim	/^let g:loaded_syntastic_javascript_standard_checker = 1$/;"	v
g:loaded_syntastic_javascript_tern_lint_checker	bundle/syntastic/syntax_checkers/javascript/tern_lint.vim	/^let g:loaded_syntastic_javascript_tern_lint_checker = 1$/;"	v
g:loaded_syntastic_json_jsonlint_checker	bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^let g:loaded_syntastic_json_jsonlint_checker = 1$/;"	v
g:loaded_syntastic_json_jsonval_checker	bundle/syntastic/syntax_checkers/json/jsonval.vim	/^let g:loaded_syntastic_json_jsonval_checker = 1$/;"	v
g:loaded_syntastic_julia_lint_checker	bundle/syntastic/syntax_checkers/julia/lint.vim	/^let g:loaded_syntastic_julia_lint_checker = 1$/;"	v
g:loaded_syntastic_less_lessc_checker	bundle/syntastic/syntax_checkers/less/lessc.vim	/^let g:loaded_syntastic_less_lessc_checker = 1$/;"	v
g:loaded_syntastic_less_recess_checker	bundle/syntastic/syntax_checkers/less/recess.vim	/^let g:loaded_syntastic_less_recess_checker = 1$/;"	v
g:loaded_syntastic_less_stylelint_checker	bundle/syntastic/syntax_checkers/less/stylelint.vim	/^let g:loaded_syntastic_less_stylelint_checker = 1$/;"	v
g:loaded_syntastic_lex_flex_checker	bundle/syntastic/syntax_checkers/lex/flex.vim	/^let g:loaded_syntastic_lex_flex_checker = 1$/;"	v
g:loaded_syntastic_limbo_limbo_checker	bundle/syntastic/syntax_checkers/limbo/limbo.vim	/^let g:loaded_syntastic_limbo_limbo_checker = 1$/;"	v
g:loaded_syntastic_lisp_clisp_checker	bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^let g:loaded_syntastic_lisp_clisp_checker = 1$/;"	v
g:loaded_syntastic_llvm_llvm_checker	bundle/syntastic/syntax_checkers/llvm/llvm.vim	/^let g:loaded_syntastic_llvm_llvm_checker = 1$/;"	v
g:loaded_syntastic_loclist	bundle/syntastic/plugin/syntastic/loclist.vim	/^let g:loaded_syntastic_loclist = 1$/;"	v
g:loaded_syntastic_log_autoload	bundle/syntastic/autoload/syntastic/log.vim	/^let g:loaded_syntastic_log_autoload = 1$/;"	v
g:loaded_syntastic_lua_luac_checker	bundle/syntastic/syntax_checkers/lua/luac.vim	/^let g:loaded_syntastic_lua_luac_checker = 1$/;"	v
g:loaded_syntastic_lua_luacheck_checker	bundle/syntastic/syntax_checkers/lua/luacheck.vim	/^let g:loaded_syntastic_lua_luacheck_checker = 1$/;"	v
g:loaded_syntastic_markdown_mdl_checker	bundle/syntastic/syntax_checkers/markdown/mdl.vim	/^let g:loaded_syntastic_markdown_mdl_checker = 1$/;"	v
g:loaded_syntastic_markdown_proselint_checker	bundle/syntastic/syntax_checkers/markdown/proselint.vim	/^let g:loaded_syntastic_markdown_proselint_checker = 1$/;"	v
g:loaded_syntastic_markdown_remark_lint_checker	bundle/syntastic/syntax_checkers/markdown/remark_lint.vim	/^let g:loaded_syntastic_markdown_remark_lint_checker = 1$/;"	v
g:loaded_syntastic_markdown_textlint_checker	bundle/syntastic/syntax_checkers/markdown/textlint.vim	/^let g:loaded_syntastic_markdown_textlint_checker = 1$/;"	v
g:loaded_syntastic_matlab_mlint_checker	bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^let g:loaded_syntastic_matlab_mlint_checker = 1$/;"	v
g:loaded_syntastic_mercury_mmc_checker	bundle/syntastic/syntax_checkers/mercury/mmc.vim	/^let g:loaded_syntastic_mercury_mmc_checker = 1$/;"	v
g:loaded_syntastic_modemap	bundle/syntastic/plugin/syntastic/modemap.vim	/^let g:loaded_syntastic_modemap = 1$/;"	v
g:loaded_syntastic_nasm_nasm_checker	bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^let g:loaded_syntastic_nasm_nasm_checker = 1$/;"	v
g:loaded_syntastic_nix_nix_checker	bundle/syntastic/syntax_checkers/nix/nix.vim	/^let g:loaded_syntastic_nix_nix_checker = 1$/;"	v
g:loaded_syntastic_notifier_autoloclist	bundle/syntastic/plugin/syntastic/autoloclist.vim	/^let g:loaded_syntastic_notifier_autoloclist = 1$/;"	v
g:loaded_syntastic_notifier_balloons	bundle/syntastic/plugin/syntastic/balloons.vim	/^let g:loaded_syntastic_notifier_balloons = 1$/;"	v
g:loaded_syntastic_notifier_cursor	bundle/syntastic/plugin/syntastic/cursor.vim	/^let g:loaded_syntastic_notifier_cursor = 1$/;"	v
g:loaded_syntastic_notifier_highlighting	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let g:loaded_syntastic_notifier_highlighting = 1$/;"	v
g:loaded_syntastic_notifier_signs	bundle/syntastic/plugin/syntastic/signs.vim	/^let g:loaded_syntastic_notifier_signs = 1$/;"	v
g:loaded_syntastic_notifiers	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let g:loaded_syntastic_notifiers = 1$/;"	v
g:loaded_syntastic_nroff_igor_checker	bundle/syntastic/syntax_checkers/nroff/igor.vim	/^let g:loaded_syntastic_nroff_igor_checker = 1$/;"	v
g:loaded_syntastic_nroff_mandoc_checker	bundle/syntastic/syntax_checkers/nroff/mandoc.vim	/^let g:loaded_syntastic_nroff_mandoc_checker = 1$/;"	v
g:loaded_syntastic_nroff_proselint_checker	bundle/syntastic/syntax_checkers/nroff/proselint.vim	/^let g:loaded_syntastic_nroff_proselint_checker = 1$/;"	v
g:loaded_syntastic_objc_gcc_checker	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^let g:loaded_syntastic_objc_gcc_checker = 1$/;"	v
g:loaded_syntastic_objc_oclint_checker	bundle/syntastic/syntax_checkers/objc/oclint.vim	/^let g:loaded_syntastic_objc_oclint_checker = 1$/;"	v
g:loaded_syntastic_objcpp_gcc_checker	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^let g:loaded_syntastic_objcpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_objcpp_oclint_checker	bundle/syntastic/syntax_checkers/objcpp/oclint.vim	/^let g:loaded_syntastic_objcpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_ocaml_camlp4o_checker	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let g:loaded_syntastic_ocaml_camlp4o_checker = 1$/;"	v
g:loaded_syntastic_perl6_perl6_checker	bundle/syntastic/syntax_checkers/perl6/perl6.vim	/^let g:loaded_syntastic_perl6_perl6_checker = 1$/;"	v
g:loaded_syntastic_perl_perl_checker	bundle/syntastic/syntax_checkers/perl/perl.vim	/^let g:loaded_syntastic_perl_perl_checker = 1$/;"	v
g:loaded_syntastic_perl_perlcritic_checker	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^let g:loaded_syntastic_perl_perlcritic_checker = 1$/;"	v
g:loaded_syntastic_perl_podchecker_checker	bundle/syntastic/syntax_checkers/perl/podchecker.vim	/^let g:loaded_syntastic_perl_podchecker_checker = 1$/;"	v
g:loaded_syntastic_php_php_checker	bundle/syntastic/syntax_checkers/php/php.vim	/^let g:loaded_syntastic_php_php_checker = 1$/;"	v
g:loaded_syntastic_php_phpcs_checker	bundle/syntastic/syntax_checkers/php/phpcs.vim	/^let g:loaded_syntastic_php_phpcs_checker = 1$/;"	v
g:loaded_syntastic_php_phplint_checker	bundle/syntastic/syntax_checkers/php/phplint.vim	/^let g:loaded_syntastic_php_phplint_checker = 1$/;"	v
g:loaded_syntastic_php_phpmd_checker	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^let g:loaded_syntastic_php_phpmd_checker = 1$/;"	v
g:loaded_syntastic_php_phpstan_checker	bundle/syntastic/syntax_checkers/php/phpstan.vim	/^let g:loaded_syntastic_php_phpstan_checker = 1$/;"	v
g:loaded_syntastic_plugin	bundle/syntastic/plugin/syntastic.vim	/^let g:loaded_syntastic_plugin = 1$/;"	v
g:loaded_syntastic_po_dennis_checker	bundle/syntastic/syntax_checkers/po/dennis.vim	/^let g:loaded_syntastic_po_dennis_checker = 1$/;"	v
g:loaded_syntastic_po_msgfmt_checker	bundle/syntastic/syntax_checkers/po/msgfmt.vim	/^let g:loaded_syntastic_po_msgfmt_checker = 1$/;"	v
g:loaded_syntastic_pod_podchecker_checker	bundle/syntastic/syntax_checkers/pod/podchecker.vim	/^let g:loaded_syntastic_pod_podchecker_checker = 1$/;"	v
g:loaded_syntastic_pod_proselint_checker	bundle/syntastic/syntax_checkers/pod/proselint.vim	/^let g:loaded_syntastic_pod_proselint_checker = 1$/;"	v
g:loaded_syntastic_postprocess_autoload	bundle/syntastic/autoload/syntastic/postprocess.vim	/^let g:loaded_syntastic_postprocess_autoload = 1$/;"	v
g:loaded_syntastic_preprocess_autoload	bundle/syntastic/autoload/syntastic/preprocess.vim	/^let g:loaded_syntastic_preprocess_autoload = 1$/;"	v
g:loaded_syntastic_pug_pug_lint_checker	bundle/syntastic/syntax_checkers/pug/pug_lint.vim	/^let g:loaded_syntastic_pug_pug_lint_checker = 1$/;"	v
g:loaded_syntastic_puppet_puppet_checker	bundle/syntastic/syntax_checkers/puppet/puppet.vim	/^let g:loaded_syntastic_puppet_puppet_checker = 1$/;"	v
g:loaded_syntastic_puppet_puppetlint_checker	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^let g:loaded_syntastic_puppet_puppetlint_checker = 1$/;"	v
g:loaded_syntastic_python_bandit_checker	bundle/syntastic/syntax_checkers/python/bandit.vim	/^let g:loaded_syntastic_python_bandit_checker = 1$/;"	v
g:loaded_syntastic_python_flake8_checker	bundle/syntastic/syntax_checkers/python/flake8.vim	/^let g:loaded_syntastic_python_flake8_checker = 1$/;"	v
g:loaded_syntastic_python_frosted_checker	bundle/syntastic/syntax_checkers/python/frosted.vim	/^let g:loaded_syntastic_python_frosted_checker = 1$/;"	v
g:loaded_syntastic_python_mypy_checker	bundle/syntastic/syntax_checkers/python/mypy.vim	/^let g:loaded_syntastic_python_mypy_checker = 1$/;"	v
g:loaded_syntastic_python_pep257_checker	bundle/syntastic/syntax_checkers/python/pep257.vim	/^let g:loaded_syntastic_python_pep257_checker = 1$/;"	v
g:loaded_syntastic_python_pep8_checker	bundle/syntastic/syntax_checkers/python/pep8.vim	/^let g:loaded_syntastic_python_pep8_checker = 1$/;"	v
g:loaded_syntastic_python_prospector_checker	bundle/syntastic/syntax_checkers/python/prospector.vim	/^let g:loaded_syntastic_python_prospector_checker = 1$/;"	v
g:loaded_syntastic_python_py3kwarn_checker	bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^let g:loaded_syntastic_python_py3kwarn_checker = 1$/;"	v
g:loaded_syntastic_python_pycodestyle_checker	bundle/syntastic/syntax_checkers/python/pycodestyle.vim	/^let g:loaded_syntastic_python_pycodestyle_checker = 1$/;"	v
g:loaded_syntastic_python_pydocstyle_checker	bundle/syntastic/syntax_checkers/python/pydocstyle.vim	/^let g:loaded_syntastic_python_pydocstyle_checker = 1$/;"	v
g:loaded_syntastic_python_pyflakes_checker	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^let g:loaded_syntastic_python_pyflakes_checker = 1$/;"	v
g:loaded_syntastic_python_pylama_checker	bundle/syntastic/syntax_checkers/python/pylama.vim	/^let g:loaded_syntastic_python_pylama_checker = 1$/;"	v
g:loaded_syntastic_python_pylint_checker	bundle/syntastic/syntax_checkers/python/pylint.vim	/^let g:loaded_syntastic_python_pylint_checker = 1$/;"	v
g:loaded_syntastic_python_python_checker	bundle/syntastic/syntax_checkers/python/python.vim	/^let g:loaded_syntastic_python_python_checker = 1$/;"	v
g:loaded_syntastic_qml_qmllint_checker	bundle/syntastic/syntax_checkers/qml/qmllint.vim	/^let g:loaded_syntastic_qml_qmllint_checker = 1$/;"	v
g:loaded_syntastic_r_lint_checker	bundle/syntastic/syntax_checkers/r/lint.vim	/^let g:loaded_syntastic_r_lint_checker = 1$/;"	v
g:loaded_syntastic_r_lintr_checker	bundle/syntastic/syntax_checkers/r/lintr.vim	/^let g:loaded_syntastic_r_lintr_checker = 1$/;"	v
g:loaded_syntastic_r_svtools_checker	bundle/syntastic/syntax_checkers/r/svtools.vim	/^let g:loaded_syntastic_r_svtools_checker = 1$/;"	v
g:loaded_syntastic_racket_code_ayatollah_checker	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^let g:loaded_syntastic_racket_code_ayatollah_checker = 1$/;"	v
g:loaded_syntastic_racket_racket_checker	bundle/syntastic/syntax_checkers/racket/racket.vim	/^let g:loaded_syntastic_racket_racket_checker=1$/;"	v
g:loaded_syntastic_registry	bundle/syntastic/plugin/syntastic/registry.vim	/^let g:loaded_syntastic_registry = 1$/;"	v
g:loaded_syntastic_rmd_lintr_checker	bundle/syntastic/syntax_checkers/rmd/lintr.vim	/^let g:loaded_syntastic_rmd_lintr_checker = 1$/;"	v
g:loaded_syntastic_rnc_rnv_checker	bundle/syntastic/syntax_checkers/rnc/rnv.vim	/^let g:loaded_syntastic_rnc_rnv_checker = 1$/;"	v
g:loaded_syntastic_rst_proselint_checker	bundle/syntastic/syntax_checkers/rst/proselint.vim	/^let g:loaded_syntastic_rst_proselint_checker = 1$/;"	v
g:loaded_syntastic_rst_rst2pseudoxml_checker	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let g:loaded_syntastic_rst_rst2pseudoxml_checker = 1$/;"	v
g:loaded_syntastic_rst_rstcheck_checker	bundle/syntastic/syntax_checkers/rst/rstcheck.vim	/^let g:loaded_syntastic_rst_rstcheck_checker = 1$/;"	v
g:loaded_syntastic_rst_sphinx_checker	bundle/syntastic/syntax_checkers/rst/sphinx.vim	/^let g:loaded_syntastic_rst_sphinx_checker = 1$/;"	v
g:loaded_syntastic_ruby_flog_checker	bundle/syntastic/syntax_checkers/ruby/flog.vim	/^let g:loaded_syntastic_ruby_flog_checker = 1$/;"	v
g:loaded_syntastic_ruby_jruby_checker	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^let g:loaded_syntastic_ruby_jruby_checker = 1$/;"	v
g:loaded_syntastic_ruby_macruby_checker	bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^let g:loaded_syntastic_ruby_macruby_checker = 1$/;"	v
g:loaded_syntastic_ruby_mri_checker	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^let g:loaded_syntastic_ruby_mri_checker = 1$/;"	v
g:loaded_syntastic_ruby_reek_checker	bundle/syntastic/syntax_checkers/ruby/reek.vim	/^let g:loaded_syntastic_ruby_reek_checker = 1$/;"	v
g:loaded_syntastic_ruby_rubocop_checker	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^let g:loaded_syntastic_ruby_rubocop_checker = 1$/;"	v
g:loaded_syntastic_ruby_rubylint_checker	bundle/syntastic/syntax_checkers/ruby/rubylint.vim	/^let g:loaded_syntastic_ruby_rubylint_checker = 1$/;"	v
g:loaded_syntastic_sass_sass_checker	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let g:loaded_syntastic_sass_sass_checker = 1$/;"	v
g:loaded_syntastic_sass_sass_lint_checker	bundle/syntastic/syntax_checkers/sass/sass_lint.vim	/^let g:loaded_syntastic_sass_sass_lint_checker = 1$/;"	v
g:loaded_syntastic_sass_sassc_checker	bundle/syntastic/syntax_checkers/sass/sassc.vim	/^let g:loaded_syntastic_sass_sassc_checker = 1$/;"	v
g:loaded_syntastic_scala_fsc_checker	bundle/syntastic/syntax_checkers/scala/fsc.vim	/^let g:loaded_syntastic_scala_fsc_checker = 1$/;"	v
g:loaded_syntastic_scala_scalac_checker	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^let g:loaded_syntastic_scala_scalac_checker = 1$/;"	v
g:loaded_syntastic_scala_scalastyle_checker	bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^let g:loaded_syntastic_scala_scalastyle_checker = 1$/;"	v
g:loaded_syntastic_scss_mixedindentlint_checker	bundle/syntastic/syntax_checkers/scss/mixedindentlint.vim	/^let g:loaded_syntastic_scss_mixedindentlint_checker = 1$/;"	v
g:loaded_syntastic_scss_sass_checker	bundle/syntastic/syntax_checkers/scss/sass.vim	/^let g:loaded_syntastic_scss_sass_checker = 1$/;"	v
g:loaded_syntastic_scss_sass_lint_checker	bundle/syntastic/syntax_checkers/scss/sass_lint.vim	/^let g:loaded_syntastic_scss_sass_lint_checker = 1$/;"	v
g:loaded_syntastic_scss_sassc_checker	bundle/syntastic/syntax_checkers/scss/sassc.vim	/^let g:loaded_syntastic_scss_sassc_checker = 1$/;"	v
g:loaded_syntastic_scss_scss_lint_checker	bundle/syntastic/syntax_checkers/scss/scss_lint.vim	/^let g:loaded_syntastic_scss_scss_lint_checker = 1$/;"	v
g:loaded_syntastic_scss_stylelint_checker	bundle/syntastic/syntax_checkers/scss/stylelint.vim	/^let g:loaded_syntastic_scss_stylelint_checker = 1$/;"	v
g:loaded_syntastic_sh_bashate_checker	bundle/syntastic/syntax_checkers/sh/bashate.vim	/^let g:loaded_syntastic_sh_bashate_checker = 1$/;"	v
g:loaded_syntastic_sh_checkbashisms_checker	bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^let g:loaded_syntastic_sh_checkbashisms_checker = 1$/;"	v
g:loaded_syntastic_sh_sh_checker	bundle/syntastic/syntax_checkers/sh/sh.vim	/^let g:loaded_syntastic_sh_sh_checker = 1$/;"	v
g:loaded_syntastic_sh_shellcheck_checker	bundle/syntastic/syntax_checkers/sh/shellcheck.vim	/^let g:loaded_syntastic_sh_shellcheck_checker = 1$/;"	v
g:loaded_syntastic_slim_slim_lint_checker	bundle/syntastic/syntax_checkers/slim/slim_lint.vim	/^let g:loaded_syntastic_slim_slim_lint_checker = 1$/;"	v
g:loaded_syntastic_slim_slimrb_checker	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^let g:loaded_syntastic_slim_slimrb_checker = 1$/;"	v
g:loaded_syntastic_sml_smlnj_checker	bundle/syntastic/syntax_checkers/sml/smlnj.vim	/^let g:loaded_syntastic_sml_smlnj_checker = 1$/;"	v
g:loaded_syntastic_solidity_solc_checker	bundle/syntastic/syntax_checkers/solidity/solc.vim	/^let g:loaded_syntastic_solidity_solc_checker = 1$/;"	v
g:loaded_syntastic_solidity_solhint_checker	bundle/syntastic/syntax_checkers/solidity/solhint.vim	/^let g:loaded_syntastic_solidity_solhint_checker = 1$/;"	v
g:loaded_syntastic_solidity_solium_checker	bundle/syntastic/syntax_checkers/solidity/solium.vim	/^let g:loaded_syntastic_solidity_solium_checker = 1$/;"	v
g:loaded_syntastic_spec_rpmlint_checker	bundle/syntastic/syntax_checkers/spec/rpmlint.vim	/^let g:loaded_syntastic_spec_rpmlint_checker = 1$/;"	v
g:loaded_syntastic_sql_sqlint_checker	bundle/syntastic/syntax_checkers/sql/sqlint.vim	/^let g:loaded_syntastic_sql_sqlint_checker = 1$/;"	v
g:loaded_syntastic_sql_tsqllint_checker	bundle/syntastic/syntax_checkers/sql/tsqllint.vim	/^let g:loaded_syntastic_sql_tsqllint_checker = 1$/;"	v
g:loaded_syntastic_stylus_stylint_checker	bundle/syntastic/syntax_checkers/stylus/stylint.vim	/^let g:loaded_syntastic_stylus_stylint_checker = 1$/;"	v
g:loaded_syntastic_svg_validator_checker	bundle/syntastic/syntax_checkers/svg/validator.vim	/^let g:loaded_syntastic_svg_validator_checker = 1$/;"	v
g:loaded_syntastic_svg_w3_checker	bundle/syntastic/syntax_checkers/svg/w3.vim	/^let g:loaded_syntastic_svg_w3_checker = 1$/;"	v
g:loaded_syntastic_tcl_nagelfar_checker	bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^let g:loaded_syntastic_tcl_nagelfar_checker = 1$/;"	v
g:loaded_syntastic_tex_chktex_checker	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^let g:loaded_syntastic_tex_chktex_checker = 1$/;"	v
g:loaded_syntastic_tex_lacheck_checker	bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^let g:loaded_syntastic_tex_lacheck_checker = 1$/;"	v
g:loaded_syntastic_tex_proselint_checker	bundle/syntastic/syntax_checkers/tex/proselint.vim	/^let g:loaded_syntastic_tex_proselint_checker = 1$/;"	v
g:loaded_syntastic_texinfo_makeinfo_checker	bundle/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^let g:loaded_syntastic_texinfo_makeinfo_checker = 1$/;"	v
g:loaded_syntastic_texinfo_proselint_checker	bundle/syntastic/syntax_checkers/texinfo/proselint.vim	/^let g:loaded_syntastic_texinfo_proselint_checker = 1$/;"	v
g:loaded_syntastic_text_atdtool_checker	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^let g:loaded_syntastic_text_atdtool_checker = 1$/;"	v
g:loaded_syntastic_text_igor_checker	bundle/syntastic/syntax_checkers/text/igor.vim	/^let g:loaded_syntastic_text_igor_checker = 1$/;"	v
g:loaded_syntastic_text_language_check_checker	bundle/syntastic/syntax_checkers/text/language_check.vim	/^let g:loaded_syntastic_text_language_check_checker = 1$/;"	v
g:loaded_syntastic_text_proselint_checker	bundle/syntastic/syntax_checkers/text/proselint.vim	/^let g:loaded_syntastic_text_proselint_checker = 1$/;"	v
g:loaded_syntastic_text_textlint_checker	bundle/syntastic/syntax_checkers/text/textlint.vim	/^let g:loaded_syntastic_text_textlint_checker = 1$/;"	v
g:loaded_syntastic_trig_rapper_checker	bundle/syntastic/syntax_checkers/trig/rapper.vim	/^let g:loaded_syntastic_trig_rapper_checker = 1$/;"	v
g:loaded_syntastic_turtle_rapper_checker	bundle/syntastic/syntax_checkers/turtle/rapper.vim	/^let g:loaded_syntastic_turtle_rapper_checker = 1$/;"	v
g:loaded_syntastic_turtle_ttl_checker	bundle/syntastic/syntax_checkers/turtle/ttl.vim	/^let g:loaded_syntastic_turtle_ttl_checker = 1$/;"	v
g:loaded_syntastic_twig_twiglint_checker	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^let g:loaded_syntastic_twig_twiglint_checker = 1$/;"	v
g:loaded_syntastic_typescript_eslint_checker	bundle/syntastic/syntax_checkers/typescript/eslint.vim	/^let g:loaded_syntastic_typescript_eslint_checker = 1$/;"	v
g:loaded_syntastic_typescript_lynt_checker	bundle/syntastic/syntax_checkers/typescript/lynt.vim	/^let g:loaded_syntastic_typescript_lynt_checker = 1$/;"	v
g:loaded_syntastic_typescript_tslint_checker	bundle/syntastic/syntax_checkers/typescript/tslint.vim	/^let g:loaded_syntastic_typescript_tslint_checker = 1$/;"	v
g:loaded_syntastic_util_autoload	bundle/syntastic/autoload/syntastic/util.vim	/^let g:loaded_syntastic_util_autoload = 1$/;"	v
g:loaded_syntastic_vala_valac_checker	bundle/syntastic/syntax_checkers/vala/valac.vim	/^let g:loaded_syntastic_vala_valac_checker = 1$/;"	v
g:loaded_syntastic_verilog_iverilog_checker	bundle/syntastic/syntax_checkers/verilog/iverilog.vim	/^let g:loaded_syntastic_verilog_iverilog_checker = 1$/;"	v
g:loaded_syntastic_verilog_verilator_checker	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^let g:loaded_syntastic_verilog_verilator_checker = 1$/;"	v
g:loaded_syntastic_vhdl_ghdl_checker	bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^let g:loaded_syntastic_vhdl_ghdl_checker = 1$/;"	v
g:loaded_syntastic_vhdl_vcom_checker	bundle/syntastic/syntax_checkers/vhdl/vcom.vim	/^let g:loaded_syntastic_vhdl_vcom_checker = 1$/;"	v
g:loaded_syntastic_vim_vimlint_checker	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^let g:loaded_syntastic_vim_vimlint_checker = 1$/;"	v
g:loaded_syntastic_vim_vint_checker	bundle/syntastic/syntax_checkers/vim/vint.vim	/^let g:loaded_syntastic_vim_vint_checker = 1$/;"	v
g:loaded_syntastic_vue_eslint_checker	bundle/syntastic/syntax_checkers/vue/eslint.vim	/^let g:loaded_syntastic_vue_eslint_checker = 1$/;"	v
g:loaded_syntastic_vue_pug_lint_vue_checker	bundle/syntastic/syntax_checkers/vue/pug_lint_vue.vim	/^let g:loaded_syntastic_vue_pug_lint_vue_checker = 1$/;"	v
g:loaded_syntastic_xhtml_jshint_checker	bundle/syntastic/syntax_checkers/xhtml/jshint.vim	/^let g:loaded_syntastic_xhtml_jshint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_proselint_checker	bundle/syntastic/syntax_checkers/xhtml/proselint.vim	/^let g:loaded_syntastic_xhtml_proselint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_tidy_checker	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^let g:loaded_syntastic_xhtml_tidy_checker = 1$/;"	v
g:loaded_syntastic_xhtml_validator_checker	bundle/syntastic/syntax_checkers/xhtml/validator.vim	/^let g:loaded_syntastic_xhtml_validator_checker = 1$/;"	v
g:loaded_syntastic_xhtml_w3_checker	bundle/syntastic/syntax_checkers/xhtml/w3.vim	/^let g:loaded_syntastic_xhtml_w3_checker = 1$/;"	v
g:loaded_syntastic_xml_plutil_checker	bundle/syntastic/syntax_checkers/xml/plutil.vim	/^let g:loaded_syntastic_xml_plutil_checker = 1$/;"	v
g:loaded_syntastic_xml_xmllint_checker	bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^let g:loaded_syntastic_xml_xmllint_checker = 1$/;"	v
g:loaded_syntastic_xquery_basex_checker	bundle/syntastic/syntax_checkers/xquery/basex.vim	/^let g:loaded_syntastic_xquery_basex_checker = 1$/;"	v
g:loaded_syntastic_xslt_xmllint_checker	bundle/syntastic/syntax_checkers/xslt/xmllint.vim	/^let g:loaded_syntastic_xslt_xmllint_checker = 1$/;"	v
g:loaded_syntastic_yacc_bison_checker	bundle/syntastic/syntax_checkers/yacc/bison.vim	/^let g:loaded_syntastic_yacc_bison_checker = 1$/;"	v
g:loaded_syntastic_yaml_jsyaml_checker	bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^let g:loaded_syntastic_yaml_jsyaml_checker = 1$/;"	v
g:loaded_syntastic_yaml_yamllint_checker	bundle/syntastic/syntax_checkers/yaml/yamllint.vim	/^let g:loaded_syntastic_yaml_yamllint_checker = 1$/;"	v
g:loaded_syntastic_yaml_yamlxs_checker	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^let g:loaded_syntastic_yaml_yamlxs_checker = 1$/;"	v
g:loaded_syntastic_yang_pyang_checker	bundle/syntastic/syntax_checkers/yang/pyang.vim	/^let g:loaded_syntastic_yang_pyang_checker = 1$/;"	v
g:loaded_syntastic_yara_yarac_checker	bundle/syntastic/syntax_checkers/yara/yara.vim	/^let g:loaded_syntastic_yara_yarac_checker = 1$/;"	v
g:loaded_syntastic_z80_z80syntaxchecker_checker	bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let g:loaded_syntastic_z80_z80syntaxchecker_checker = 1$/;"	v
g:loaded_syntastic_zpt_zptlint_checker	bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^let g:loaded_syntastic_zpt_zptlint_checker = 1$/;"	v
g:loaded_syntastic_zsh_zsh_checker	bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^let g:loaded_syntastic_zsh_zsh_checker = 1$/;"	v
g:loaded_tagbar	bundle/tagbar/autoload/tagbar.vim	/^let g:loaded_tagbar = 1$/;"	v
g:neocomplete#auto_complete_delay	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#auto_complete_delay =$/;"	v
g:neocomplete#auto_completion_start_length	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#auto_completion_start_length =$/;"	v
g:neocomplete#delimiter_patterns	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#delimiter_patterns =$/;"	v
g:neocomplete#disable_auto_complete	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#disable_auto_complete =$/;"	v
g:neocomplete#enable_auto_close_preview	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_auto_close_preview =$/;"	v
g:neocomplete#enable_auto_delimiter	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_auto_delimiter =$/;"	v
g:neocomplete#enable_auto_select	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_auto_select =$/;"	v
g:neocomplete#enable_camel_case	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_camel_case =$/;"	v
g:neocomplete#enable_debug	bundle/neocomplete/plugin/neocomplete.vim	/^let g:neocomplete#enable_debug =$/;"	v
g:neocomplete#enable_fuzzy_completion	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_fuzzy_completion =$/;"	v
g:neocomplete#enable_ignore_case	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_ignore_case =$/;"	v
g:neocomplete#enable_multibyte_completion	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_multibyte_completion =$/;"	v
g:neocomplete#enable_refresh_always	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_refresh_always =$/;"	v
g:neocomplete#enable_smart_case	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_smart_case =$/;"	v
g:neocomplete#fallback_mappings	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#fallback_mappings =$/;"	v
g:neocomplete#force_omni_input_patterns	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#force_omni_input_patterns =$/;"	v
g:neocomplete#ignore_source_files	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#ignore_source_files =$/;"	v
g:neocomplete#keyword_patterns	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#keyword_patterns =$/;"	v
g:neocomplete#lock_buffer_name_pattern	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#lock_buffer_name_pattern =$/;"	v
g:neocomplete#lock_iminsert	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#lock_iminsert =$/;"	v
g:neocomplete#manual_completion_start_length	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#manual_completion_start_length =$/;"	v
g:neocomplete#max_keyword_width	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#max_keyword_width =$/;"	v
g:neocomplete#max_list	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#max_list =$/;"	v
g:neocomplete#min_keyword_length	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#min_keyword_length =$/;"	v
g:neocomplete#release_cache_time	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#release_cache_time =$/;"	v
g:neocomplete#skip_auto_completion_time	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#skip_auto_completion_time =$/;"	v
g:neocomplete#sources	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#sources =$/;"	v
g:neocomplete#sources#buffer#cache_limit_size	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^let g:neocomplete#sources#buffer#cache_limit_size =$/;"	v
g:neocomplete#sources#buffer#disabled_pattern	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^let g:neocomplete#sources#buffer#disabled_pattern =$/;"	v
g:neocomplete#sources#buffer#max_keyword_width	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^let g:neocomplete#sources#buffer#max_keyword_width =$/;"	v
g:neocomplete#sources#dictionary#dictionaries	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^let g:neocomplete#sources#dictionary#dictionaries =$/;"	v
g:neocomplete#sources#member#input_patterns	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^let g:neocomplete#sources#member#input_patterns =$/;"	v
g:neocomplete#sources#member#prefix_patterns	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^let g:neocomplete#sources#member#prefix_patterns =$/;"	v
g:neocomplete#sources#omni#functions	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^let g:neocomplete#sources#omni#functions =$/;"	v
g:neocomplete#sources#omni#input_patterns	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^let g:neocomplete#sources#omni#input_patterns =$/;"	v
g:neocomplete#tags_filter_patterns	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#tags_filter_patterns =$/;"	v
g:neocomplete#text_mode_filetypes	bundle/neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#text_mode_filetypes =$/;"	v
g:rainbow_active	rcs/init.vim	/^let g:rainbow_active = 0 "0 if you want to enable it later via :RainbowToggle 1 to enable by default$/;"	v
g:syntastic_	bundle/syntastic/plugin/syntastic.vim	/^        let g:syntastic_{s:key} = copy(g:_SYNTASTIC_DEFAULTS[s:key])$/;"	v
g:syntastic_ada_compiler_options	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^    let g:syntastic_ada_compiler_options = ''$/;"	v
g:syntastic_apiblueprint_drafter_sort	bundle/syntastic/syntax_checkers/apiblueprint/drafter.vim	/^    let g:syntastic_apiblueprint_drafter_sort = 1$/;"	v
g:syntastic_asm_compiler_options	bundle/syntastic/syntax_checkers/asm/gcc.vim	/^    let g:syntastic_asm_compiler_options = ''$/;"	v
g:syntastic_asm_generic	bundle/syntastic/syntax_checkers/asm/gcc.vim	/^    let g:syntastic_asm_generic = 0$/;"	v
g:syntastic_c_clang_check_sort	bundle/syntastic/syntax_checkers/c/clang_check.vim	/^    let g:syntastic_c_clang_check_sort = 1$/;"	v
g:syntastic_c_clang_tidy_sort	bundle/syntastic/syntax_checkers/c/clang_tidy.vim	/^    let g:syntastic_c_clang_tidy_sort = 1$/;"	v
g:syntastic_c_compiler_options	bundle/syntastic/syntax_checkers/c/gcc.vim	/^    let g:syntastic_c_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_c_flawfinder_sort	bundle/syntastic/syntax_checkers/c/flawfinder.vim	/^    let g:syntastic_c_flawfinder_sort = 1$/;"	v
g:syntastic_c_flawfinder_thres	bundle/syntastic/syntax_checkers/c/flawfinder.vim	/^    let g:syntastic_c_flawfinder_thres = 3$/;"	v
g:syntastic_c_oclint_sort	bundle/syntastic/syntax_checkers/c/oclint.vim	/^    let g:syntastic_c_oclint_sort = 1$/;"	v
g:syntastic_cobol_compiler_options	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^    let g:syntastic_cobol_compiler_options = ''$/;"	v
g:syntastic_cpp_compiler_options	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^    let g:syntastic_cpp_compiler_options = ''$/;"	v
g:syntastic_cpp_cpplint_thres	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^    let g:syntastic_cpp_cpplint_thres = 5$/;"	v
g:syntastic_cpp_flawfinder_thres	bundle/syntastic/syntax_checkers/cpp/flawfinder.vim	/^    let g:syntastic_cpp_flawfinder_thres = 3$/;"	v
g:syntastic_css_prettycss_sort	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^    let g:syntastic_css_prettycss_sort = 1$/;"	v
g:syntastic_d_compiler_options	bundle/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_compiler_options = ''$/;"	v
g:syntastic_d_dub_exec	bundle/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_dub_exec = 'dub'$/;"	v
g:syntastic_d_use_dub	bundle/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_use_dub = 1$/;"	v
g:syntastic_enable_balloons	bundle/syntastic/plugin/syntastic/balloons.vim	/^    let g:syntastic_enable_balloons = 0$/;"	v
g:syntastic_erlc_include_path	bundle/syntastic/syntax_checkers/erlang/escript.vim	/^    let g:syntastic_erlc_include_path = ''$/;"	v
g:syntastic_fortran_compiler_options	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^    let g:syntastic_fortran_compiler_options = ''$/;"	v
g:syntastic_haskell_scan_sort	bundle/syntastic/syntax_checkers/haskell/scan.vim	/^    let g:syntastic_haskell_scan_sort = 1$/;"	v
g:syntastic_html_tidy_blocklevel_tags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_blocklevel_tags = []$/;"	v
g:syntastic_html_tidy_empty_tags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_empty_tags = []$/;"	v
g:syntastic_html_tidy_ignore_errors	bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_ignore_errors = []$/;"	v
g:syntastic_html_tidy_inline_tags	bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_inline_tags = []$/;"	v
g:syntastic_java_checkstyle_classpath	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_classpath = 'checkstyle-6.10.1-all.jar'$/;"	v
g:syntastic_java_checkstyle_conf_file	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_conf_file = 'sun_checks.xml'$/;"	v
g:syntastic_java_javac_autoload_maven_classpath	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_autoload_maven_classpath = 1$/;"	v
g:syntastic_java_javac_classpath	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_classpath = ''$/;"	v
g:syntastic_java_javac_config_file	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file = '.syntastic_javac_config'$/;"	v
g:syntastic_java_javac_config_file_enabled	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file_enabled = 0$/;"	v
g:syntastic_java_javac_custom_classpath_command	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_custom_classpath_command = ''$/;"	v
g:syntastic_java_javac_delete_output	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_delete_output = 1$/;"	v
g:syntastic_java_javac_executable	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_executable = 'javac'$/;"	v
g:syntastic_java_javac_maven_pom_classpath	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_classpath = {}$/;"	v
g:syntastic_java_javac_maven_pom_ftime	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_ftime = {}$/;"	v
g:syntastic_java_javac_maven_pom_properties	bundle/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_properties = {}$/;"	v
g:syntastic_java_javac_maven_pom_tags	bundle/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_tags = ['build', 'properties']$/;"	v
g:syntastic_java_javac_options	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_options = '-Xlint'$/;"	v
g:syntastic_java_maven_executable	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_maven_executable = 'mvn'$/;"	v
g:syntastic_java_maven_options	bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_maven_options = ''$/;"	v
g:syntastic_javascript_eslint_generic	bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^    let g:syntastic_javascript_eslint_generic = 0$/;"	v
g:syntastic_javascript_eslint_sort	bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^    let g:syntastic_javascript_eslint_sort = 1$/;"	v
g:syntastic_javascript_flow_sort	bundle/syntastic/syntax_checkers/javascript/flow.vim	/^    let g:syntastic_javascript_flow_sort = 1$/;"	v
g:syntastic_javascript_jscs_sort	bundle/syntastic/syntax_checkers/javascript/jscs.vim	/^    let g:syntastic_javascript_jscs_sort = 1$/;"	v
g:syntastic_javascript_jshint_sort	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^    let g:syntastic_javascript_jshint_sort = 1$/;"	v
g:syntastic_javascript_standard_generic	bundle/syntastic/syntax_checkers/javascript/standard.vim	/^    let g:syntastic_javascript_standard_generic = 0$/;"	v
g:syntastic_less_use_less_lint	bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_use_less_lint = 0$/;"	v
g:syntastic_markdown_mdl_sort	bundle/syntastic/syntax_checkers/markdown/mdl.vim	/^    let g:syntastic_markdown_mdl_sort = 1$/;"	v
g:syntastic_objc_compiler_options	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^    let g:syntastic_objc_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_objcpp_compiler_options	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^    let g:syntastic_objcpp_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_ocaml_janestreet_core_dir	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_janestreet_core_dir = '.'$/;"	v
g:syntastic_ocaml_use_janestreet_core	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_janestreet_core = 0$/;"	v
g:syntastic_ocaml_use_ocamlbuild	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlbuild = 0$/;"	v
g:syntastic_ocaml_use_ocamlc	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlc = 0$/;"	v
g:syntastic_perl6_lib_path	bundle/syntastic/syntax_checkers/perl6/perl6.vim	/^    let g:syntastic_perl6_lib_path = []$/;"	v
g:syntastic_perl6_perl6_sort	bundle/syntastic/syntax_checkers/perl6/perl6.vim	/^    let g:syntastic_perl6_perl6_sort = 1$/;"	v
g:syntastic_perl_lib_path	bundle/syntastic/syntax_checkers/perl/perl.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_lib_path	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_perlcritic_thres	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^    let g:syntastic_perl_perlcritic_thres = 5$/;"	v
g:syntastic_python_prospector_sort	bundle/syntastic/syntax_checkers/python/prospector.vim	/^    let g:syntastic_python_prospector_sort = 1$/;"	v
g:syntastic_python_pylama_sort	bundle/syntastic/syntax_checkers/python/pylama.vim	/^    let g:syntastic_python_pylama_sort = 1$/;"	v
g:syntastic_python_pylint_sort	bundle/syntastic/syntax_checkers/python/pylint.vim	/^    let g:syntastic_python_pylint_sort = 1$/;"	v
g:syntastic_python_python_use_codec	bundle/syntastic/syntax_checkers/python/python.vim	/^    let g:syntastic_python_python_use_codec = 0$/;"	v
g:syntastic_quiet_messages	bundle/syntastic/plugin/syntastic.vim	/^        let g:syntastic_quiet_messages['type'] = s:quiet_warnings$/;"	v
g:syntastic_r_lint_sort	bundle/syntastic/syntax_checkers/r/lint.vim	/^    let g:syntastic_r_lint_sort = 1$/;"	v
g:syntastic_r_lint_styles	bundle/syntastic/syntax_checkers/r/lint.vim	/^    let g:syntastic_r_lint_styles = 'lint.style'$/;"	v
g:syntastic_r_lintr_cache	bundle/syntastic/syntax_checkers/r/lintr.vim	/^    let g:syntastic_r_lintr_cache = 'FALSE'$/;"	v
g:syntastic_r_lintr_linters	bundle/syntastic/syntax_checkers/r/lintr.vim	/^    let g:syntastic_r_lintr_linters = 'default_linters'$/;"	v
g:syntastic_r_svtools_styles	bundle/syntastic/syntax_checkers/r/svtools.vim	/^    let g:syntastic_r_svtools_styles = 'lint.style'$/;"	v
g:syntastic_racket_code_ayatollah_script	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^    let g:syntastic_racket_code_ayatollah_script = 'code-ayatollah.rkt'$/;"	v
g:syntastic_racket_code_ayatollah_sort	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^    let g:syntastic_racket_code_ayatollah_sort = 1$/;"	v
g:syntastic_ruby_flog_sort	bundle/syntastic/syntax_checkers/ruby/flog.vim	/^    let g:syntastic_ruby_flog_sort = 1$/;"	v
g:syntastic_ruby_flog_threshold_error	bundle/syntastic/syntax_checkers/ruby/flog.vim	/^    let g:syntastic_ruby_flog_threshold_error = 90$/;"	v
g:syntastic_ruby_flog_threshold_warning	bundle/syntastic/syntax_checkers/ruby/flog.vim	/^    let g:syntastic_ruby_flog_threshold_warning = 45$/;"	v
g:syntastic_sass_check_partials	bundle/syntastic/syntax_checkers/sass/sass.vim	/^    let g:syntastic_sass_check_partials = 0$/;"	v
g:syntastic_scala_scalastyle_config_file	bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^    let g:syntastic_scala_scalastyle_config_file = 'scalastyle_config.xml'$/;"	v
g:syntastic_scala_scalastyle_jar	bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^    let g:syntastic_scala_scalastyle_jar = 'scalastyle-batch_2.10.jar'$/;"	v
g:syntastic_shell	bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_shell = &shell$/;"	v
g:syntastic_sql_tsqllint_sort	bundle/syntastic/syntax_checkers/sql/tsqllint.vim	/^    let g:syntastic_sql_tsqllint_sort = 1$/;"	v
g:syntastic_tex_chktex_showmsgs	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^    let g:syntastic_tex_chktex_showmsgs = 1$/;"	v
g:syntastic_tex_chktex_sort	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^    let g:syntastic_tex_chktex_sort = 1$/;"	v
g:syntastic_text_atdtool_sort	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^    let g:syntastic_text_atdtool_sort = 1$/;"	v
g:syntastic_text_proselint_sort	bundle/syntastic/syntax_checkers/text/proselint.vim	/^    let g:syntastic_text_proselint_sort = 1$/;"	v
g:syntastic_typescript_tslint_sort	bundle/syntastic/syntax_checkers/typescript/tslint.vim	/^    let g:syntastic_typescript_tslint_sort = 1$/;"	v
g:syntastic_verilog_compiler_options	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^    let g:syntastic_verilog_compiler_options = '-Wall'$/;"	v
g:syntastic_version	bundle/syntastic/plugin/syntastic.vim	/^let g:syntastic_version =$/;"	v
g:syntastic_vim_vint_sort	bundle/syntastic/syntax_checkers/vim/vint.vim	/^    let g:syntastic_vim_vint_sort = 1$/;"	v
g:syntastic_xhtml_tidy_ignore_errors	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^    let g:syntastic_xhtml_tidy_ignore_errors = []$/;"	v
g:tagbar#icon_closed	bundle/tagbar/autoload/tagbar.vim	/^let g:tagbar#icon_closed = g:tagbar_iconchars[0]$/;"	v
g:tagbar#icon_open	bundle/tagbar/autoload/tagbar.vim	/^let g:tagbar#icon_open   = g:tagbar_iconchars[1]$/;"	v
g:tagbar_iconchars	bundle/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['+', '-']$/;"	v
g:tagbar_iconchars	bundle/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['▶', '▼']$/;"	v
g:tagbar_type_scala	bundle/vim-scala/ftplugin/scala/tagbar.vim	/^  let g:tagbar_type_scala.deffile = expand('<sfile>:p:h:h:h') . '\/ctags\/scala.ctags'$/;"	v
g:tagbar_type_scala	bundle/vim-scala/ftplugin/scala/tagbar.vim	/^let g:tagbar_type_scala = {$/;"	v
g:tagbar_type_scala	rcs/init.vim	/^let g:tagbar_type_scala = {$/;"	v
g:toggle_list_no_mappings	rcs/init.vim	/^let g:toggle_list_no_mappings = 1$/;"	v
g:user_emmet_leader_key	bundle/emmet-vim/plugin/emmet.vim	/^  let g:user_emmet_leader_key = '<c-y>'$/;"	v
gd	rcs/init.vim	/^nnoremap <silent> gd :call LanguageClient_textDocument_definition()<CR>$/;"	m
generate_wildignore_options	bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:generate_wildignore_options() abort$/;"	f
get	bundle/tagbar/autoload/tagbar/state.vim	/^function! s:get() abort$/;"	f
getChildren	bundle/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:getChildren() dict abort$/;"	f
getChildrenByName	bundle/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:getChildrenByName(tagname) dict abort$/;"	f
getClosedParentTline	bundle/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:getClosedParentTline() abort dict$/;"	f
getKind	bundle/tagbar/autoload/tagbar/prototypes/typeinfo.vim	/^function! s:getKind(kind) abort dict$/;"	f
getPrototype	bundle/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:getPrototype(short) abort dict$/;"	f
getPrototype	bundle/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:getPrototype(short) abort dict$/;"	f
getPrototype	bundle/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:getPrototype(short) abort dict$/;"	f
getTags	bundle/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:getTags() dict abort$/;"	f
getTagsByName	bundle/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:getTagsByName(tagname) dict abort$/;"	f
get_candidates	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:get_candidates(complete_results, complete_pos, complete_str) abort "{{{$/;"	f
get_complete_pos	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:get_complete_pos(complete_results) abort "{{{$/;"	f
get_convert_candidates	bundle/neocomplete/autoload/neocomplete/filters/converter_case.vim	/^function! s:get_convert_candidates(candidates) abort$/;"	f
get_ctags_executable	bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:get_ctags_executable(proj_dir) abort$/;"	f
get_current_origin_url	bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:get_current_origin_url(bundle) abort$/;"	f
get_current_sha	bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:get_current_sha(bundle)$/;"	f
get_glob_files	bundle/neocomplete/autoload/neocomplete/sources/file.vim	/^function! s:get_glob_files(complete_str, path) abort "{{{$/;"	f
get_last_status	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^function! s:get_last_status() abort$/;"	f
get_list	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! s:get_list() abort "{{{$/;"	f
get_map_str	bundle/tagbar/autoload/tagbar.vim	/^function! s:get_map_str(map) abort$/;"	f
get_member_list	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:get_member_list(context, cur_text, var_name) abort "{{{$/;"	f
get_member_pattern	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:get_member_pattern(filetype) abort "{{{$/;"	f
get_omni_funcs	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:get_omni_funcs(filetype) abort "{{{$/;"	f
get_omni_list	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:get_omni_list(list) abort "{{{$/;"	f
get_prelude	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! s:get_prelude() abort "{{{$/;"	f
get_process	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! s:get_process() abort "{{{$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(Dir) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["src" | Tail], _Path) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["src", _Appname, "apps" | Tail], _Path) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["test" | Tail], _Path) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([], Path) ->$/;"	f
get_root	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([_ | Tail], Path) ->$/;"	f
get_sources_list	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:get_sources_list(context) abort "{{{$/;"	f
get_sources_list	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:get_sources_list(context) abort "{{{$/;"	f
get_string	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! s:get_string() abort "{{{$/;"	f
getchar	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
getchar_safe	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
getfilename	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^function! s:getfilename(cache_dir, filename) abort$/;"	f
gettime	bundle/tagbar/autoload/tagbar/debug.vim	/^    function! s:gettime() abort$/;"	f
glob	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
globpath	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^  function! s:globpath(path, expr) abort$/;"	f
goto_markedwin	bundle/tagbar/autoload/tagbar.vim	/^function! s:goto_markedwin(...) abort$/;"	f
goto_tagbar	bundle/tagbar/autoload/tagbar.vim	/^function! s:goto_tagbar(...) abort$/;"	f
goto_win	bundle/tagbar/autoload/tagbar.vim	/^function! s:goto_win(winnr, ...) abort$/;"	f
group_by	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
gsub	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
gutentags#add_job	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#add_job(module, tags_file, data) abort$/;"	f
gutentags#build_default_job_options	bundle/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#build_default_job_options(module) abort$/;"	f
gutentags#chdir	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#chdir(path)$/;"	f
gutentags#cscope#generate	bundle/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#cscope#init	bundle/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#init(project_root) abort$/;"	f
gutentags#cscope#on_job_exit	bundle/vim-gutentags/autoload/gutentags/cscope.vim	/^function! gutentags#cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#ctags#generate	bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#ctags#init	bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#init(project_root) abort$/;"	f
gutentags#ctags#on_job_exit	bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^function! gutentags#ctags#on_job_exit(job, exit_val) abort$/;"	f
gutentags#default_get_project_root	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_get_project_root(path) abort$/;"	f
gutentags#default_io_cb	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#default_io_cb(chan, msg) abort$/;"	f
gutentags#error	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#error(message)$/;"	f
gutentags#fake	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#fake(...)$/;"	f
gutentags#find_job_index_by_data	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_data(module, data) abort$/;"	f
gutentags#find_job_index_by_tags_file	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#find_job_index_by_tags_file(module, tags_file) abort$/;"	f
gutentags#get_cachefile	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_cachefile(root_dir, filename) abort$/;"	f
gutentags#get_job_data	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_data(module, job_idx) abort$/;"	f
gutentags#get_job_tags_file	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_job_tags_file(module, job_idx) abort$/;"	f
gutentags#get_plat_file	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_plat_file(filename) abort$/;"	f
gutentags#get_project_file_list_cmd	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_file_list_cmd(path) abort$/;"	f
gutentags#get_project_info	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_info(path) abort$/;"	f
gutentags#get_project_root	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_project_root(path) abort$/;"	f
gutentags#get_res_file	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#get_res_file(filename) abort$/;"	f
gutentags#gtags_cscope#generate	bundle/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#generate(proj_dir, tags_file, gen_opts) abort$/;"	f
gutentags#gtags_cscope#init	bundle/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#init(project_root) abort$/;"	f
gutentags#gtags_cscope#on_job_exit	bundle/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^function! gutentags#gtags_cscope#on_job_exit(job, exit_val) abort$/;"	f
gutentags#inprogress	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#inprogress()$/;"	f
gutentags#is_path_rooted	bundle/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#is_path_rooted(path) abort$/;"	f
gutentags#make_args	bundle/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#make_args(cmd) abort$/;"	f
gutentags#normalizepath	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#normalizepath(path)$/;"	f
gutentags#remove_job	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job(module, job_idx) abort$/;"	f
gutentags#remove_job_by_data	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#remove_job_by_data(module, data) abort$/;"	f
gutentags#rescan	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#rescan(...)$/;"	f
gutentags#setup_gutentags	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#setup_gutentags() abort$/;"	f
gutentags#shellslash	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#shellslash(path)$/;"	f
gutentags#start_job	bundle/vim-gutentags/autoload/gutentags.vim	/^    function! gutentags#start_job(cmd, opts) abort$/;"	f
gutentags#statusline	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline(...) abort$/;"	f
gutentags#statusline_cb	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#statusline_cb(fmt_cb, ...) abort$/;"	f
gutentags#stripslash	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#stripslash(path)$/;"	f
gutentags#throw	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#throw(message)$/;"	f
gutentags#toggletrace	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#toggletrace(...)$/;"	f
gutentags#trace	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#trace(message, ...)$/;"	f
gutentags#validate_cmd	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#validate_cmd(cmd) abort$/;"	f
gutentags#warning	bundle/vim-gutentags/autoload/gutentags.vim	/^function! gutentags#warning(message)$/;"	f
gutentags_detect	bundle/vim-gutentags/plugin/gutentags.vim	/^augroup gutentags_detect$/;"	a
handleLeftClick	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleLeftClick()$/;"	f
handleMiddleMouse	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleMiddleMouse()$/;"	f
has	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
has_common_items	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
has_doc	bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:has_doc(rtp) abort$/;"	f
has_index	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
has_vimproc	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^function! s:has_vimproc() abort$/;"	f
hash	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:hash(str) abort$/;"	f
helptags	bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:helptags(rtp) abort$/;"	f
iconv	bundle/neocomplete/autoload/neocomplete/async_cache.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
iconv	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
iconv	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
import	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:import(name, ...) abort dict$/;"	f
indent_current_line	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! s:indent_current_line() abort "{{{$/;"	f
init	bundle/Vundle.vim/test/files/test.erl	/^init(_) ->$/;"	f	module:mmc_logmon_sup
initCustomOpenArgs	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:initCustomOpenArgs()$/;"	f
initFoldState	bundle/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:initFoldState(known_files) abort dict$/;"	f
initVariable	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
init_var	bundle/tagbar/plugin/tagbar.vim	/^function! s:init_var(var, value) abort$/;"	f
initialize_source	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:initialize_source(srcname) abort "{{{$/;"	f
initialize_source	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:initialize_source(srcname, filetype) abort "{{{$/;"	f
initialize_tags	bundle/neocomplete/autoload/neocomplete/sources/tag.vim	/^function! s:initialize_tags(filename) abort "{{{$/;"	f
inputPrompt	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:inputPrompt(action)$/;"	f
input_helper	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
input_safe	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
input_value	conf/testdir/cppex.cpp	/^        void input_value()$/;"	f	class:programming
install_plugin	bundle/emmet-vim/plugin/emmet.vim	/^function! s:install_plugin(mode, buffer)$/;"	f
intersect	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
isFoldable	bundle/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isFoldable() abort dict$/;"	f
isFoldable	bundle/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:isFoldable() abort dict$/;"	f
isFolded	bundle/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isFolded() abort dict$/;"	f
isFolded	bundle/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:isFolded() abort dict$/;"	f
isKindheader	bundle/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isKindheader() abort dict$/;"	f
isKindheader	bundle/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:isKindheader() abort dict$/;"	f
isNormalTag	bundle/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isNormalTag() abort dict$/;"	f
isNormalTag	bundle/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:isNormalTag() abort dict$/;"	f
isPseudoTag	bundle/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isPseudoTag() abort dict$/;"	f
isPseudoTag	bundle/tagbar/autoload/tagbar/prototypes/pseudotag.vim	/^function! s:isPseudoTag() abort dict$/;"	f
isSplitTag	bundle/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isSplitTag() abort dict$/;"	f
isSplitTag	bundle/tagbar/autoload/tagbar/prototypes/splittag.vim	/^function! s:isSplitTag() abort dict$/;"	f
is_cygwin	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
is_delimiter	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! s:is_delimiter() abort "{{{$/;"	f
is_dict	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
is_float	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
is_funcref	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
is_list	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
is_mac	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_mac() abort$/;"	f
is_number	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
is_numeric	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
is_skip_auto_complete	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! s:is_skip_auto_complete(cur_text) abort "{{{$/;"	f
is_string	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
is_unix	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_unix() abort$/;"	f
is_windows	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_windows() abort$/;"	f
issetBit	conf/testdir/bitwise.c	/^int issetBit(unsigned int field, int n)$/;"	f
itemno	bundle/emmet-vim/autoload/emmet.vim	/^function! s:itemno(itemno, current) abort$/;"	f
jQuery.browser.version	bundle/emmet-vim/docs/static/js/jquery-latest.js	/^	version: (userAgent.match( \/.+(?:rv|it|ra|ie)[\\\/: ]([\\d.]+)\/ ) || [])[1],$/;"	p
jQuery.fn.init	bundle/emmet-vim/docs/static/js/jquery-latest.js	/^jQuery.fn.init.prototype = jQuery.fn;$/;"	c
join_posix_lines	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:join_posix_lines(lines, ...) abort$/;"	f
jumpToChild	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToChild(node, last)$/;"	f
jumpToFirstChild	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToFirstChild(node)$/;"	f
jumpToLastChild	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToLastChild(node)$/;"	f
jumpToNextSibling	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToNextSibling(node)$/;"	f
jumpToParent	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToParent(node)$/;"	f
jumpToPrevSibling	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToPrevSibling(node)$/;"	f
jumpToRoot	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToRoot()$/;"	f
jumpToSibling	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToSibling(node, forward)$/;"	f
justify_equal_spacing	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
known_files.get	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.get(fname) abort dict$/;"	f
known_files.has	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.has(fname) abort dict$/;"	f
known_files.put	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.put(fileinfo, ...) abort dict$/;"	f
known_files.rm	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.rm(fname) abort dict$/;"	f
levenshtein_distance	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
linechars	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
lines	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:lines(str) abort$/;"	f
load	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:load(...) abort dict$/;"	f
load_from_file	bundle/neocomplete/autoload/neocomplete/async_cache.vim	/^function! s:load_from_file(filename, pattern_file_name, mark, minlen, fileencoding, is_string) abort "{{{$/;"	f
load_from_tags	bundle/neocomplete/autoload/neocomplete/async_cache.vim	/^function! s:load_from_tags(filename, pattern_file_name, mark, minlen, fileencoding) abort "{{{$/;"	f
load_scripts	bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! s:load_scripts(bang)$/;"	f
loaded_nerd_tree	bundle/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
localvar	bundle/emmet-vim/autoload/emmet.vim	/^function! s:localvar(current, key) abort$/;"	f
log	bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:log(str, ...) abort$/;"	f
log	bundle/emmet-vim/unittest.vim	/^function! s:log(msg)$/;"	f
logn	bundle/emmet-vim/unittest.vim	/^function! s:logn(msg)$/;"	f
main	bundle/neocomplete/autoload/neocomplete/async_cache.vim	/^function! s:main(argv) abort "{{{$/;"	f
main	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main([File]) ->$/;"	f
main	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main(_) ->$/;"	f
main	conf/testdir/bitwise.c	/^int main(void)$/;"	f
main	conf/testdir/cppex.cpp	/^int main(void)$/;"	f
main_syntax	bundle/vim-scala/syntax/scala.vim	/^  let main_syntax = 'scala'$/;"	v
make_cache	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^function! s:make_cache(filetype) abort "{{{$/;"	f
make_cache_buffer	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:make_cache_buffer(srcname) abort "{{{$/;"	f
make_cache_current_buffer	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:make_cache_current_buffer(start, end) abort "{{{$/;"	f
make_cache_current_buffer	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:make_cache_current_buffer(start, end) abort "{{{$/;"	f
make_cache_current_line	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! s:make_cache_current_line() abort "{{{$/;"	f
make_cache_file	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:make_cache_file(srcname) abort "{{{$/;"	f
make_cache_lines	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:make_cache_lines(srcname, filetype, lines) abort "{{{$/;"	f
make_sync_command	bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:make_sync_command(bang, bundle) abort$/;"	f
make_term	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^make_term(Str) ->$/;"	f
manual_update_tags	bundle/vim-gutentags/autoload/gutentags.vim	/^function! s:manual_update_tags(bang) abort$/;"	f
map_accum	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
mapleader	rcs/init.vim	/^let mapleader = " "$/;"	v
mark_window	bundle/tagbar/autoload/tagbar.vim	/^function! s:mark_window() abort$/;"	f
match	bundle/syntastic/syntax_checkers/python/codec.py	/^        match = re.match(r"#\\s*coding\\s*:\\s*(?P<coding>\\w+)", text[0])$/;"	v
matcher.filter	bundle/neocomplete/autoload/neocomplete/filters/matcher_fuzzy.vim	/^function! s:matcher.filter(context) abort "{{{$/;"	f
matcher.filter	bundle/neocomplete/autoload/neocomplete/filters/matcher_head.vim	/^function! s:matcher.filter(context) abort "{{{$/;"	f
matcher.filter	bundle/neocomplete/autoload/neocomplete/filters/matcher_length.vim	/^function! s:matcher.filter(context) abort "{{{$/;"	f
matcher.filter	bundle/neocomplete/autoload/neocomplete/filters/matcher_nothing.vim	/^function! s:matcher.filter(context) abort "{{{$/;"	f
max_by	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
min_by	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
mkmask	conf/testdir/bitwise.c	/^unsigned int mkmask(int n)$/;"	f
mmc_logmon_sup	bundle/Vundle.vim/test/files/test.erl	/^-module(mmc_logmon_sup).$/;"	m
neocomplete	bundle/neocomplete/plugin/neocomplete.vim	/^  augroup neocomplete$/;"	a
neocomplete#async_cache#main	bundle/neocomplete/autoload/neocomplete/async_cache.vim	/^  function! neocomplete#async_cache#main(argv) abort "{{{$/;"	f
neocomplete#available_sources	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#available_sources() abort "{{{$/;"	f
neocomplete#cache#async_load_from_file	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#async_load_from_file(cache_dir, filename, pattern, mark) abort "{{{$/;"	f
neocomplete#cache#async_load_from_tags	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#async_load_from_tags(cache_dir, filename, filetype, pattern, mark) abort "{{{$/;"	f
neocomplete#cache#check_cache	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#check_cache(cache_dir, key, async_cache_dictionary, keyword_cache, is_string) abort "{{{$/;"	f
neocomplete#cache#check_old_cache	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#check_old_cache(cache_dir, filename) abort "{{{$/;"	f
neocomplete#cache#encode_name	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#encode_name(cache_dir, filename) abort$/;"	f
neocomplete#cache#filereadable	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#filereadable(cache_dir, filename) abort "{{{$/;"	f
neocomplete#cache#get_cache_list	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#get_cache_list(cache_dir, async_cache_list) abort "{{{$/;"	f
neocomplete#cache#getfilename	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#getfilename(cache_dir, filename) abort "{{{$/;"	f
neocomplete#cache#load_from_cache	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#load_from_cache(cache_dir, filename, ...) abort "{{{$/;"	f
neocomplete#cache#make_directory	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#make_directory(directory) abort "{{{$/;"	f
neocomplete#cache#readfile	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#readfile(cache_dir, filename) abort "{{{$/;"	f
neocomplete#cache#save_cache	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#save_cache(cache_dir, filename, keyword_list) abort "{{{$/;"	f
neocomplete#cache#writefile	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#writefile(cache_dir, filename, list) abort "{{{$/;"	f
neocomplete#cancel_popup	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#cancel_popup() abort$/;"	f
neocomplete#close_popup	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#close_popup() abort$/;"	f
neocomplete#commands#_clean	bundle/neocomplete/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_clean() abort "{{{$/;"	f
neocomplete#commands#_initialize	bundle/neocomplete/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_initialize() abort "{{{$/;"	f
neocomplete#commands#_lock	bundle/neocomplete/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_lock() abort "{{{$/;"	f
neocomplete#commands#_set_file_type	bundle/neocomplete/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_set_file_type(filetype) abort "{{{$/;"	f
neocomplete#commands#_toggle_lock	bundle/neocomplete/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_toggle_lock() abort "{{{$/;"	f
neocomplete#commands#_unlock	bundle/neocomplete/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_unlock() abort "{{{$/;"	f
neocomplete#complete#_check_previous_position	bundle/neocomplete/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_check_previous_position(cur_text, complete_pos) abort "{{{$/;"	f
neocomplete#complete#_get_complete_pos	bundle/neocomplete/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_get_complete_pos(sources) abort "{{{$/;"	f
neocomplete#complete#_get_results	bundle/neocomplete/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_get_results(cur_text, ...) abort "{{{$/;"	f
neocomplete#complete#_get_words	bundle/neocomplete/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_get_words(sources, complete_pos, complete_str) abort "{{{$/;"	f
neocomplete#complete#_set_previous_position	bundle/neocomplete/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_set_previous_position(cur_text, complete_pos) abort "{{{$/;"	f
neocomplete#complete#_set_results_pos	bundle/neocomplete/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_set_results_pos(cur_text, ...) abort "{{{$/;"	f
neocomplete#complete#_set_results_words	bundle/neocomplete/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_set_results_words(sources) abort "{{{$/;"	f
neocomplete#complete_check	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#complete_check() abort "{{{$/;"	f
neocomplete#complete_common_string	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#complete_common_string() abort$/;"	f
neocomplete#context_filetype#filetypes	bundle/neocomplete/autoload/neocomplete/context_filetype.vim	/^function! neocomplete#context_filetype#filetypes() abort "{{{$/;"	f
neocomplete#context_filetype#get	bundle/neocomplete/autoload/neocomplete/context_filetype.vim	/^function! neocomplete#context_filetype#get(filetype) abort "{{{$/;"	f
neocomplete#context_filetype#set	bundle/neocomplete/autoload/neocomplete/context_filetype.vim	/^function! neocomplete#context_filetype#set() abort "{{{$/;"	f
neocomplete#custom#get	bundle/neocomplete/autoload/neocomplete/custom.vim	/^function! neocomplete#custom#get() abort "{{{$/;"	f
neocomplete#custom#source	bundle/neocomplete/autoload/neocomplete/custom.vim	/^function! neocomplete#custom#source(source_name, option_name, value) abort "{{{$/;"	f
neocomplete#custom_source	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#custom_source(source_name, option_name, value) abort "{{{$/;"	f
neocomplete#define_filter	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#define_filter(filter) abort "{{{$/;"	f
neocomplete#define_source	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#define_source(source) abort "{{{$/;"	f
neocomplete#disable_default_dictionary	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#disable_default_dictionary(variable) abort "{{{$/;"	f
neocomplete#dup_filter	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#dup_filter(list) abort "{{{$/;"	f
neocomplete#escape_match	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#escape_match(str) abort "{{{$/;"	f
neocomplete#exists_echodoc	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#exists_echodoc() abort "{{{$/;"	f
neocomplete#filetype_complete	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#filetype_complete(arglead, cmdline, cursorpos) abort "{{{$/;"	f
neocomplete#filters#converter_abbr#define	bundle/neocomplete/autoload/neocomplete/filters/converter_abbr.vim	/^function! neocomplete#filters#converter_abbr#define() abort "{{{$/;"	f
neocomplete#filters#converter_add_paren#define	bundle/neocomplete/autoload/neocomplete/filters/converter_add_paren.vim	/^function! neocomplete#filters#converter_add_paren#define() abort "{{{$/;"	f
neocomplete#filters#converter_case#define	bundle/neocomplete/autoload/neocomplete/filters/converter_case.vim	/^function! neocomplete#filters#converter_case#define() abort "{{{$/;"	f
neocomplete#filters#converter_delimiter#define	bundle/neocomplete/autoload/neocomplete/filters/converter_delimiter.vim	/^function! neocomplete#filters#converter_delimiter#define() abort "{{{$/;"	f
neocomplete#filters#converter_disable_abbr#define	bundle/neocomplete/autoload/neocomplete/filters/converter_disable_abbr.vim	/^function! neocomplete#filters#converter_disable_abbr#define() abort "{{{$/;"	f
neocomplete#filters#converter_remove_last_paren#define	bundle/neocomplete/autoload/neocomplete/filters/converter_remove_last_paren.vim	/^function! neocomplete#filters#converter_remove_last_paren#define() abort "{{{$/;"	f
neocomplete#filters#converter_remove_overlap#define	bundle/neocomplete/autoload/neocomplete/filters/converter_remove_overlap.vim	/^function! neocomplete#filters#converter_remove_overlap#define() abort "{{{$/;"	f
neocomplete#filters#converter_remove_overlap#length	bundle/neocomplete/autoload/neocomplete/filters/converter_remove_overlap.vim	/^function! neocomplete#filters#converter_remove_overlap#length(left, right) abort "{{{$/;"	f
neocomplete#filters#escape	bundle/neocomplete/autoload/neocomplete/filters.vim	/^function! neocomplete#filters#escape(string) abort "{{{$/;"	f
neocomplete#filters#fuzzy_escape	bundle/neocomplete/autoload/neocomplete/filters.vim	/^function! neocomplete#filters#fuzzy_escape(string) abort "{{{$/;"	f
neocomplete#filters#matcher_fuzzy#define	bundle/neocomplete/autoload/neocomplete/filters/matcher_fuzzy.vim	/^function! neocomplete#filters#matcher_fuzzy#define() abort "{{{$/;"	f
neocomplete#filters#matcher_head#define	bundle/neocomplete/autoload/neocomplete/filters/matcher_head.vim	/^function! neocomplete#filters#matcher_head#define() abort "{{{$/;"	f
neocomplete#filters#matcher_length#define	bundle/neocomplete/autoload/neocomplete/filters/matcher_length.vim	/^function! neocomplete#filters#matcher_length#define() abort "{{{$/;"	f
neocomplete#filters#matcher_nothing#define	bundle/neocomplete/autoload/neocomplete/filters/matcher_nothing.vim	/^function! neocomplete#filters#matcher_nothing#define() abort "{{{$/;"	f
neocomplete#filters#sorter_filename#define	bundle/neocomplete/autoload/neocomplete/filters/sorter_filename.vim	/^function! neocomplete#filters#sorter_filename#define() abort "{{{$/;"	f
neocomplete#filters#sorter_length#define	bundle/neocomplete/autoload/neocomplete/filters/sorter_length.vim	/^function! neocomplete#filters#sorter_length#define() abort "{{{$/;"	f
neocomplete#filters#sorter_rank#define	bundle/neocomplete/autoload/neocomplete/filters/sorter_rank.vim	/^function! neocomplete#filters#sorter_rank#define() abort "{{{$/;"	f
neocomplete#filters#sorter_word#define	bundle/neocomplete/autoload/neocomplete/filters/sorter_word.vim	/^function! neocomplete#filters#sorter_word#define() abort "{{{$/;"	f
neocomplete#get_context	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_context() abort "{{{$/;"	f
neocomplete#get_context_filetype	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_context_filetype(...) abort "{{{$/;"	f
neocomplete#get_cur_text	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_cur_text(...) abort "{{{$/;"	f
neocomplete#get_current_neocomplete	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_current_neocomplete() abort "{{{$/;"	f
neocomplete#get_data_directory	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_data_directory() abort "{{{$/;"	f
neocomplete#get_default_matchers	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_default_matchers() abort "{{{$/;"	f
neocomplete#get_keyword_pattern	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_keyword_pattern(...) abort "{{{$/;"	f
neocomplete#get_keyword_pattern_end	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_keyword_pattern_end(...) abort "{{{$/;"	f
neocomplete#get_source_filetypes	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_source_filetypes(filetype) abort "{{{$/;"	f
neocomplete#handler#_do_auto_complete	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_do_auto_complete(event) abort "{{{$/;"	f
neocomplete#handler#_on_complete_done	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_complete_done() abort "{{{$/;"	f
neocomplete#handler#_on_insert_char_pre	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_insert_char_pre() abort "{{{$/;"	f
neocomplete#handler#_on_insert_enter	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_insert_enter() abort "{{{$/;"	f
neocomplete#handler#_on_insert_leave	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_insert_leave() abort "{{{$/;"	f
neocomplete#handler#_on_moved_i	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_moved_i() abort "{{{$/;"	f
neocomplete#handler#_on_text_changed	bundle/neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_text_changed() abort "{{{$/;"	f
neocomplete#has_vimproc	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#has_vimproc() abort "{{{$/;"	f
neocomplete#head_match	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#head_match(checkstr, headstr) abort "{{{$/;"	f
neocomplete#helper#call_filters	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#call_filters(filters, source, context) abort "{{{$/;"	f
neocomplete#helper#call_hook	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#call_hook(sources, hook_name, context) abort "{{{$/;"	f
neocomplete#helper#check_filetype	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#check_filetype(dictionary) abort "{{{$/;"	f
neocomplete#helper#check_invalid_omnifunc	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#check_invalid_omnifunc(omnifunc) abort "{{{$/;"	f
neocomplete#helper#clean	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#clean(directory) abort "{{{$/;"	f
neocomplete#helper#clear_result	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#clear_result() abort "{{{$/;"	f
neocomplete#helper#complete_check	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#complete_check() abort "{{{$/;"	f
neocomplete#helper#complete_configure	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#complete_configure() abort "{{{$/;"	f
neocomplete#helper#filetype_complete	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#filetype_complete(arglead, cmdline, cursorpos) abort "{{{$/;"	f
neocomplete#helper#get_cur_text	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#get_cur_text(...) abort "{{{$/;"	f
neocomplete#helper#get_force_omni_complete_pos	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#get_force_omni_complete_pos(cur_text) abort "{{{$/;"	f
neocomplete#helper#get_source_filetypes	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#get_source_filetypes(filetype) abort "{{{$/;"	f
neocomplete#helper#get_sources_list	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#get_sources_list(...) abort "{{{$/;"	f
neocomplete#helper#get_syn_name	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#get_syn_name(is_trans) abort "{{{$/;"	f
neocomplete#helper#indent_current_line	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#indent_current_line() abort "{{{$/;"	f
neocomplete#helper#is_enabled_source	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#is_enabled_source(source, filetype) abort "{{{$/;"	f
neocomplete#helper#match_word	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#match_word(cur_text, ...) abort "{{{$/;"	f
neocomplete#helper#sort_human	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#sort_human(candidates) abort "{{{$/;"	f
neocomplete#helper#unite_patterns	bundle/neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#unite_patterns(pattern_var, filetype) abort "{{{$/;"	f
neocomplete#init#_autocmds	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_autocmds() abort "{{{$/;"	f
neocomplete#init#_context	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_context(context) abort "{{{$/;"	f
neocomplete#init#_current_neocomplete	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_current_neocomplete() abort "{{{$/;"	f
neocomplete#init#_filter	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_filter(filter) abort "{{{$/;"	f
neocomplete#init#_filters	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_filters(names) abort "{{{$/;"	f
neocomplete#init#_others	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_others() abort "{{{$/;"	f
neocomplete#init#_source	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_source(source) abort "{{{$/;"	f
neocomplete#init#_sources	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_sources(names) abort "{{{$/;"	f
neocomplete#init#_variables	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_variables() abort "{{{$/;"	f
neocomplete#init#disable	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#disable() abort "{{{$/;"	f
neocomplete#init#enable	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#enable() abort "{{{$/;"	f
neocomplete#init#is_enabled	bundle/neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#is_enabled() abort "{{{$/;"	f
neocomplete#initialize	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#initialize() abort "{{{$/;"	f
neocomplete#is_auto_complete	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_auto_complete() abort "{{{$/;"	f
neocomplete#is_auto_select	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_auto_select() abort "{{{$/;"	f
neocomplete#is_cache_disabled	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_cache_disabled() abort "{{{$/;"	f
neocomplete#is_enabled	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_enabled() abort "{{{$/;"	f
neocomplete#is_eskk_enabled	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_eskk_enabled() abort "{{{$/;"	f
neocomplete#is_locked	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_locked(...) abort "{{{$/;"	f
neocomplete#is_multibyte_input	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_multibyte_input(cur_text) abort "{{{$/;"	f
neocomplete#is_prefetch	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_prefetch() abort "{{{$/;"	f
neocomplete#is_text_mode	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_text_mode() abort "{{{$/;"	f
neocomplete#is_windows	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_windows() abort "{{{$/;"	f
neocomplete#mappings#auto_complete	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#auto_complete() abort "{{{$/;"	f
neocomplete#mappings#cancel_popup	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#cancel_popup() abort "{{{$/;"	f
neocomplete#mappings#close_popup	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#close_popup() abort "{{{$/;"	f
neocomplete#mappings#complete_common_string	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#complete_common_string() abort "{{{$/;"	f
neocomplete#mappings#define_default_mappings	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#define_default_mappings() abort "{{{$/;"	f
neocomplete#mappings#fallback	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#fallback(i) abort "{{{$/;"	f
neocomplete#mappings#manual_complete	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#manual_complete() abort "{{{$/;"	f
neocomplete#mappings#popup_post	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#popup_post() abort "{{{$/;"	f
neocomplete#mappings#refresh	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#refresh() abort "{{{$/;"	f
neocomplete#mappings#smart_close_popup	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#smart_close_popup() abort "{{{$/;"	f
neocomplete#mappings#start_manual_complete	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#start_manual_complete(...) abort "{{{$/;"	f
neocomplete#mappings#undo_completion	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#undo_completion() abort "{{{$/;"	f
neocomplete#match_word	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#match_word(...) abort "{{{$/;"	f
neocomplete#print_debug	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#print_debug(expr) abort "{{{$/;"	f
neocomplete#print_error	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#print_error(string) abort "{{{$/;"	f
neocomplete#print_warning	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#print_warning(string) abort "{{{$/;"	f
neocomplete#set_default_matchers	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#set_default_matchers(matchers) abort "{{{$/;"	f
neocomplete#set_dictionary_helper	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#set_dictionary_helper(variable, keys, value) abort "{{{$/;"	f
neocomplete#skip_next_complete	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#skip_next_complete() abort "{{{$/;"	f
neocomplete#smart_close_popup	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#smart_close_popup() abort$/;"	f
neocomplete#sources#buffer#define	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! neocomplete#sources#buffer#define() abort "{{{$/;"	f
neocomplete#sources#buffer#get_frequencies	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! neocomplete#sources#buffer#get_frequencies() abort "{{{$/;"	f
neocomplete#sources#buffer#make_cache	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! neocomplete#sources#buffer#make_cache(name) abort "{{{$/;"	f
neocomplete#sources#buffer#make_cache_current_line	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! neocomplete#sources#buffer#make_cache_current_line() abort "{{{$/;"	f
neocomplete#sources#dictionary#define	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^function! neocomplete#sources#dictionary#define() abort "{{{$/;"	f
neocomplete#sources#dictionary#get_dictionaries	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^function! neocomplete#sources#dictionary#get_dictionaries(filetype) abort "{{{$/;"	f
neocomplete#sources#dictionary#remake_cache	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^function! neocomplete#sources#dictionary#remake_cache(filetype) abort "{{{$/;"	f
neocomplete#sources#file#define	bundle/neocomplete/autoload/neocomplete/sources/file.vim	/^function! neocomplete#sources#file#define() abort "{{{$/;"	f
neocomplete#sources#member#define	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! neocomplete#sources#member#define() abort "{{{$/;"	f
neocomplete#sources#member#make_cache_current_buffer	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! neocomplete#sources#member#make_cache_current_buffer() abort "{{{$/;"	f
neocomplete#sources#member#make_cache_current_line	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! neocomplete#sources#member#make_cache_current_line() abort "{{{$/;"	f
neocomplete#sources#member#remake_cache	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! neocomplete#sources#member#remake_cache(filetype) abort "{{{$/;"	f
neocomplete#sources#omni#define	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^function! neocomplete#sources#omni#define() abort "{{{$/;"	f
neocomplete#sources#tag#define	bundle/neocomplete/autoload/neocomplete/sources/tag.vim	/^function! neocomplete#sources#tag#define() abort "{{{$/;"	f
neocomplete#sources#tag#make_cache	bundle/neocomplete/autoload/neocomplete/sources/tag.vim	/^function! neocomplete#sources#tag#make_cache(force) abort "{{{$/;"	f
neocomplete#start_manual_complete	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#start_manual_complete(...) abort$/;"	f
neocomplete#system	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#system(...) abort "{{{$/;"	f
neocomplete#undo_completion	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#undo_completion() abort$/;"	f
neocomplete#util#convert2list	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#convert2list(expr) abort "{{{$/;"	f
neocomplete#util#disable_default_dictionary	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#disable_default_dictionary(variable) abort "{{{$/;"	f
neocomplete#util#dup_filter	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#dup_filter(list) abort "{{{$/;"	f
neocomplete#util#escape_pattern	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#escape_pattern(...) abort "{{{$/;"	f
neocomplete#util#expand	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#expand(path) abort "{{{$/;"	f
neocomplete#util#get_last_status	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#get_last_status(...) abort "{{{$/;"	f
neocomplete#util#get_vital	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#get_vital() abort "{{{$/;"	f
neocomplete#util#glob	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#glob(pattern, ...) abort "{{{$/;"	f
neocomplete#util#has_vimproc	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#has_vimproc() abort "{{{$/;"	f
neocomplete#util#iconv	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#iconv(...) abort "{{{$/;"	f
neocomplete#util#is_complete_select	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#is_complete_select() abort "{{{$/;"	f
neocomplete#util#is_mac	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#is_mac(...) abort "{{{$/;"	f
neocomplete#util#is_sudo	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#is_sudo() abort "{{{$/;"	f
neocomplete#util#is_text_changed	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#is_text_changed() abort "{{{$/;"	f
neocomplete#util#is_windows	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#is_windows(...) abort "{{{$/;"	f
neocomplete#util#join_rtp	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#join_rtp(list) abort "{{{$/;"	f
neocomplete#util#mb_strlen	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#mb_strlen(...) abort "{{{$/;"	f
neocomplete#util#set_default	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#set_default(var, val, ...) abort  "{{{$/;"	f
neocomplete#util#set_default_dictionary	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#set_default_dictionary(variable, keys, value) abort "{{{$/;"	f
neocomplete#util#set_dictionary_helper	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#set_dictionary_helper(variable, keys, pattern) abort "{{{$/;"	f
neocomplete#util#sort_by	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#sort_by(...) abort "{{{$/;"	f
neocomplete#util#split_rtp	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#split_rtp(...) abort "{{{$/;"	f
neocomplete#util#strchars	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#strchars(...) abort "{{{$/;"	f
neocomplete#util#strwidthpart	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#strwidthpart(...) abort "{{{$/;"	f
neocomplete#util#strwidthpart_reverse	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#strwidthpart_reverse(...) abort "{{{$/;"	f
neocomplete#util#substitute_path_separator	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#substitute_path_separator(...) abort "{{{$/;"	f
neocomplete#util#system	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#system(...) abort "{{{$/;"	f
neocomplete#util#truncate	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#truncate(...) abort "{{{$/;"	f
neocomplete#util#truncate_smart	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#truncate_smart(...) abort "{{{$/;"	f
neocomplete#util#uniq	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#uniq(...) abort "{{{$/;"	f
neocomplete#util#uniq	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#uniq(list) abort "{{{$/;"	f
neocomplete#util#wcswidth	bundle/neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#wcswidth(string) abort "{{{$/;"	f
neocomplete#variables#get_filters	bundle/neocomplete/autoload/neocomplete/variables.vim	/^function! neocomplete#variables#get_filters() abort "{{{$/;"	f
neocomplete#variables#get_frequencies	bundle/neocomplete/autoload/neocomplete/variables.vim	/^function! neocomplete#variables#get_frequencies() abort "{{{$/;"	f
neocomplete#variables#get_source	bundle/neocomplete/autoload/neocomplete/variables.vim	/^function! neocomplete#variables#get_source(name) abort "{{{$/;"	f
neocomplete#variables#get_sources	bundle/neocomplete/autoload/neocomplete/variables.vim	/^function! neocomplete#variables#get_sources() abort "{{{$/;"	f
neocomplete#within_comment	bundle/neocomplete/autoload/neocomplete.vim	/^function! neocomplete#within_comment() abort "{{{$/;"	f
neocomplete_source.gather_candidates	bundle/neocomplete/autoload/unite/sources/neocomplete.vim	/^function! s:neocomplete_source.gather_candidates(args, context) abort "{{{$/;"	f
neocomplete_source.hooks.on_init	bundle/neocomplete/autoload/unite/sources/neocomplete.vim	/^function! s:neocomplete_source.hooks.on_init(args, context) abort "{{{$/;"	f
nerdtree#and	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#and(x,y)$/;"	f
nerdtree#checkForBrowse	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir)$/;"	f
nerdtree#compareNodes	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2)$/;"	f
nerdtree#compareNodesBySortKey	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodesBySortKey(n1, n2)$/;"	f
nerdtree#completeBookmarks	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P)$/;"	f
nerdtree#deprecated	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...)$/;"	f
nerdtree#echo	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg)$/;"	f
nerdtree#echoError	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg)$/;"	f
nerdtree#echoWarning	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg)$/;"	f
nerdtree#exec	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd, ignoreAll)$/;"	f
nerdtree#has_opt	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name)$/;"	f
nerdtree#loadClassFiles	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles()$/;"	f
nerdtree#postSourceActions	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions()$/;"	f
nerdtree#renderView	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView()$/;"	f
nerdtree#runningCygwin	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningCygwin()$/;"	f
nerdtree#runningWindows	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows()$/;"	f
nerdtree#slash	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#slash()$/;"	f
nerdtree#ui_glue#bookmarkNode	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#bookmarkNode(...)$/;"	f
nerdtree#ui_glue#chRootCwd	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#chRootCwd()$/;"	f
nerdtree#ui_glue#clearBookmarks	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#clearBookmarks(bookmarks)$/;"	f
nerdtree#ui_glue#createDefaultBindings	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#createDefaultBindings()$/;"	f
nerdtree#ui_glue#invokeKeyMap	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#invokeKeyMap(key)$/;"	f
nerdtree#ui_glue#openBookmark	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#openBookmark(name)$/;"	f
nerdtree#ui_glue#revealBookmark	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#revealBookmark(name)$/;"	f
nerdtree#ui_glue#setupCommands	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#setupCommands()$/;"	f
nerdtree#ui_glue#upDir	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#upDir(preserveState)$/;"	f
nerdtree#version	bundle/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version(...)$/;"	f
nested_app_ebins	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^nested_app_ebins() ->$/;"	f
new	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:new(plugin_name) abort$/;"	f
now	bundle/emmet-vim/docs/static/js/jquery-latest.js	/^function now(){$/;"	f
nr2byte	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
nr2enc_char	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
nr2hex	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
nsplit	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
num	bundle/emmet-vim/docs/static/js/jquery-latest.js	/^function num(elem, prop) {$/;"	f
nvim_job_exit_wrapper	bundle/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_exit_wrapper(real_cb, job, exit_code, event_type) abort$/;"	f
nvim_job_out_wrapper	bundle/vim-gutentags/autoload/gutentags.vim	/^    function! s:nvim_job_out_wrapper(real_cb, job, lines, event_type) abort$/;"	f
openExplorer	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openExplorer(node)$/;"	f
openFold	bundle/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:openFold() abort dict$/;"	f
openFold	bundle/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:openFold() abort dict$/;"	f
openHSplit	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplit(target)$/;"	f
openInNewTab	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTab(target)$/;"	f
openInNewTabSilent	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTabSilent(target)$/;"	f
openKindFold	bundle/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:openKindFold(kind) abort dict$/;"	f
openNodeRecursively	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openNodeRecursively(node)$/;"	f
openParents	bundle/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:openParents() abort dict$/;"	f
openVSplit	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplit(target)$/;"	f
or	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:or(xs) abort$/;"	f
os	bundle/syntastic/syntax_checkers/python/codec.py	/^import os$/;"	i
os	conf/ycm/c99_ycm_extra_conf.py	/^import os$/;"	i
os	conf/ycm/templates/valloric_ycm_extra_conf.py	/^import os$/;"	i
os	conf/ycm/ycm_extra_conf.py	/^import os$/;"	i
output_value	conf/testdir/cppex.cpp	/^        void output_value()$/;"	f	class:programming
pad_between_letters	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
pad_both_sides	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
pad_left	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
pad_right	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
padding_by_displaywidth	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
parse_name	bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:parse_name(arg)$/;"	f
parse_options	bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:parse_options(opts)$/;"	f
partition	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
path2directory	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
path2project_directory	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
pathogen#cycle_filetype	autoload/pathogen.vim	/^function! pathogen#cycle_filetype() " {{{1$/;"	f
pathogen#glob	autoload/pathogen.vim	/^function! pathogen#glob(pattern) abort " {{{1$/;"	f
pathogen#glob_directories	autoload/pathogen.vim	/^function! pathogen#glob_directories(pattern) abort " {{{1$/;"	f
pathogen#helptags	autoload/pathogen.vim	/^function! pathogen#helptags() " {{{1$/;"	f
pathogen#infect	autoload/pathogen.vim	/^function! pathogen#infect(...) abort " {{{1$/;"	f
pathogen#is_disabled	autoload/pathogen.vim	/^function! pathogen#is_disabled(path) " {{{1$/;"	f
pathogen#join	autoload/pathogen.vim	/^function! pathogen#join(...) abort " {{{1$/;"	f
pathogen#legacyjoin	autoload/pathogen.vim	/^function! pathogen#legacyjoin(...) abort " {{{1$/;"	f
pathogen#rtpfindfile	autoload/pathogen.vim	/^function! pathogen#rtpfindfile(file,count) "{{{1$/;"	f
pathogen#runtime_append_all_bundles	autoload/pathogen.vim	/^function! pathogen#runtime_append_all_bundles(...) " {{{1$/;"	f
pathogen#runtime_prepend_subdirectories	autoload/pathogen.vim	/^function! pathogen#runtime_prepend_subdirectories(path) " {{{1$/;"	f
pathogen#separator	autoload/pathogen.vim	/^function! pathogen#separator() abort " {{{1$/;"	f
pathogen#split	autoload/pathogen.vim	/^function! pathogen#split(path) abort " {{{1$/;"	f
pathogen#uniq	autoload/pathogen.vim	/^function! pathogen#uniq(list) abort " {{{1$/;"	f
permutations	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
php_sync_method	indent/php.vim	/^let php_sync_method = 0$/;"	v
plugin_name	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:plugin_name() abort dict$/;"	f
pop	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:pop(list) abort$/;"	f
previewBookmark	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewBookmark(bookmark)$/;"	f
previewNodeCurrent	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeCurrent(node)$/;"	f
previewNodeHSplit	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplit(node)$/;"	f
previewNodeVSplit	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplit(node)$/;"	f
printBits	conf/testdir/bitwise.c	/^void printBits(unsigned int num)$/;"	f
print_function	bundle/syntastic/syntax_checkers/python/codec.py	/^from __future__ import print_function$/;"	i
print_function	bundle/syntastic/syntax_checkers/python/compile.py	/^from __future__ import print_function$/;"	i
process	bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:process(bang, cmd)$/;"	f
process_delimiter	bundle/neocomplete/autoload/neocomplete/filters/converter_delimiter.vim	/^function! s:process_delimiter(context, candidate, delimiter, delim_cnt) abort$/;"	f
process_options_file	bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^function! s:process_options_file(proj_dir, path) abort$/;"	f
product	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:product(lists) abort$/;"	f
programming	conf/testdir/cppex.cpp	/^class programming$/;"	c	file:
promptToDelBuffer	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
push	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
quickExpr	bundle/emmet-vim/docs/static/js/jquery-latest.js	/^var quickExpr = \/^[^<]*(<(.|\\s)+>)[^>]*$|^#(\\w+)$\/,$/;"	v
rand	bundle/neocomplete/autoload/neocomplete/commands.vim	/^function! s:rand(max) abort "{{{$/;"	f
re	bundle/syntastic/syntax_checkers/python/codec.py	/^import re$/;"	i
readfile	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^function! s:readfile(cache_dir, filename) abort$/;"	f
rebar_file	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^rebar_file(Dir, normal) -> filename:join(Dir, "rebar.config");$/;"	f
rebar_file	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^rebar_file(Dir, test)   -> filename:join(Dir, "rebar.test.config").$/;"	f
rebar_opts	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^rebar_opts(RebarFile) ->$/;"	f
red	colors/goldenrod.vim	/^let red = '196'$/;"	v
refreshCurrent	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshCurrent(node)$/;"	f
refreshRoot	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshRoot()$/;"	f
reload	bundle/emmet-vim/unittest.vim	/^function! s:reload(d)$/;"	f
removeChild	bundle/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:removeChild(tag) dict abort$/;"	f
removeTag	bundle/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:removeTag(tag) dict abort$/;"	f
remove_ansi_sequences	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:remove_ansi_sequences(text) abort$/;"	f
renameBuffer	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:renameBuffer(bufNum, newNodeName, isDirectory)$/;"	f
repair_posix_text	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:repair_posix_text(text, ...) abort$/;"	f
replace	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
replace_first	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
repo_bare	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_config(name) dict abort$/;"	f
repo_dir	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_find	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_find(object) dict abort$/;"	f
repo_git_chomp	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
repo_prepare	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_prepare(...) dict abort$/;"	f
repo_rev_parse	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_translate(rev) dict abort$/;"	f
repo_tree	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
reset	bundle/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:reset() abort dict$/;"	f
ret	bundle/emmet-vim/docs/static/js/jquery-latest.js	/^		var ret = "";$/;"	v
reuseWin	bundle/nerdtree/autoload/nerdtree.vim	/^function! s:reuseWin(dir) abort$/;"	f
reverse	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
rhsnullBit	conf/testdir/bitwise.c	/^int rhsnullBit(unsigned int *n)$/;"	f
rtp_add	bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtp_add(dir) abort$/;"	f
rtp_add_a	bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtp_add_a()$/;"	f
rtp_add_defaults	bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtp_add_defaults()$/;"	f
rtp_rm	bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtp_rm(dir) abort$/;"	f
rtp_rm_a	bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtp_rm_a()$/;"	f
rtpath	bundle/Vundle.vim/autoload/vundle/config.vim	/^func! s:rtpath(opts)$/;"	f
run	conf/testdir/bitwise.c	/^int run(unsigned int *n, int issetBitBit,$/;"	f
s:BLOCKLEVEL_TAGS	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:BLOCKLEVEL_TAGS = [$/;"	v
s:Bookmark	bundle/nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:CONTENT_TYPE	bundle/syntastic/syntax_checkers/html/validator.vim	/^let s:CONTENT_TYPE = {$/;"	v
s:Cache	bundle/neocomplete/autoload/neocomplete/cache.vim	/^let s:Cache = neocomplete#util#get_vital().import('System.Cache.Deprecated')$/;"	v
s:Creator	bundle/nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:DEFAULTS	bundle/syntastic/syntax_checkers/html/validator.vim	/^let s:DEFAULTS = {$/;"	v
s:DEFAULTS	bundle/syntastic/syntax_checkers/html/w3.vim	/^let s:DEFAULTS = {$/;"	v
s:EMPTY_TAGS	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:EMPTY_TAGS = [$/;"	v
s:Event	bundle/nerdtree/lib/nerdtree/event.vim	/^let s:Event = {}$/;"	v
s:FlagSet	bundle/nerdtree/lib/nerdtree/flag_set.vim	/^let s:FlagSet = {}$/;"	v
s:IGNORE_ERRORS	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:IGNORE_ERRORS = [$/;"	v
s:INLINE_TAGS	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:INLINE_TAGS = [$/;"	v
s:KeyMap	bundle/nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:List	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^let s:List = neocomplete#util#get_vital().import('Data.List')$/;"	v
s:MenuController	bundle/nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	bundle/nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:NERDTree	bundle/nerdtree/lib/nerdtree/nerdtree.vim	/^let s:NERDTree = {}$/;"	v
s:Notifier	bundle/nerdtree/lib/nerdtree/notifier.vim	/^let s:Notifier = {}$/;"	v
s:Opener	bundle/nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:PHP_startindenttag	indent/php.vim	/^let s:PHP_startindenttag = '<?\\%(.*?>\\)\\@!\\|<script[^>]*>\\%(.*<\\\/script>\\)\\@!'$/;"	v
s:Path	bundle/nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:SNR	bundle/neocomplete/autoload/vital/neocomplete.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val])) . "]"'), '')$/;"	v
s:State	bundle/tagbar/autoload/tagbar/state.vim	/^let s:State = {$/;"	v
s:SynPHPMatchGroups	indent/php.vim	/^let s:SynPHPMatchGroups = {'phpParent':1, 'Delimiter':1, 'Define':1, 'Storageclass':1, 'StorageClass':1, 'Structure':1, 'Exception':1}$/;"	v
s:TYPE_DICT	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_LIST	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_STRING	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^let s:TYPE_STRING = type('')$/;"	v
s:TreeDirNode	bundle/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeFileNode	bundle/nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:UI	bundle/nerdtree/lib/nerdtree/ui.vim	/^let s:UI = {}$/;"	v
s:Vital	bundle/neocomplete/autoload/vital/neocomplete.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	bundle/neocomplete/autoload/vital/neocomplete.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
s:Vital	bundle/neocomplete/autoload/vital/neocomplete.vim	/^let s:Vital = {}$/;"	v
s:Vital	bundle/neocomplete/autoload/vital/neocomplete.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
s:Vital	bundle/neocomplete/autoload/vital/neocomplete.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
s:Vital	bundle/neocomplete/autoload/vital/neocomplete.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
s:Vital	bundle/neocomplete/autoload/vital/neocomplete.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
s:Vital	bundle/neocomplete/autoload/vital/neocomplete.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
s:Vital	bundle/neocomplete/autoload/vital/neocomplete.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
s:Vital	bundle/neocomplete/autoload/vital/neocomplete.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
s:Vital	bundle/neocomplete/autoload/vital/neocomplete.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
s:_DEFAULT_CHECKERS	bundle/syntastic/plugin/syntastic/registry.vim	/^let s:_DEFAULT_CHECKERS = {$/;"	v
s:_DEFAULT_FILETYPE_MAP	bundle/syntastic/plugin/syntastic/registry.vim	/^let s:_DEFAULT_FILETYPE_MAP = {$/;"	v
s:_ECLIM_TYPES	bundle/syntastic/plugin/syntastic/registry.vim	/^let s:_ECLIM_TYPES = [$/;"	v
s:_FILE_SHORTCUTS	bundle/syntastic/syntax_checkers/java/javac.vim	/^let s:_FILE_SHORTCUTS = {$/;"	v
s:_NOTIFIER_TYPES	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let s:_NOTIFIER_TYPES = ['signs', 'balloons', 'highlighting', 'cursor', 'autoloclist']$/;"	v
s:_PERSISTENT_NOTIFIERS	bundle/syntastic/plugin/syntastic/notifiers.vim	/^let s:_PERSISTENT_NOTIFIERS = ['signs', 'balloons']$/;"	v
s:_YCM_TYPES	bundle/syntastic/plugin/syntastic/registry.vim	/^let s:_YCM_TYPES = [$/;"	v
s:_check_stack	bundle/syntastic/plugin/syntastic.vim	/^let s:_check_stack = []$/;"	v
s:_delete	bundle/syntastic/autoload/syntastic/util.vim	/^let s:_delete = function(v:version > 704 || (v:version == 704 && has('patch1128')) ? 'delete' : 's:_delete_dumb')$/;"	v
s:_float2str	bundle/syntastic/autoload/syntastic/util.vim	/^let s:_float2str = function(has('float') ? 's:_float2str_smart' : 's:_float2str_dumb')$/;"	v
s:_fuzz	bundle/syntastic/autoload/syntastic/util.vim	/^let s:_fuzz = function(exists('*getpid') ? 'getpid' : 's:_fuzz_dumb')$/;"	v
s:_getbufvar	bundle/syntastic/autoload/syntastic/util.vim	/^let s:_getbufvar = function(v:version > 703 || (v:version == 703 && has('patch831')) ? 'getbufvar' : 's:_getbufvar_dumb')$/;"	v
s:_isDebugEnabled	bundle/syntastic/autoload/syntastic/log.vim	/^let s:_isDebugEnabled = function(exists('*and') ? 's:_isDebugEnabled_smart' : 's:_isDebugEnabled_dumb')$/;"	v
s:_log_timestamp	bundle/syntastic/autoload/syntastic/log.vim	/^let s:_log_timestamp = function(has('float') && exists('*reltimefloat') ? 's:_log_timestamp_smart' : 's:_log_timestamp_dumb')$/;"	v
s:_plugin_name	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_quit_pre	bundle/syntastic/plugin/syntastic.vim	/^let s:_quit_pre = []$/;"	v
s:_running_windows	bundle/syntastic/plugin/syntastic.vim	/^let s:_running_windows = syntastic#util#isRunningWindows()$/;"	v
s:_s	bundle/neocomplete/autoload/vital/neocomplete.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_str2float	bundle/syntastic/autoload/syntastic/util.vim	/^let s:_str2float = function(exists('*str2float') ? 'str2float' : 'str2nr')$/;"	v
s:_unify_path_cache	bundle/neocomplete/autoload/vital/neocomplete.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_wid_base	bundle/syntastic/autoload/syntastic/util.vim	/^let s:_wid_base = 'syntastic_' . s:_fuzz() . '_' . reltimestr(g:_SYNTASTIC_START) . '_'$/;"	v
s:_wid_pool	bundle/syntastic/autoload/syntastic/util.vim	/^let s:_wid_pool = 0$/;"	v
s:_width	bundle/syntastic/autoload/syntastic/util.vim	/^let s:_width = function(exists('*strwidth') ? 'strwidth' : 'strlen')$/;"	v
s:added_db_files	bundle/vim-gutentags/autoload/gutentags/gtags_cscope.vim	/^let s:added_db_files = {}$/;"	v
s:added_dbs	bundle/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:added_dbs = []$/;"	v
s:addr_other	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:addr_other = has('patch-8.1.560') ? '-addr=other' : ''$/;"	v
s:addr_tabs	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:addr_tabs  = has('patch-7.4.542') ? '-addr=tabs' : ''$/;"	v
s:addr_wins	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:addr_wins  = has('patch-7.4.542') ? '-addr=windows' : ''$/;"	v
s:aliases	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:aliases = {}$/;"	v
s:annotationMatcher	bundle/vim-scala/indent/scala.vim	/^let s:annotationMatcher = '@[A-Za-z._]\\+\\s\\+'$/;"	v
s:args_after	bundle/syntastic/syntax_checkers/css/stylelint.vim	/^let s:args_after = {$/;"	v
s:assert	bundle/neocomplete/test/neocomplete.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:async_dictionary_list	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^  let s:async_dictionary_list = {}$/;"	v
s:async_dictionary_list	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^  let s:async_dictionary_list = {}$/;"	v
s:async_tags_list	bundle/neocomplete/autoload/neocomplete/sources/tag.vim	/^  let s:async_tags_list = {}$/;"	v
s:autocommands_done	bundle/tagbar/autoload/tagbar.vim	/^let s:autocommands_done = 0$/;"	v
s:autoresetoptions	indent/php.vim	/^    let s:autoresetoptions = 1$/;"	v
s:autoresetoptions	indent/php.vim	/^let s:autoresetoptions = 0$/;"	v
s:base_path	bundle/syntastic/syntax_checkers/python/python.vim	/^let s:base_path = expand('<sfile>:p:h', 1) . syntastic#util#Slash()$/;"	v
s:blobdirs	bundle/vim-fugitive/autoload/fugitive.vim	/^  let s:blobdirs = {}$/;"	v
s:blockstart	indent/php.vim	/^let s:blockstart = '\\%(\\%(\\%(}\\s*\\)\\=else\\%(\\s\\+\\)\\=\\)\\=if\\>\\|else\\>\\|while\\>\\|switch\\>\\|case\\>\\|default\\>\\|for\\%(each\\)\\=\\>\\|declare\\>\\|class\\>\\|interface\\>\\|abstract\\>\\|final\\>\\|try\\>\\|catch\\>\\)'$/;"	v
s:buffer_prototype	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_seqno	bundle/tagbar/autoload/tagbar.vim	/^let s:buffer_seqno = 0$/;"	v
s:buffer_sources	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^  let s:buffer_sources = {}$/;"	v
s:bundle	bundle/Vundle.vim/autoload/vundle/config.vim	/^let s:bundle = {}$/;"	v
s:bx	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^let s:bx = '{\\%("[^"]*"\\|''[^'']*''\\|\\$#\\|\\${\\w\\+}\\|\\$\\+\\|{[^{]\\+\\|[^{}]\\)\\{-}}'$/;"	v
s:cache_sid	bundle/neocomplete/autoload/vital/neocomplete.vim	/^let s:cache_sid = {}$/;"	v
s:cached_files	bundle/neocomplete/autoload/neocomplete/sources/file.vim	/^let s:cached_files = {}$/;"	v
s:check_file	bundle/syntastic/syntax_checkers/erlang/escript.vim	/^let s:check_file = syntastic#util#shescape(expand('<sfile>:p:h', 1) . syntastic#util#Slash() . 'erlang_check_file.erl')$/;"	v
s:checked_ctags	bundle/tagbar/autoload/tagbar.vim	/^let s:checked_ctags       = 0$/;"	v
s:checked_ctags_types	bundle/tagbar/autoload/tagbar.vim	/^let s:checked_ctags_types = 0$/;"	v
s:commands	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:commands = []$/;"	v
s:common_efm	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:common_efm = ''$/;"	v
s:commondirs	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:commondirs = {}$/;"	v
s:compare_typeinfo	bundle/tagbar/autoload/tagbar/sorting.vim	/^let s:compare_typeinfo = {}$/;"	v
s:config	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:config = {}$/;"	v
s:converter	bundle/neocomplete/autoload/neocomplete/filters/converter_abbr.vim	/^let s:converter = {$/;"	v
s:converter	bundle/neocomplete/autoload/neocomplete/filters/converter_add_paren.vim	/^let s:converter = {$/;"	v
s:converter	bundle/neocomplete/autoload/neocomplete/filters/converter_case.vim	/^let s:converter = {$/;"	v
s:converter	bundle/neocomplete/autoload/neocomplete/filters/converter_delimiter.vim	/^let s:converter = {$/;"	v
s:converter	bundle/neocomplete/autoload/neocomplete/filters/converter_disable_abbr.vim	/^let s:converter = {$/;"	v
s:converter	bundle/neocomplete/autoload/neocomplete/filters/converter_remove_last_paren.vim	/^let s:converter = {$/;"	v
s:converter	bundle/neocomplete/autoload/neocomplete/filters/converter_remove_overlap.vim	/^let s:converter = {$/;"	v
s:cpo_save	bundle/vim-scala/compiler/sbt.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	indent/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:ctags_is_uctags	bundle/tagbar/autoload/tagbar.vim	/^let s:ctags_is_uctags     = 0$/;"	v
s:debug_enabled	bundle/tagbar/autoload/tagbar/debug.vim	/^let s:debug_enabled = 0$/;"	v
s:debug_file	bundle/tagbar/autoload/tagbar/debug.vim	/^let s:debug_file = ''$/;"	v
s:defArgMatcher	bundle/vim-scala/indent/scala.vim	/^let s:defArgMatcher = '\\%((\\_.\\{-})\\)'$/;"	v
s:defMatcher	bundle/vim-scala/indent/scala.vim	/^let s:defMatcher = '\\%(' . s:modifierMatcher . '\\)*\\<def\\>'$/;"	v
s:defaultORcase	indent/php.vim	/^let s:defaultORcase = '^\\s*\\%(default\\|case\\).*:'$/;"	v
s:default_includes	bundle/syntastic/autoload/syntastic/c.vim	/^let s:default_includes = [$/;"	v
s:delayed_update_files	bundle/tagbar/autoload/tagbar.vim	/^let s:delayed_update_files = []$/;"	v
s:dictionary_cache	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^  let s:dictionary_cache = {}$/;"	v
s:did_check_exe	bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:did_check_exe = 0$/;"	v
s:dirArrows	bundle/nerdtree/syntax/nerdtree.vim	/^let s:dirArrows = escape(g:NERDTreeDirArrowCollapsible, '~]\\-').escape(g:NERDTreeDirArrowExpandable, '~]\\-')$/;"	v
s:dir_for_worktree	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:done_bundles	autoload/pathogen.vim	/^let s:done_bundles = ''$/;"	v
s:emmet_settings	bundle/emmet-vim/autoload/emmet.vim	/^let s:emmet_settings = {$/;"	v
s:endline	indent/php.vim	/^let s:endline= '\\s*\\%(\/\/.*\\|#.*\\|\/\\*.*\\*\/\\s*\\)\\=$'$/;"	v
s:exec_paths	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:exec_paths = {}$/;"	v
s:executables	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:executables = {}$/;"	v
s:exists	bundle/emmet-vim/autoload/emmet/lang.vim	/^let s:exists = {}$/;"	v
s:exists_context_filetype	bundle/neocomplete/autoload/neocomplete/context_filetype.vim	/^  let s:exists_context_filetype = exists('*context_filetype#version')$/;"	v
s:expand	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:expand = '\\%(\\(' . s:var . '\\)\\(' . s:flag . '*\\)\\(:S\\)\\=\\)'$/;"	v
s:expand_bufnr	bundle/tagbar/autoload/tagbar.vim	/^let s:expand_bufnr = -1$/;"	v
s:file_commit_pattern	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:file_commit_pattern = s:file_pattern . '\\|^\\%(\\l\\{3,\\} \\)\\=[0-9a-f]\\{4,\\} '$/;"	v
s:file_pattern	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:file_pattern = '^[A-Z?] .\\|^diff --'$/;"	v
s:filtermx	bundle/emmet-vim/autoload/emmet.vim	/^let s:filtermx = '|\\(\\%(bem\\|html\\|blade\\|haml\\|slim\\|e\\|c\\|s\\|fc\\|xsl\\|t\\|\\\/[^ ]\\+\\)\\s*,\\{0,1}\\s*\\)*$'$/;"	v
s:first_sign_id	bundle/syntastic/plugin/syntastic/signs.vim	/^let s:first_sign_id = 5000$/;"	v
s:flag	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:flag = '\\%(:[p8~.htre]\\|:g\\=s\\(.\\).\\{-\\}\\1.\\{-\\}\\1\\)'$/;"	v
s:fnameescape	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:fnameescape = " \\t\\n*?[{`$\\\\%#'\\"|!<"$/;"	v
s:funcNameMatcher	bundle/vim-scala/indent/scala.vim	/^let s:funcNameMatcher = '\\w\\+'$/;"	v
s:git_versions	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:globsubs	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:globsubs = {$/;"	v
s:glsl_extensions	bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^let s:glsl_extensions = {$/;"	v
s:has_highlighting	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let s:has_highlighting = v:version > 701 || (v:version == 701 && has('patch040'))$/;"	v
s:has_maven	bundle/syntastic/syntax_checkers/java/javac.vim	/^let s:has_maven = 0$/;"	v
s:hash_colors	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:ics	bundle/tagbar/syntax/tagbar.vim	/^let s:ics = escape(join(g:tagbar_iconchars, ''), ']^\\-')$/;"	v
s:imports	bundle/syntastic/syntax_checkers/sass/sass.vim	/^    let s:imports = '--compass'$/;"	v
s:imports	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let s:imports = ''$/;"	v
s:indexes	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:indexes = {}$/;"	v
s:init_done	bundle/tagbar/autoload/tagbar.vim	/^let s:init_done = 0$/;"	v
s:is_cygwin	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_enabled	bundle/neocomplete/autoload/neocomplete/init.vim	/^  let s:is_enabled = 0$/;"	v
s:is_mac	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_maximized	bundle/tagbar/autoload/tagbar.vim	/^let s:is_maximized    = 0$/;"	v
s:is_unix	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_vital_vim	bundle/neocomplete/autoload/vital/neocomplete.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_windows	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:item_pattern	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:item_pattern = s:file_commit_pattern . '\\|^@@'$/;"	v
s:keyMaps	bundle/nerdtree/lib/nerdtree/key_map.vim	/^let s:keyMaps = {}$/;"	v
s:known_files	bundle/tagbar/autoload/tagbar.vim	/^let s:known_files = {$/;"	v
s:known_files	bundle/vim-gutentags/autoload/gutentags.vim	/^let s:known_files = []$/;"	v
s:known_projects	bundle/vim-gutentags/autoload/gutentags.vim	/^let s:known_projects = {}$/;"	v
s:last_alt_bufnr	bundle/tagbar/autoload/tagbar.vim	/^let s:last_alt_bufnr = -1$/;"	v
s:last_highlight_tline	bundle/tagbar/autoload/tagbar.vim	/^let s:last_highlight_tline = 0$/;"	v
s:last_time	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:last_time = reltime()$/;"	v
s:last_times	bundle/vim-fugitive/autoload/fugitive.vim	/^  let s:last_times = {}$/;"	v
s:last_wildignores	bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:last_wildignores = ''$/;"	v
s:loaded	bundle/neocomplete/autoload/vital/neocomplete.vim	/^let s:loaded = {}$/;"	v
s:logging	bundle/emmet-vim/unittest.vim	/^let s:logging = 0$/;"	v
s:matcher	bundle/neocomplete/autoload/neocomplete/filters/matcher_fuzzy.vim	/^let s:matcher = {$/;"	v
s:matcher	bundle/neocomplete/autoload/neocomplete/filters/matcher_head.vim	/^let s:matcher = {$/;"	v
s:matcher	bundle/neocomplete/autoload/neocomplete/filters/matcher_length.vim	/^let s:matcher = {$/;"	v
s:matcher	bundle/neocomplete/autoload/neocomplete/filters/matcher_nothing.vim	/^let s:matcher = {$/;"	v
s:member_sources	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^  let s:member_sources = {}$/;"	v
s:modemap	bundle/syntastic/plugin/syntastic.vim	/^let s:modemap = g:SyntasticModeMap.Instance()$/;"	v
s:modifierMatcher	bundle/vim-scala/indent/scala.vim	/^let s:modifierMatcher = s:annotationMatcher . '\\|\\%(private\\|protected\\)\\%(\\[[^\\]]*\\]\\)\\?\\s\\+\\|abstract\\s\\+\\|override\\s\\+\\|final\\s\\+'$/;"	v
s:mx	bundle/emmet-vim/autoload/emmet/lang/html.vim	/^let s:mx = '\\([+>]\\|[<^]\\+\\)\\{-}'$/;"	v
s:nearby_disabled	bundle/tagbar/autoload/tagbar.vim	/^let s:nearby_disabled = 0$/;"	v
s:need_trans	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:neocomplete_source	bundle/neocomplete/autoload/unite/sources/neocomplete.vim	/^let s:neocomplete_source = {$/;"	v
s:new_window	bundle/tagbar/autoload/tagbar.vim	/^let s:new_window      = 1$/;"	v
s:next_sign_id	bundle/syntastic/plugin/syntastic/signs.vim	/^let s:next_sign_id = s:first_sign_id$/;"	v
s:node_file	bundle/syntastic/syntax_checkers/less/lessc.vim	/^let s:node_file = 'node ' . syntastic#util#shescape(expand('<sfile>:p:h', 1) . syntastic#util#Slash() . 'less-lint.js')$/;"	v
s:nomodeline	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:nomodeline = (v:version >= 704 ? '<nomodeline>' : '')$/;"	v
s:notPhpHereDoc	indent/php.vim	/^let s:notPhpHereDoc = '\\%(break\\|return\\|continue\\|exit\\|die\\|else\\)'$/;"	v
s:notifiers	bundle/syntastic/plugin/syntastic.vim	/^let s:notifiers = g:SyntasticNotifiers.Instance()$/;"	v
s:nowait	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:nowait = v:version >= 704 ? '<nowait>' : ''$/;"	v
s:nowait	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:nowait = v:version >= 704 ? '<nowait>' : ''$/;"	v
s:old_cpo	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:one_time_notices_issued	bundle/syntastic/autoload/syntastic/log.vim	/^let s:one_time_notices_issued = []$/;"	v
s:opt_x	bundle/syntastic/syntax_checkers/c/avrgcc.vim	/^let s:opt_x = { 'c': 'c', 'cpp': 'c++' }$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=#\\([^-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=+\\([^-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=-\\([^-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . '][-+# ]\\?\\)\\@<=[^*(]\\+\\(\\*\\?\\(([^)]\\+)\\)\\? :\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(^[' . s:ics . '] \\?\\)\\@3<=[^-+: ]\\+[^:]\\+$'$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\S\\@<![' . s:ics . ']\\([-+# ]\\?\\)\\@='$/;"	v
s:paused	bundle/tagbar/autoload/tagbar.vim	/^let s:paused = 0$/;"	v
s:plugin_name	bundle/neocomplete/autoload/vital/neocomplete.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:prepare_env	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:prepare_env = {$/;"	v
s:project_root	bundle/neocomplete/autoload/vital/neocomplete.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:pwin_by_tagbar	bundle/tagbar/autoload/tagbar.vim	/^let s:pwin_by_tagbar = 0$/;"	v
s:pylint_new	bundle/syntastic/syntax_checkers/python/pylint.vim	/^let s:pylint_new = -1$/;"	v
s:quiet_warnings	bundle/syntastic/plugin/syntastic.vim	/^            let s:quiet_warnings = [s:quiet_warnings]$/;"	v
s:quiet_warnings	bundle/syntastic/plugin/syntastic.vim	/^        let s:quiet_warnings = get(g:syntastic_quiet_messages, 'type', [])$/;"	v
s:rebase_abbrevs	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:rebase_abbrevs = {$/;"	v
s:redirects	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:redirects = {}$/;"	v
s:registry	bundle/syntastic/plugin/syntastic.vim	/^let s:registry = g:SyntasticRegistry.Instance()$/;"	v
s:repo_prototype	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:repos = {}$/;"	v
s:returnTypeMatcher	bundle/vim-scala/indent/scala.vim	/^let s:returnTypeMatcher = '\\%(:\\s*\\w\\+' . s:typeSpecMatcher . '\\?\\)'$/;"	v
s:rootNERDTreePath	bundle/nerdtree/autoload/nerdtree.vim	/^let s:rootNERDTreePath = resolve(expand("<sfile>:p:h:h"))$/;"	v
s:rst2pseudoxml	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let s:rst2pseudoxml = (executable('rst2pseudoxml.py') && !syntastic#util#isRunningWindows()) ? 'rst2pseudoxml.py' : 'rst2pseudoxml'$/;"	v
s:runner_exe	bundle/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:runner_exe = gutentags#get_plat_file('update_scopedb')$/;"	v
s:runner_exe	bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:runner_exe = gutentags#get_plat_file('update_tags')$/;"	v
s:sass_cache_location	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let s:sass_cache_location = syntastic#util#tmpdir()$/;"	v
s:save_cpo	bundle/emmet-vim/autoload/emmet.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	bundle/emmet-vim/plugin/emmet.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/async_cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/commands.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/context_filetype.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/custom.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/converter_abbr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/converter_add_paren.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/converter_case.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/converter_delimiter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/converter_disable_abbr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/converter_remove_last_paren.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/converter_remove_overlap.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/matcher_fuzzy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/matcher_head.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/matcher_length.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/matcher_nothing.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/sorter_filename.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/sorter_length.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/sorter_rank.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/filters/sorter_word.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/handler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/init.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/mappings.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/sources/file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/sources/tag.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/neocomplete/variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/unite/sources/neocomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/plugin/neocomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/plugin/neocomplete/buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/plugin/neocomplete/dictionary.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/plugin/neocomplete/member.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/neocomplete/plugin/neocomplete/tag.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/c.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/log.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/postprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/preprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/autoload/syntastic/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ada/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ansible/ansible_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/apiblueprint/drafter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/asl/iasl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/asm/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/bro/bro.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/avrgcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/clang_check.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/clang_tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/cppcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/cppclean.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/flawfinder.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/make.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/oclint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/pc_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/sparse.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/c/splint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cabal/cabal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/chef/foodcritic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cmake/cmakelint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/co/coco.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/coffee/coffee_jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cpp/verapp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cs/mcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/css/csslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/css/prettycss.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/css/stylelint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/d/dmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/d/dscanner.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/docbk/igor.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/dockerfile/dockerfile_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/dockerfile/hadolint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/dustjs/swiffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/erlang/escript.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/go/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/go/gofmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/go/golangci_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/go/golint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/go/gometalinter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/go/gotype.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/go/govet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haml/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haml/haml_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/handlebars/handlebars.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haskell/hlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haskell/scan.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/hss/hss.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/html/htmlhint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/html/jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/html/validator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/html/w3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/java/javac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/flow.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/jscs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/jsxhint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/lynt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/mixedindentlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/standard.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/javascript/tern_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/json/jsonval.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/julia/lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/less/lessc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/less/recess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/lex/flex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/limbo/limbo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/llvm/llvm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/lua/luac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/lua/luacheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/markdown/mdl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/markdown/remark_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/mercury/mmc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/nix/nix.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/nroff/mandoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/objc/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/perl/perl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/perl6/perl6.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/php/php.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/php/phpcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/php/phplint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/php/phpmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/php/phpstan.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/po/dennis.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/po/msgfmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/pod/podchecker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/pug/pug_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/puppet/puppet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/bandit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/flake8.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/frosted.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/mypy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/prospector.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/pycodestyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/pydocstyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/pylama.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/pylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/python/python.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/qml/qmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/r/lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/r/lintr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/r/svtools.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/racket/racket.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/rnc/rnv.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/rst/rstcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/rst/sphinx.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/flog.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/mri.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/reek.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/ruby/rubylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sass/sass.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sass/sass_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sass/sassc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/scala/fsc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/scala/scalac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/scss/scss_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sh/bashate.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sh/sh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sh/shellcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/slim/slim_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sml/smlnj.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/solidity/solc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/solidity/solhint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/solidity/solium.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/spec/rpmlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sql/sqlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/sql/tsqllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/stylus/stylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/tex/chktex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/text/atdtool.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/text/language_check.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/text/proselint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/text/textlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/turtle/rapper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/turtle/ttl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/typescript/tslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/vala/valac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/verilog/iverilog.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/vhdl/vcom.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/vim/vint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/vue/pug_lint_vue.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/xml/plutil.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/xquery/basex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/yacc/bison.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/yaml/yamllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/yang/pyang.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/yara/yara.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vim-auto-save/plugin/AutoSave.vim	/^let s:save_cpo = &cpo$/;"	v
s:sdir	bundle/neocomplete/autoload/neocomplete/cache.vim	/^let s:sdir = neocomplete#util#substitute_path_separator($/;"	v
s:searchpairflags	indent/php.vim	/^let s:searchpairflags = 'bWr'$/;"	v
s:section_commit_pattern	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:section_commit_pattern = s:section_pattern . '\\|^commit '$/;"	v
s:section_pattern	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:section_pattern = '^[A-Z][a-z][^:]*$'$/;"	v
s:seed	bundle/emmet-vim/autoload/emmet/util.vim	/^let s:seed = localtime()$/;"	v
s:setup_done	bundle/syntastic/plugin/syntastic/highlighting.vim	/^let s:setup_done = 0$/;"	v
s:setup_done	bundle/syntastic/plugin/syntastic/signs.vim	/^let s:setup_done = 0$/;"	v
s:sfile	bundle/emmet-vim/unittest.vim	/^let s:sfile = expand('<sfile>')$/;"	v
s:short_help	bundle/tagbar/autoload/tagbar.vim	/^let s:short_help      = 1$/;"	v
s:sorter	bundle/neocomplete/autoload/neocomplete/filters/sorter_filename.vim	/^let s:sorter = {$/;"	v
s:sorter	bundle/neocomplete/autoload/neocomplete/filters/sorter_length.vim	/^let s:sorter = {$/;"	v
s:sorter	bundle/neocomplete/autoload/neocomplete/filters/sorter_rank.vim	/^let s:sorter = {$/;"	v
s:sorter	bundle/neocomplete/autoload/neocomplete/filters/sorter_word.vim	/^let s:sorter = {$/;"	v
s:source	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplete/autoload/neocomplete/sources/file.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^let s:source = {$/;"	v
s:source	bundle/neocomplete/autoload/neocomplete/sources/tag.vim	/^let s:source = {$/;"	v
s:sphinx_cache_location	bundle/syntastic/syntax_checkers/rst/sphinx.vim	/^let s:sphinx_cache_location = syntastic#util#tmpdir()$/;"	v
s:statusline_in_use	bundle/tagbar/autoload/tagbar.vim	/^let s:statusline_in_use = 0$/;"	v
s:strchars	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^  let s:strchars = function('strchars')$/;"	v
s:suite	bundle/neocomplete/test/neocomplete.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:tags_list	bundle/neocomplete/autoload/neocomplete/sources/tag.vim	/^  let s:tags_list = {}$/;"	v
s:temp_files	bundle/vim-fugitive/autoload/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:tree_up_dir_line	bundle/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:trees	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:trees = {}$/;"	v
s:typeSpecMatcher	bundle/vim-scala/indent/scala.vim	/^let s:typeSpecMatcher = '\\%(\\s*\\[\\_[^\\]]*\\]\\)'$/;"	v
s:type_init_done	bundle/tagbar/autoload/tagbar.vim	/^let s:type_init_done    = 0$/;"	v
s:type_map	bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^let s:type_map = {}$/;"	v
s:unix_redir	bundle/vim-gutentags/autoload/gutentags/cscope.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:unix_redir	bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:unix_redir = (&shellredir =~# '%s') ? &shellredir : &shellredir . ' %s'$/;"	v
s:update_in_progress	bundle/vim-gutentags/autoload/gutentags.vim	/^    let s:update_in_progress[module] = []$/;"	v
s:update_in_progress	bundle/vim-gutentags/autoload/gutentags.vim	/^let s:update_in_progress = {}$/;"	v
s:update_queue	bundle/vim-gutentags/autoload/gutentags.vim	/^    let s:update_queue[module] = []$/;"	v
s:update_queue	bundle/vim-gutentags/autoload/gutentags.vim	/^let s:update_queue = {}$/;"	v
s:valMatcher	bundle/vim-scala/indent/scala.vim	/^let s:valMatcher = '\\%(' . s:modifierMatcher . '\\|lazy\\s\\+\\)*\\<va[lr]\\>'$/;"	v
s:var	bundle/vim-fugitive/autoload/fugitive.vim	/^let s:var = '\\%(%\\|#<\\=\\d\\+\\|##\\=\\)'$/;"	v
s:vim_quitting	bundle/tagbar/autoload/tagbar.vim	/^let s:vim_quitting = 0$/;"	v
s:visibility_symbols	bundle/tagbar/autoload/tagbar/prototypes/basetag.vim	/^let s:visibility_symbols = {$/;"	v
s:vital_base_dir	bundle/neocomplete/autoload/vital/neocomplete.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:warnings	bundle/tagbar/autoload/tagbar.vim	/^let s:warnings = {$/;"	v
s:wcswidth	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^  let s:wcswidth = function('strwidth')$/;"	v
s:wildignores_options_path	bundle/vim-gutentags/autoload/gutentags/ctags.vim	/^let s:wildignores_options_path = ''$/;"	v
s:window_expanded	bundle/tagbar/autoload/tagbar.vim	/^let s:window_expanded   = 0$/;"	v
s:window_pos	bundle/tagbar/autoload/tagbar.vim	/^let s:window_pos = {$/;"	v
s:winrestcmd	bundle/tagbar/autoload/tagbar.vim	/^let s:winrestcmd      = ''$/;"	v
s:worktree_for_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
scala#ConditionalConfirm	bundle/vim-scala/indent/scala.vim	/^function! scala#ConditionalConfirm(msg)$/;"	f
scala#CountBrackets	bundle/vim-scala/indent/scala.vim	/^function! scala#CountBrackets(line, openBracket, closedBracket)$/;"	f
scala#CountCurlies	bundle/vim-scala/indent/scala.vim	/^function! scala#CountCurlies(line)$/;"	f
scala#CountParens	bundle/vim-scala/indent/scala.vim	/^function! scala#CountParens(line)$/;"	f
scala#CurlyMatcher	bundle/vim-scala/indent/scala.vim	/^function! scala#CurlyMatcher()$/;"	f
scala#GetDirForFuzzyFinder	bundle/vim-scala/ftplugin/scala.vim	/^    function! scala#GetDirForFuzzyFinder(from, addon)$/;"	f
scala#GetLine	bundle/vim-scala/indent/scala.vim	/^function! scala#GetLine(lnum)$/;"	f
scala#GetLineAndColumnThatMatchesBracket	bundle/vim-scala/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesBracket(openBracket, closedBracket)$/;"	f
scala#GetLineAndColumnThatMatchesCurly	bundle/vim-scala/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesCurly()$/;"	f
scala#GetLineAndColumnThatMatchesParen	bundle/vim-scala/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesParen()$/;"	f
scala#GetLineThatMatchesBracket	bundle/vim-scala/indent/scala.vim	/^function! scala#GetLineThatMatchesBracket(openBracket, closedBracket)$/;"	f
scala#GetLineThatMatchesCurly	bundle/vim-scala/indent/scala.vim	/^function! scala#GetLineThatMatchesCurly()$/;"	f
scala#GetLineThatMatchesParen	bundle/vim-scala/indent/scala.vim	/^function! scala#GetLineThatMatchesParen()$/;"	f
scala#GetMainDirForFuzzyFinder	bundle/vim-scala/ftplugin/scala.vim	/^    function! scala#GetMainDirForFuzzyFinder(from)$/;"	f
scala#GetPrevCodeLine	bundle/vim-scala/indent/scala.vim	/^function! scala#GetPrevCodeLine(lnum)$/;"	f
scala#GetRootDirForFuzzyFinder	bundle/vim-scala/ftplugin/scala.vim	/^    function! scala#GetRootDirForFuzzyFinder(from)$/;"	f
scala#GetTestDirForFuzzyFinder	bundle/vim-scala/ftplugin/scala.vim	/^    function! scala#GetTestDirForFuzzyFinder(from)$/;"	f
scala#InvertBracketType	bundle/vim-scala/indent/scala.vim	/^function! scala#InvertBracketType(openBracket, closedBracket)$/;"	f
scala#IsParentCase	bundle/vim-scala/indent/scala.vim	/^function! scala#IsParentCase()$/;"	f
scala#LineCompletesBrackets	bundle/vim-scala/indent/scala.vim	/^function! scala#LineCompletesBrackets(openBracket, closedBracket)$/;"	f
scala#LineCompletesDefValr	bundle/vim-scala/indent/scala.vim	/^function! scala#LineCompletesDefValr(lnum, line)$/;"	f
scala#LineCompletesIfElse	bundle/vim-scala/indent/scala.vim	/^function! scala#LineCompletesIfElse(lnum, line)$/;"	f
scala#LineCompletesXML	bundle/vim-scala/indent/scala.vim	/^function! scala#LineCompletesXML(lnum, line)$/;"	f
scala#LineEndsInIncomplete	bundle/vim-scala/indent/scala.vim	/^function! scala#LineEndsInIncomplete(line)$/;"	f
scala#LineIsAClosingXML	bundle/vim-scala/indent/scala.vim	/^function! scala#LineIsAClosingXML(line)$/;"	f
scala#LineIsCompleteIf	bundle/vim-scala/indent/scala.vim	/^function! scala#LineIsCompleteIf(line)$/;"	f
scala#MatchesIncompleteDefValr	bundle/vim-scala/indent/scala.vim	/^function! scala#MatchesIncompleteDefValr(line)$/;"	f
scala#NumberOfBraceGroups	bundle/vim-scala/indent/scala.vim	/^function! scala#NumberOfBraceGroups(line)$/;"	f
scala#SanitizeDirForFuzzyFinder	bundle/vim-scala/ftplugin/scala.vim	/^    function! scala#SanitizeDirForFuzzyFinder(dir)$/;"	f
scala#SpecificLineCompletesBrackets	bundle/vim-scala/indent/scala.vim	/^function! scala#SpecificLineCompletesBrackets(lnum, openBracket, closedBracket)$/;"	f
scala#Test	bundle/vim-scala/indent/scala.vim	/^function! scala#Test(lnum, line, openBracket, closedBracket)$/;"	f
scala#Testhelper	bundle/vim-scala/indent/scala.vim	/^function! scala#Testhelper(lnum, line, openBracket, closedBracket, iteration)$/;"	f
scan	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
search	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:search(pattern) abort dict$/;"	f
search	colors/goldenrod.vim	/^let search = '208'$/;"	v
search_vim_path	bundle/neocomplete/autoload/neocomplete/cache.vim	/^function! s:search_vim_path() abort "{{{$/;"	f
setBit	conf/testdir/bitwise.c	/^int setBit(unsigned int *n , int bit)$/;"	f
setFolded	bundle/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:setFolded(folded) abort dict$/;"	f
set_auto_completion_length	bundle/neocomplete/autoload/neocomplete/commands.vim	/^function! s:set_auto_completion_length(len) abort "{{{$/;"	f
set_color	colors/goldenrod.vim	/^function <SID>set_color(name, fg, bg, ct)$/;"	f
set_complete_results_pos	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:set_complete_results_pos(funcs, cur_text) abort "{{{$/;"	f
set_complete_results_words	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:set_complete_results_words(complete_results) abort "{{{$/;"	f
set_default	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
set_default_menu	bundle/neocomplete/autoload/neocomplete/complete.vim	/^function! s:set_default_menu(words, source) abort "{{{$/;"	f
setup_keymaps	bundle/tagbar/plugin/tagbar.vim	/^function! s:setup_keymaps() abort$/;"	f
setup_options	bundle/tagbar/plugin/tagbar.vim	/^function! s:setup_options() abort$/;"	f
shellesc	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellescape	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
shellescape	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^  function! s:shellescape(command) abort$/;"	f
shift	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:shift(list) abort$/;"	f
should_create_cache	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:should_create_cache(bufnr) " {{{$/;"	f
showMenu	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:showMenu(node)$/;"	f
show_category	bundle/emmet-vim/unittest.vim	/^function! s:show_category(category)$/;"	f
show_done	bundle/emmet-vim/unittest.vim	/^function! s:show_done()$/;"	f
show_ng	bundle/emmet-vim/unittest.vim	/^function! s:show_ng(no, expect, got)$/;"	f
show_ok	bundle/emmet-vim/unittest.vim	/^function! s:show_ok()$/;"	f
show_pass	bundle/emmet-vim/unittest.vim	/^function! s:show_pass(pass)$/;"	f
show_skip	bundle/emmet-vim/unittest.vim	/^function! s:show_skip(no, title)$/;"	f
show_title	bundle/emmet-vim/unittest.vim	/^function! s:show_title(no, title)$/;"	f
show_type	bundle/emmet-vim/unittest.vim	/^function! s:show_type(type)$/;"	f
sid2sfuncs	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
sign	bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:sign(status)$/;"	f
smart_execute_command	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
sort	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
sortAcrossGroups	bundle/vim-scala/plugin/scala.vim	/^function! s:sortAcrossGroups()$/;"	f
sortAndPrint	bundle/vim-scala/plugin/scala.vim	/^function! s:sortAndPrint(imports)$/;"	f
sortIgnoreCase	bundle/vim-scala/plugin/scala.vim	/^function! s:sortIgnoreCase(i1, i2)$/;"	f
sortInsideGroups	bundle/vim-scala/plugin/scala.vim	/^function! s:sortInsideGroups()$/;"	f
sortTags	bundle/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:sortTags(compare_typeinfo) abort dict$/;"	f
sort_by	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
sort_fixture_across_groups	bundle/vim-scala/spec/spec_helper.rb	/^def sort_fixture_across_groups(name)$/;"	f
sorter.filter	bundle/neocomplete/autoload/neocomplete/filters/sorter_filename.vim	/^function! s:sorter.filter(context) abort "{{{$/;"	f
sorter.filter	bundle/neocomplete/autoload/neocomplete/filters/sorter_length.vim	/^function! s:sorter.filter(context) abort "{{{$/;"	f
sorter.filter	bundle/neocomplete/autoload/neocomplete/filters/sorter_rank.vim	/^function! s:sorter.filter(context) abort "{{{$/;"	f
sorter.filter	bundle/neocomplete/autoload/neocomplete/filters/sorter_word.vim	/^function! s:sorter.filter(context) abort "{{{$/;"	f
source.gather_candidates	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:source.gather_candidates(context) abort "{{{$/;"	f
source.gather_candidates	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^function! s:source.gather_candidates(context) abort "{{{$/;"	f
source.gather_candidates	bundle/neocomplete/autoload/neocomplete/sources/file.vim	/^function! s:source.gather_candidates(context) abort "{{{$/;"	f
source.gather_candidates	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:source.gather_candidates(context) abort "{{{$/;"	f
source.gather_candidates	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:source.gather_candidates(context) abort "{{{$/;"	f
source.gather_candidates	bundle/neocomplete/autoload/neocomplete/sources/tag.vim	/^function! s:source.gather_candidates(context) abort "{{{$/;"	f
source.get_complete_position	bundle/neocomplete/autoload/neocomplete/sources/file.vim	/^function! s:source.get_complete_position(context) abort "{{{$/;"	f
source.get_complete_position	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:source.get_complete_position(context) abort "{{{$/;"	f
source.get_complete_position	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:source.get_complete_position(context) abort "{{{$/;"	f
source.hooks.on_final	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:source.hooks.on_final(context) abort "{{{$/;"	f
source.hooks.on_final	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^function! s:source.hooks.on_final(context) abort "{{{$/;"	f
source.hooks.on_final	bundle/neocomplete/autoload/neocomplete/sources/tag.vim	/^function! s:source.hooks.on_final(context) abort "{{{$/;"	f
source.hooks.on_init	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:source.hooks.on_init(context) abort "{{{$/;"	f
source.hooks.on_init	bundle/neocomplete/autoload/neocomplete/sources/dictionary.vim	/^function! s:source.hooks.on_init(context) abort "{{{$/;"	f
source.hooks.on_init	bundle/neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:source.hooks.on_init(context) abort "{{{$/;"	f
source.hooks.on_init	bundle/neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:source.hooks.on_init(context) abort "{{{$/;"	f
source.hooks.on_init	bundle/neocomplete/autoload/neocomplete/sources/tag.vim	/^function! s:source.hooks.on_init(context) abort "{{{$/;"	f
source.hooks.on_post_filter	bundle/neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:source.hooks.on_post_filter(context) abort "{{{$/;"	f
span	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
spawn	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
split3	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
split_at_equals	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^split_at_equals([$=|T], Acc) ->$/;"	f
split_at_equals	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^split_at_equals([H|T], Acc) ->$/;"	f
split_at_equals	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^split_at_equals([], Acc) ->$/;"	f
split_by_displaywidth	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
split_leftright	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
split_posix_text	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:split_posix_text(text, ...) abort$/;"	f
sss	rcs/init.vim	/^nnoremap sss :%s\/\\s\\+$\/\/<CR>$/;"	m
start	bundle/neocomplete/test/neocomplete.vim	/^  let start = reltime()$/;"	v
start_complete	bundle/neocomplete/autoload/unite/sources/neocomplete.vim	/^function! s:start_complete(is_quick_match) abort "{{{$/;"	f
starts_with	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:starts_with(str, prefix) abort$/;"	f
str	bundle/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:str(longsig, full) abort dict$/;"	f
strchars	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f
strfmt	bundle/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:strfmt() abort dict$/;"	f
strfmt	bundle/tagbar/autoload/tagbar/prototypes/pseudotag.vim	/^function! s:strfmt() abort dict$/;"	f
strip	bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:strip(str)$/;"	f
strwidthpart	bundle/neocomplete/autoload/neocomplete/async_cache.vim	/^function! s:strwidthpart(str, width) abort "{{{$/;"	f
strwidthpart	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart_reverse	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
styleFloat	bundle/emmet-vim/docs/static/js/jquery-latest.js	/^var styleFloat = jQuery.browser.msie ?$/;"	v
sub	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
substitute_last	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
substitute_path_separator	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
suite.escape	bundle/neocomplete/test/neocomplete.vim	/^function! s:suite.escape() abort$/;"	f
suite.fuzzy	bundle/neocomplete/test/neocomplete.vim	/^function! s:suite.fuzzy() abort$/;"	f
suite.overlap	bundle/neocomplete/test/neocomplete.vim	/^function! s:suite.overlap() abort$/;"	f
suite.sort	bundle/neocomplete/test/neocomplete.vim	/^function! s:suite.sort() abort$/;"	f
sw	rcs/init.vim	/^  func! s:sw()$/;"	f
sync	bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:sync(bang, bundle) abort$/;"	f
syntastic	bundle/syntastic/plugin/syntastic.vim	/^    augroup syntastic$/;"	a
syntastic	bundle/syntastic/plugin/syntastic.vim	/^augroup syntastic$/;"	a
syntastic	bundle/syntastic/syntax_checkers/rst/sphinx.vim	/^augroup syntastic$/;"	a
syntastic	bundle/syntastic/syntax_checkers/sass/sass.vim	/^augroup syntastic$/;"	a
syntastic#c#GetLocList	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#GetLocList(filetype, subchecker, options) abort " {{{2$/;"	f
syntastic#c#NullOutput	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#NullOutput() abort " {{{2$/;"	f
syntastic#c#ReadConfig	bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#ReadConfig(file) abort " {{{2$/;"	f
syntastic#log#debug	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debug(level, msg, ...) abort " {{{2$/;"	f
syntastic#log#debugDump	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugDump(level) abort " {{{2$/;"	f
syntastic#log#debugShowOptions	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugShowOptions(level, names) abort " {{{2$/;"	f
syntastic#log#debugShowVariables	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugShowVariables(level, names) abort " {{{2$/;"	f
syntastic#log#deprecationWarn	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#deprecationWarn(old, new, ...) abort " {{{2$/;"	f
syntastic#log#error	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#error(msg) abort " {{{2$/;"	f
syntastic#log#info	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#info(msg) abort " {{{2$/;"	f
syntastic#log#ndebug	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#ndebug(level, title, messages) abort " {{{2$/;"	f
syntastic#log#oneTimeWarn	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#oneTimeWarn(msg) abort " {{{2$/;"	f
syntastic#log#warn	bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#warn(msg) abort " {{{2$/;"	f
syntastic#postprocess#compressWhitespace	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#compressWhitespace(errors) abort " {{{2$/;"	f
syntastic#postprocess#cygwinRemoveCR	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#cygwinRemoveCR(errors) abort " {{{2$/;"	f
syntastic#postprocess#decodeXMLEntities	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#decodeXMLEntities(errors) abort " {{{2$/;"	f
syntastic#postprocess#filterForeignErrors	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#filterForeignErrors(errors) abort " {{{2$/;"	f
syntastic#postprocess#guards	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#guards(errors) abort " {{{2$/;"	f
syntastic#postprocess#iconv	bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#iconv(errors) abort " {{{2$/;"	f
syntastic#preprocess#bandit	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#bandit(errors) abort " {{{2$/;"	f
syntastic#preprocess#basex	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#basex(errors) abort " {{{2$/;"	f
syntastic#preprocess#bro	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#bro(errors) abort " {{{2$/;"	f
syntastic#preprocess#cabal	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#cabal(errors) abort " {{{2$/;"	f
syntastic#preprocess#checkstyle	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#checkstyle(errors) abort " {{{2$/;"	f
syntastic#preprocess#coffeelint	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#coffeelint(errors) abort " {{{2$/;"	f
syntastic#preprocess#cppcheck	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#cppcheck(errors) abort " {{{2$/;"	f
syntastic#preprocess#dockerfile_lint	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#dockerfile_lint(errors) abort " {{{2$/;"	f
syntastic#preprocess#dscanner	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#dscanner(errors) abort " {{{2$/;"	f
syntastic#preprocess#flow	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#flow(errors) abort " {{{2$/;"	f
syntastic#preprocess#iconv	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#iconv(errors) abort " {{{2$/;"	f
syntastic#preprocess#jscs	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#jscs(errors) abort " {{{2$/;"	f
syntastic#preprocess#killEmpty	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#killEmpty(errors) abort " {{{2$/;"	f
syntastic#preprocess#lynt	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#lynt(errors) abort " {{{2$/;"	f
syntastic#preprocess#mypy	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#mypy(errors) abort " {{{2$/;"	f
syntastic#preprocess#nix	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#nix(errors) abort " {{{2$/;"	f
syntastic#preprocess#perl	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#perl(errors) abort " {{{2$/;"	f
syntastic#preprocess#perl6	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#perl6(errors) abort " {{{2$/;"	f
syntastic#preprocess#prospector	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#prospector(errors) abort " {{{2$/;"	f
syntastic#preprocess#remark_lint	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#remark_lint(errors) abort " {{{2$/;"	f
syntastic#preprocess#rparse	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#rparse(errors) abort " {{{2$/;"	f
syntastic#preprocess#scss_lint	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#scss_lint(errors) abort " {{{2$/;"	f
syntastic#preprocess#stylelint	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#stylelint(errors) abort " {{{2$/;"	f
syntastic#preprocess#tern_lint	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#tern_lint(errors) abort " {{{2$/;"	f
syntastic#preprocess#tslint	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#tslint(errors) abort " {{{2$/;"	f
syntastic#preprocess#validator	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#validator(errors) abort " {{{2$/;"	f
syntastic#preprocess#vint	bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#vint(errors) abort " {{{2$/;"	f
syntastic#util#CygwinPath	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#CygwinPath(path) abort " {{{2$/;"	f
syntastic#util#DevNull	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#DevNull() abort " {{{2$/;"	f
syntastic#util#Slash	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#Slash() abort " {{{2$/;"	f
syntastic#util#argsescape	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#argsescape(opt) abort " {{{2$/;"	f
syntastic#util#bufIsActive	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#bufIsActive(buffer) abort " {{{2$/;"	f
syntastic#util#bufRawVar	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#bufRawVar(buf, name, ...) abort " {{{2$/;"	f
syntastic#util#bufVar	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#bufVar(buf, name, ...) abort " {{{2$/;"	f
syntastic#util#compareLexi	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#compareLexi(a, b) abort " {{{2$/;"	f
syntastic#util#decodeXMLEntities	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#decodeXMLEntities(string) abort " {{{2$/;"	f
syntastic#util#dictFilter	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#dictFilter(errors, filter) abort " {{{2$/;"	f
syntastic#util#findFileInParent	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#findFileInParent(what, where) abort " {{{2$/;"	f
syntastic#util#findGlobInParent	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#findGlobInParent(what, where) abort " {{{2$/;"	f
syntastic#util#float2str	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#float2str(val) abort " {{{2$/;"	f
syntastic#util#fname2buf	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#fname2buf(fname) abort " {{{2$/;"	f
syntastic#util#getbufvar	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#getbufvar(buf, name, ...) abort " {{{2$/;"	f
syntastic#util#isRunningWindows	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#isRunningWindows() abort " {{{2$/;"	f
syntastic#util#parseShebang	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseShebang(buf) abort " {{{2$/;"	f
syntastic#util#parseVersion	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseVersion(version, ...) abort " {{{2$/;"	f
syntastic#util#rawVar	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#rawVar(name, ...) abort " {{{2$/;"	f
syntastic#util#redraw	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#redraw(full) abort " {{{2$/;"	f
syntastic#util#rmrf	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#rmrf(what) abort " {{{2$/;"	f
syntastic#util#screenWidth	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#screenWidth(str, tabstop) abort " {{{2$/;"	f
syntastic#util#setLastTick	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#setLastTick(buf) abort " {{{2$/;"	f
syntastic#util#setWids	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#setWids() abort " {{{2$/;"	f
syntastic#util#shescape	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#shescape(string) abort " {{{2$/;"	f
syntastic#util#shexpand	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#shexpand(string, ...) abort " {{{2$/;"	f
syntastic#util#stamp	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#stamp() abort " {{{2$/;"	f
syntastic#util#str2float	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#str2float(val) abort " {{{2$/;"	f
syntastic#util#system	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#system(command) abort " {{{2$/;"	f
syntastic#util#tmpdir	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#tmpdir() abort " {{{2$/;"	f
syntastic#util#unique	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#unique(list) abort " {{{2$/;"	f
syntastic#util#var	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#var(name, ...) abort " {{{2$/;"	f
syntastic#util#versionIsAtLeast	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#versionIsAtLeast(installed, required) abort " {{{2$/;"	f
syntastic#util#wformat	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#wformat(format, str) abort " {{{2$/;"	f
syntastic#util#wideMsg	bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#wideMsg(msg) abort " {{{2$/;"	f
system	bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! s:system(cmd) abort$/;"	f
system	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^function! s:system(str, ...) abort$/;"	f
tagbar#CloseWindow	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#CloseWindow() abort$/;"	f
tagbar#OpenWindow	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#OpenWindow(...) abort$/;"	f
tagbar#RestoreSession	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#RestoreSession() abort$/;"	f
tagbar#SetFoldLevel	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#SetFoldLevel(level, force) abort$/;"	f
tagbar#ToggleWindow	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#ToggleWindow(...) abort$/;"	f
tagbar#autoopen	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#autoopen(...) abort$/;"	f
tagbar#currentfile	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#currentfile() abort$/;"	f
tagbar#currenttag	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#currenttag(fmt, default, ...) abort$/;"	f
tagbar#debug#enabled	bundle/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#enabled() abort$/;"	f
tagbar#debug#log	bundle/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#log(msg) abort$/;"	f
tagbar#debug#log_ctags_output	bundle/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#log_ctags_output(output) abort$/;"	f
tagbar#debug#start_debug	bundle/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#start_debug(...) abort$/;"	f
tagbar#debug#stop_debug	bundle/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#stop_debug() abort$/;"	f
tagbar#gettypeconfig	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#gettypeconfig(type) abort$/;"	f
tagbar#getusertypes	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#getusertypes() abort$/;"	f
tagbar#highlighttag	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#highlighttag(openfolds, force) abort$/;"	f
tagbar#inspect	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#inspect(var) abort$/;"	f
tagbar#is_paused	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#is_paused() abort$/;"	f
tagbar#prototypes#basetag#new	bundle/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! tagbar#prototypes#basetag#new(name) abort$/;"	f
tagbar#prototypes#fileinfo#new	bundle/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! tagbar#prototypes#fileinfo#new(fname, ftype, typeinfo) abort$/;"	f
tagbar#prototypes#kindheadertag#new	bundle/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! tagbar#prototypes#kindheadertag#new(name) abort$/;"	f
tagbar#prototypes#normaltag#new	bundle/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! tagbar#prototypes#normaltag#new(name) abort$/;"	f
tagbar#prototypes#pseudotag#new	bundle/tagbar/autoload/tagbar/prototypes/pseudotag.vim	/^function! tagbar#prototypes#pseudotag#new(name) abort$/;"	f
tagbar#prototypes#splittag#new	bundle/tagbar/autoload/tagbar/prototypes/splittag.vim	/^function! tagbar#prototypes#splittag#new(name) abort$/;"	f
tagbar#prototypes#typeinfo#new	bundle/tagbar/autoload/tagbar/prototypes/typeinfo.vim	/^function! tagbar#prototypes#typeinfo#new(...) abort$/;"	f
tagbar#sorting#sort	bundle/tagbar/autoload/tagbar/sorting.vim	/^function! tagbar#sorting#sort(tags, compareby, compare_typeinfo) abort$/;"	f
tagbar#state#get_current_file	bundle/tagbar/autoload/tagbar/state.vim	/^function! tagbar#state#get_current_file(force_current) abort$/;"	f
tagbar#state#set_current_file	bundle/tagbar/autoload/tagbar/state.vim	/^function! tagbar#state#set_current_file(fileinfo) abort$/;"	f
tagbar#state#set_paused	bundle/tagbar/autoload/tagbar/state.vim	/^function! tagbar#state#set_paused() abort$/;"	f
tagbar#toggle_pause	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#toggle_pause() abort$/;"	f
tagbar#types#ctags#init	bundle/tagbar/autoload/tagbar/types/ctags.vim	/^function! tagbar#types#ctags#init(supported_types) abort$/;"	f
tagbar#types#uctags#init	bundle/tagbar/autoload/tagbar/types/uctags.vim	/^function! tagbar#types#uctags#init(supported_types) abort$/;"	f
take_while	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
test	bundle/emmet-vim/unittest.vim	/^function! s:test(...)$/;"	f
text	bundle/syntastic/syntax_checkers/python/codec.py	/^            text = codecs.lookup(match.groupdict()["coding"]).incrementaldecoder().decode($/;"	v
text	bundle/syntastic/syntax_checkers/python/codec.py	/^        text = ''.join(text).encode('utf-8')$/;"	v
text	bundle/syntastic/syntax_checkers/python/codec.py	/^        text = fle.readlines()$/;"	v
throw	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:throw(string) abort$/;"	f
toggleBit	conf/testdir/bitwise.c	/^int toggleBit(unsigned int *n, int bit)$/;"	f
toggleFold	bundle/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:toggleFold(fileinfo) abort dict$/;"	f
toggleIgnoreFilter	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleShowBookmarks	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowHidden()$/;"	f
toggleZoom	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleZoom()$/;"	f
translate_path	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^translate_path(Dir, {i, Path}) ->$/;"	f
translate_path	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^translate_path(_, Other) -> Other.$/;"	f
translate_paths	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^translate_paths(Dir, RebarOpts) ->$/;"	f
trim	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:trim(str) abort$/;"	f
trim_end	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:trim_end(str) abort$/;"	f
trim_start	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:trim_start(str) abort$/;"	f
truncate	bundle/neocomplete/autoload/neocomplete/async_cache.vim	/^function! s:truncate(str, width) abort "{{{$/;"	f
truncate	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate_skipping	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
unescape	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:unescape(str, chars) abort$/;"	f
unescape_pattern	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:unescape_pattern(str) abort$/;"	f
uniq	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
uniq_by	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
unite#sources#neocomplete#define	bundle/neocomplete/autoload/unite/sources/neocomplete.vim	/^function! unite#sources#neocomplete#define() abort "{{{$/;"	f
unite#sources#neocomplete#start_complete	bundle/neocomplete/autoload/unite/sources/neocomplete.vim	/^function! unite#sources#neocomplete#start_complete() abort "{{{$/;"	f
unite#sources#neocomplete#start_quick_match	bundle/neocomplete/autoload/unite/sources/neocomplete.vim	/^function! unite#sources#neocomplete#start_quick_match() abort "{{{$/;"	f
unload	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:unload() abort dict$/;"	f
unsetBit	conf/testdir/bitwise.c	/^int unsetBit(unsigned int *n, int bit)$/;"	f
unshift	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
upDirCurrentRootClosed	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootClosed()$/;"	f
upDirCurrentRootOpen	bundle/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootOpen()$/;"	f
update_tags	bundle/vim-gutentags/autoload/gutentags.vim	/^function! s:update_tags(bufno, module, write_mode, queue_mode) abort$/;"	f
use_previous_result	bundle/neocomplete/autoload/neocomplete/complete.vim	/^function! s:use_previous_result(source, context) abort "{{{$/;"	f
use_raw_list	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%FILE_LIST_CMD_IS_ABSOLUTE%"]==["1"] set use_raw_list=1$/;"	v
use_raw_list	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^        if ["%PROJECT_ROOT%"]==["."] set use_raw_list=1$/;"	v
use_raw_list	bundle/vim-gutentags/plat/win32/update_tags.cmd	/^        set use_raw_list=0$/;"	v
userAgent	bundle/emmet-vim/docs/static/js/jquery-latest.js	/^var userAgent = navigator.userAgent.toLowerCase();$/;"	v
variable	conf/testdir/cppex.cpp	/^        int variable;$/;"	m	class:programming	file:
view_changelog	bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! s:view_changelog()$/;"	f
view_log	bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! s:view_log()$/;"	f
vimlintOutput	bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^function! s:vimlintOutput(filename, pos, ev, eid, mes, obj) " {{{2$/;"	f
vital#	bundle/neocomplete/autoload/vital/_neocomplete.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vital#_neocomplete#Data#List#import	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^  function! vital#_neocomplete#Data#List#import() abort$/;"	f
vital#_neocomplete#Data#String#import	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^  function! vital#_neocomplete#Data#String#import() abort$/;"	f
vital#_neocomplete#Prelude#import	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^  function! vital#_neocomplete#Prelude#import() abort$/;"	f
vital#_neocomplete#Process#import	bundle/neocomplete/autoload/vital/_neocomplete/Process.vim	/^  function! vital#_neocomplete#Process#import() abort$/;"	f
vital#_neocomplete#System#Cache#Deprecated#import	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^  function! vital#_neocomplete#System#Cache#Deprecated#import() abort$/;"	f
vital#of	bundle/neocomplete/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
vital_files	bundle/neocomplete/autoload/vital/neocomplete.vim	/^function! s:vital_files() abort$/;"	f
vundle#begin	bundle/Vundle.vim/autoload/vundle.vim	/^func! vundle#begin(...) abort$/;"	f
vundle#config#activate_bundles	bundle/Vundle.vim/autoload/vundle/config.vim	/^func! vundle#config#activate_bundles()$/;"	f
vundle#config#bundle	bundle/Vundle.vim/autoload/vundle/config.vim	/^func! vundle#config#bundle(arg, ...)$/;"	f
vundle#config#init	bundle/Vundle.vim/autoload/vundle/config.vim	/^func! vundle#config#init()$/;"	f
vundle#config#init_bundle	bundle/Vundle.vim/autoload/vundle/config.vim	/^func! vundle#config#init_bundle(name, opts)$/;"	f
vundle#config#require	bundle/Vundle.vim/autoload/vundle/config.vim	/^func! vundle#config#require(bundles) abort$/;"	f
vundle#end	bundle/Vundle.vim/autoload/vundle.vim	/^func! vundle#end(...) abort$/;"	f
vundle#installer#clean	bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#clean(bang) abort$/;"	f
vundle#installer#delete	bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#delete(bang, dir_name) abort$/;"	f
vundle#installer#docs	bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#docs() abort$/;"	f
vundle#installer#helptags	bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#helptags(bundles) abort$/;"	f
vundle#installer#install	bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#install(bang, name) abort$/;"	f
vundle#installer#install_and_require	bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#install_and_require(bang, name) abort$/;"	f
vundle#installer#list	bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#list(bang) abort$/;"	f
vundle#installer#new	bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#new(bang, ...) abort$/;"	f
vundle#installer#run	bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#run(func_name, name, ...) abort$/;"	f
vundle#installer#shellesc	bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#shellesc(cmd) abort$/;"	f
vundle#installer#shellesc_cd	bundle/Vundle.vim/autoload/vundle/installer.vim	/^func! vundle#installer#shellesc_cd(cmd) abort$/;"	f
vundle#rc	bundle/Vundle.vim/autoload/vundle.vim	/^func! vundle#rc(...) abort$/;"	f
vundle#scripts#all	bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! vundle#scripts#all(bang, ...)$/;"	f
vundle#scripts#bundle_names	bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! vundle#scripts#bundle_names(names)$/;"	f
vundle#scripts#complete	bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! vundle#scripts#complete(a,c,d)$/;"	f
vundle#scripts#reload	bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! vundle#scripts#reload() abort$/;"	f
vundle#scripts#view	bundle/Vundle.vim/autoload/vundle/scripts.vim	/^func! vundle#scripts#view(title, headers, results)$/;"	f
warning	bundle/tagbar/autoload/tagbar.vim	/^function! s:warning(msg) abort$/;"	f
wcswidth	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	bundle/neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
which_build_tool	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^which_build_tool(Dir, Profile) ->$/;"	f
which_compile_opts_profile	bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^which_compile_opts_profile(File) ->$/;"	f
white	colors/goldenrod.vim	/^let white = '254'$/;"	v
winshell	bundle/vim-fugitive/autoload/fugitive.vim	/^function! s:winshell() abort$/;"	f
with_index	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
wrap	bundle/neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
write_triggered_update_tags	bundle/vim-gutentags/autoload/gutentags.vim	/^function! s:write_triggered_update_tags(bufno) abort$/;"	f
writefile	bundle/neocomplete/autoload/vital/_neocomplete/System/Cache/Deprecated.vim	/^function! s:writefile(cache_dir, filename, list) abort$/;"	f
ycm_core	conf/ycm/c99_ycm_extra_conf.py	/^import ycm_core$/;"	i
ycm_core	conf/ycm/templates/valloric_ycm_extra_conf.py	/^import ycm_core$/;"	i
ycm_core	conf/ycm/ycm_extra_conf.py	/^import ycm_core$/;"	i
zip	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:zip(...) abort$/;"	f
zip_fill	bundle/neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
