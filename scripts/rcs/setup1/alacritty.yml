env:
  TERM: xterm-256color

window:
  dimensions:
    columns: 0
    lines: 0

  padding:
    x: 2
    y: 2
  dynamic_padding: false
  decorations: none

  # When true, alacritty starts maximized.
  startup_mode: SimpleFullscreen

title: Alacritty

scrolling:
  history: 10000
  multiplier: 3
  faux_multiplier: 3
  auto_scroll: false

tabspaces: 8

font:
  normal:
    family: "MesloLGS NF"

font:
  normal:
    family: "MesloLGS NF"
    #family: DejaVu Sans Mono
    style: Book
  bold:
    #family: DejaVu Sans Mono
    family: "MesloLGS NF"
    style: Bold
  italic:
    #family: DejaVu Sans Mono
    family: "MesloLGS NF"
    style: Italic
  size: 14.0
  offset:
    x: 0
    y: 0
  glyph_offset:
    x: 0
    y: 0

  use_thin_strokes: true
draw_bold_text_with_bright_colors: true

colors:
  primary:
    background: '0xfdf6e3'
    foreground: '0x586e75'

  # Normal colors
  normal:
    black:   '0x073642'
    red:     '0xdc322f'
    green:   '0x859900'
    yellow:  '0xb58900'
    blue:    '0x268bd2'
    magenta: '0xd33682'
    cyan:    '0x2aa198'
    white:   '0xeee8d5'

  # Bright colors
  bright:
    black:   '0x002b36'
    red:     '0xcb4b16'
    green:   '0x586e75'
    yellow:  '0x657b83'
    blue:    '0x839496'
    magenta: '0x6c71c4'
    cyan:    '0x93a1a1'
    white:   '0xfdf6e3'

visual_bell:
  animation: EaseOutExpo
  duration: 0
  color: '0xffffff'

background_opacity: 1.0

selection:
  semantic_escape_chars: ",â”‚`|:\"' ()[]{}<>\t"
  save_to_clipboard: false

dynamic_title: true

cursor:
  style: Block

  unfocused_hollow: true

live_config_reload: true

debug:
  render_timer: false

  persistent_logging: false

  log_level: Warn

  # Print all received window events.
  print_events: false

  # Record all characters and escape sequences as test data.
  ref_test: false


# Mouse bindings
#
# Available fields:
#   - mouse
#   - action
#   - mods (optional)
#
# Values for `mouse`:
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# All available `mods` and `action` values are documented in the key binding
# section.
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }

   # If this is `true`, the cursor is temporarily hidden when typing.
  hide_when_typing: false

  url:
    # URL launcher
    #
    # This program is executed when clicking on a text which is recognized as a URL.
    # The URL is always added to the command as the last parameter.
    #
    # When set to `None`, URL launching will be disabled completely.
    #
    # Default:
    #   - (macOS) open
    #   - (Linux) xdg-open
    #   - (Windows) explorer
    launcher:
      program: open
      args: []

    # URL modifiers
    #
    # These are the modifiers that need to be held down for opening URLs when clicking
    # on them. The available modifiers are documented in the key binding section.
    modifiers: None


# Shell
#
# You can set shell.program to the path of your favorite shell, e.g. /bin/fish.
# Entries in shell.args are passed unmodified as arguments to the shell.
#
 shell:
   program: /bin/zsh
   args:
     - -l
     - -c
     - "tmux"

# Key bindings
#
# Each binding is defined as an object with some properties. Most of the
# properties are optional. All of the alphabetical keys should have a letter for
# the `key` value such as `V`. Function keys are probably what you would expect
# as well (F1, F2, ..). The number keys above the main keyboard are encoded as
# `Key1`, `Key2`, etc. Keys on the number pad are encoded `Number1`, `Number2`,
# etc.  These all match the glutin::VirtualKeyCode variants.
#
# A list with all available `key` names can be found here:
# https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
# Possible values for `mods`
# `Command`, `Super` refer to the super/command/windows key
# `Control` for the control key
# `Shift` for the Shift key
# `Alt` and `Option` refer to alt/option
#
# mods may be combined with a `|`. For example, requiring control and shift
# looks like:
#
# mods: Control|Shift
#
# The parser is currently quite sensitive to whitespace and capitalization -
# capitalization must match exactly, and piped items must not have whitespace
# around them.
#
# Either an `action`, `chars`, or `command` field must be present.
#   `action` must be one of `Paste`, `PasteSelection`, `Copy`, or `Quit`.
#   `chars` writes the specified string every time that binding is activated.
#     These should generally be escape sequences, but they can be configured to
#     send arbitrary strings of bytes.
#   `command` must be a map containing a `program` string, and `args` array of
#     strings. For example:
#     - { ... , command: { program: "alacritty", args: ["-e", "vttest"] } }
key_bindings:
  # (macos bindings)
  - { key: N,      mods: Command,         action: SpawnNewInstance       }
  - { key: Key0,   mods: Command,         action: ResetFontSize          }
  - { key: Equals, mods: Command,         action: IncreaseFontSize       }
  - { key: Add,    mods: Command,         action: IncreaseFontSize       }
  - { key: Minus,  mods: Command,         action: DecreaseFontSize       }
  - { key: K,      mods: Command,         action: ClearHistory           }
  - { key: K,      mods: Command,         chars: "\x0c"                  }
  - { key: V,      mods: Command,         action: Paste                  }
  - { key: C,      mods: Command,         action: Copy                   }
  - { key: H,      mods: Command,         action: Hide                   }
  - { key: Q,      mods: Command,         action: Quit                   }
  - { key: W,      mods: Command,         action: Quit                   }
  - { key: F,      mods: Command|Control, action: ToggleSimpleFullscreen }

  # (common bindings)
  - { key: Paste,                    action: Paste                      }
  - { key: Copy,                     action: Copy                       }
  - { key: L,         mods: Control, action: ClearLogNotice             }
  - { key: L,         mods: Control, chars: "\x0c"                      }
  - { key: PageUp,    mods: Shift,   action: ScrollPageUp,   mode: ~Alt }
  - { key: PageDown,  mods: Shift,   action: ScrollPageDown, mode: ~Alt }
  - { key: Home,      mods: Shift,   action: ScrollToTop,    mode: ~Alt }
  - { key: End,       mods: Shift,   action: ScrollToBottom, mode: ~Alt }
